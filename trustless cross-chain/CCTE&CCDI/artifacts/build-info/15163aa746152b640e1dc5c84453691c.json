{
	"id": "15163aa746152b640e1dc5c84453691c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"trustless cross-chain/trading pair formation/NFTstore.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NFTStorage is Ownable {\n    IERC721 public gameItemContract;\n    mapping(bytes32 => bool) public storedNFTs;\n\n    event NFTStored(address indexed owner, uint256 indexed tokenId);\n\n    constructor(address _gameItemContract) {\n        gameItemContract = IERC721(_gameItemContract);\n    }\n\n    function storeNFT(uint256 tokenId) external {\n        require(gameItemContract.ownerOf(tokenId) == msg.sender, \"You are not the owner of this NFT\");\n        bytes32 storageId = keccak256(abi.encodePacked(msg.sender, tokenId));\n        require(!storedNFTs[storageId], \"NFT already stored\");\n\n        storedNFTs[storageId] = true;\n        gameItemContract.transferFrom(msg.sender, address(this), tokenId);\n\n        emit NFTStored(msg.sender, tokenId);\n    }\n\n    function getStoredStatus(uint256 tokenId) external view returns (bool) {\n        bytes32 storageId = keccak256(abi.encodePacked(msg.sender, tokenId));\n        return storedNFTs[storageId];\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"trustless cross-chain/trading pair formation/NFTstore.sol": {
				"NFTStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gameItemContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "NFTStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "gameItemContract",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getStoredStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "storeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "storedNFTs",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":170:1127  contract NFTStorage is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":363:464  constructor(address _gameItemContract) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":439:456  _gameItemContract */\n  dup1\n    /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":412:428  gameItemContract */\n  0x01\n  0x00\n    /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":412:457  gameItemContract = IERC721(_gameItemContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":363:464  constructor(address _gameItemContract) {... */\n  pop\n    /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":170:1127  contract NFTStorage is Ownable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":932:1051   */\ntag_35:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_37\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":170:1127  contract NFTStorage is Ownable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":170:1127  contract NFTStorage is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc9ff64ec\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xc9ff64ec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xceeddea4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf9be04ca\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x22341741\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":244:286  mapping(bytes32 => bool) public storedNFTs */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":931:1125  function getStoredStatus(uint256 tokenId) external view returns (bool) {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":470:925  function storeNFT(uint256 tokenId) external {... */\n    tag_7:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":207:238  IERC721 public gameItemContract */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":244:286  mapping(bytes32 => bool) public storedNFTs */\n    tag_14:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":931:1125  function getStoredStatus(uint256 tokenId) external view returns (bool) {... */\n    tag_26:\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":996:1000  bool */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1012:1029  bytes32 storageId */\n      dup1\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1059:1069  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1071:1078  tokenId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1042:1079  abi.encodePacked(msg.sender, tokenId) */\n      add(0x20, mload(0x40))\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1032:1080  keccak256(abi.encodePacked(msg.sender, tokenId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1012:1080  bytes32 storageId = keccak256(abi.encodePacked(msg.sender, tokenId)) */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1097:1107  storedNFTs */\n      0x02\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1097:1118  storedNFTs[storageId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1108:1117  storageId */\n      dup3\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1097:1118  storedNFTs[storageId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":1090:1118  return storedNFTs[storageId] */\n      swap2\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":931:1125  function getStoredStatus(uint256 tokenId) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":470:925  function storeNFT(uint256 tokenId) external {... */\n    tag_30:\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":569:579  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":532:579  gameItemContract.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":532:548  gameItemContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":532:556  gameItemContract.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":557:564  tokenId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":532:565  gameItemContract.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":532:579  gameItemContract.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":524:617  require(gameItemContract.ownerOf(tokenId) == msg.sender, \"You are not the owner of this NFT\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":627:644  bytes32 storageId */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":674:684  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":686:693  tokenId */\n      dup3\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":657:694  abi.encodePacked(msg.sender, tokenId) */\n      add(0x20, mload(0x40))\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":647:695  keccak256(abi.encodePacked(msg.sender, tokenId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":627:695  bytes32 storageId = keccak256(abi.encodePacked(msg.sender, tokenId)) */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":714:724  storedNFTs */\n      0x02\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":714:735  storedNFTs[storageId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":725:734  storageId */\n      dup3\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":714:735  storedNFTs[storageId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":713:735  !storedNFTs[storageId] */\n      iszero\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":705:758  require(!storedNFTs[storageId], \"NFT already stored\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":793:797  true */\n      0x01\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":769:779  storedNFTs */\n      0x02\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":769:790  storedNFTs[storageId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":780:789  storageId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":769:790  storedNFTs[storageId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":769:797  storedNFTs[storageId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":807:823  gameItemContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":807:836  gameItemContract.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":837:847  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":857:861  this */\n      address\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":864:871  tokenId */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":807:872  gameItemContract.transferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":910:917  tokenId */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":898:908  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":888:918  NFTStored(msg.sender, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcd7d8045490761f6468db55184c41c74ab6696514d5c6b630287bbd2f4e485c1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":514:925  {... */\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":470:925  function storeNFT(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTstore.sol\":207:238  IERC721 public gameItemContract */\n    tag_36:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_85:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_87:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_88:\n        /* \"#utility.yul\":490:514   */\n      tag_128\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_87\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_129:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_89:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_131\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_88\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_134\n      tag_85\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":766:885   */\n    tag_133:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_135\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_89\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_90:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_91:\n        /* \"#utility.yul\":1202:1223   */\n      tag_138\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_90\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_16:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_140\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_91\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1452:1578   */\n    tag_92:\n        /* \"#utility.yul\":1489:1496   */\n      0x00\n        /* \"#utility.yul\":1529:1571   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1522:1527   */\n      dup3\n        /* \"#utility.yul\":1518:1572   */\n      and\n        /* \"#utility.yul\":1507:1572   */\n      swap1\n      pop\n        /* \"#utility.yul\":1452:1578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1584:1680   */\n    tag_93:\n        /* \"#utility.yul\":1621:1628   */\n      0x00\n        /* \"#utility.yul\":1650:1674   */\n      tag_143\n        /* \"#utility.yul\":1668:1673   */\n      dup3\n        /* \"#utility.yul\":1650:1674   */\n      tag_92\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1639:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1584:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1804   */\n    tag_94:\n        /* \"#utility.yul\":1773:1797   */\n      tag_145\n        /* \"#utility.yul\":1791:1796   */\n      dup2\n        /* \"#utility.yul\":1773:1797   */\n      tag_93\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1768:1771   */\n      dup3\n        /* \"#utility.yul\":1761:1798   */\n      mstore\n        /* \"#utility.yul\":1686:1804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:2032   */\n    tag_22:\n        /* \"#utility.yul\":1903:1907   */\n      0x00\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1930:1939   */\n      dup3\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"#utility.yul\":1918:1944   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:2025   */\n      tag_147\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1954:2025   */\n      tag_94\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1810:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2115   */\n    tag_95:\n        /* \"#utility.yul\":2075:2082   */\n      0x00\n        /* \"#utility.yul\":2104:2109   */\n      dup2\n        /* \"#utility.yul\":2093:2109   */\n      swap1\n      pop\n        /* \"#utility.yul\":2038:2115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2121:2243   */\n    tag_96:\n        /* \"#utility.yul\":2194:2218   */\n      tag_150\n        /* \"#utility.yul\":2212:2217   */\n      dup2\n        /* \"#utility.yul\":2194:2218   */\n      tag_95\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2187:2192   */\n      dup2\n        /* \"#utility.yul\":2184:2219   */\n      eq\n        /* \"#utility.yul\":2174:2237   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":2233:2234   */\n      0x00\n        /* \"#utility.yul\":2230:2231   */\n      dup1\n        /* \"#utility.yul\":2223:2235   */\n      revert\n        /* \"#utility.yul\":2174:2237   */\n    tag_151:\n        /* \"#utility.yul\":2121:2243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2249:2388   */\n    tag_97:\n        /* \"#utility.yul\":2295:2300   */\n      0x00\n        /* \"#utility.yul\":2333:2339   */\n      dup2\n        /* \"#utility.yul\":2320:2340   */\n      calldataload\n        /* \"#utility.yul\":2311:2340   */\n      swap1\n      pop\n        /* \"#utility.yul\":2349:2382   */\n      tag_153\n        /* \"#utility.yul\":2376:2381   */\n      dup2\n        /* \"#utility.yul\":2349:2382   */\n      tag_96\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2249:2388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2723   */\n    tag_25:\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2502:2504   */\n      0x20\n        /* \"#utility.yul\":2490:2499   */\n      dup3\n        /* \"#utility.yul\":2481:2488   */\n      dup5\n        /* \"#utility.yul\":2477:2500   */\n      sub\n        /* \"#utility.yul\":2473:2505   */\n      slt\n        /* \"#utility.yul\":2470:2589   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":2508:2587   */\n      tag_156\n      tag_85\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2470:2589   */\n    tag_155:\n        /* \"#utility.yul\":2628:2629   */\n      0x00\n        /* \"#utility.yul\":2653:2706   */\n      tag_157\n        /* \"#utility.yul\":2698:2705   */\n      dup5\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2678:2687   */\n      dup6\n        /* \"#utility.yul\":2674:2696   */\n      add\n        /* \"#utility.yul\":2653:2706   */\n      tag_97\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2643:2706   */\n      swap2\n      pop\n        /* \"#utility.yul\":2599:2716   */\n      pop\n        /* \"#utility.yul\":2394:2723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:2851   */\n    tag_98:\n        /* \"#utility.yul\":2802:2826   */\n      tag_159\n        /* \"#utility.yul\":2820:2825   */\n      dup2\n        /* \"#utility.yul\":2802:2826   */\n      tag_93\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2795:2800   */\n      dup2\n        /* \"#utility.yul\":2792:2827   */\n      eq\n        /* \"#utility.yul\":2782:2845   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2841:2842   */\n      0x00\n        /* \"#utility.yul\":2838:2839   */\n      dup1\n        /* \"#utility.yul\":2831:2843   */\n      revert\n        /* \"#utility.yul\":2782:2845   */\n    tag_160:\n        /* \"#utility.yul\":2729:2851   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2857:2996   */\n    tag_99:\n        /* \"#utility.yul\":2903:2908   */\n      0x00\n        /* \"#utility.yul\":2941:2947   */\n      dup2\n        /* \"#utility.yul\":2928:2948   */\n      calldataload\n        /* \"#utility.yul\":2919:2948   */\n      swap1\n      pop\n        /* \"#utility.yul\":2957:2990   */\n      tag_162\n        /* \"#utility.yul\":2984:2989   */\n      dup2\n        /* \"#utility.yul\":2957:2990   */\n      tag_98\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2857:2996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3002:3331   */\n    tag_33:\n        /* \"#utility.yul\":3061:3067   */\n      0x00\n        /* \"#utility.yul\":3110:3112   */\n      0x20\n        /* \"#utility.yul\":3098:3107   */\n      dup3\n        /* \"#utility.yul\":3089:3096   */\n      dup5\n        /* \"#utility.yul\":3085:3108   */\n      sub\n        /* \"#utility.yul\":3081:3113   */\n      slt\n        /* \"#utility.yul\":3078:3197   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":3116:3195   */\n      tag_165\n      tag_85\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3078:3197   */\n    tag_164:\n        /* \"#utility.yul\":3236:3237   */\n      0x00\n        /* \"#utility.yul\":3261:3314   */\n      tag_166\n        /* \"#utility.yul\":3306:3313   */\n      dup5\n        /* \"#utility.yul\":3297:3303   */\n      dup3\n        /* \"#utility.yul\":3286:3295   */\n      dup6\n        /* \"#utility.yul\":3282:3304   */\n      add\n        /* \"#utility.yul\":3261:3314   */\n      tag_99\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3251:3314   */\n      swap2\n      pop\n        /* \"#utility.yul\":3207:3324   */\n      pop\n        /* \"#utility.yul\":3002:3331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3337:3397   */\n    tag_100:\n        /* \"#utility.yul\":3365:3368   */\n      0x00\n        /* \"#utility.yul\":3386:3391   */\n      dup2\n        /* \"#utility.yul\":3379:3391   */\n      swap1\n      pop\n        /* \"#utility.yul\":3337:3397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3403:3545   */\n    tag_101:\n        /* \"#utility.yul\":3453:3462   */\n      0x00\n        /* \"#utility.yul\":3486:3539   */\n      tag_169\n        /* \"#utility.yul\":3504:3538   */\n      tag_170\n        /* \"#utility.yul\":3513:3537   */\n      tag_171\n        /* \"#utility.yul\":3531:3536   */\n      dup5\n        /* \"#utility.yul\":3513:3537   */\n      tag_92\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3504:3538   */\n      tag_100\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3486:3539   */\n      tag_92\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3473:3539   */\n      swap1\n      pop\n        /* \"#utility.yul\":3403:3545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_102:\n        /* \"#utility.yul\":3601:3610   */\n      0x00\n        /* \"#utility.yul\":3634:3671   */\n      tag_173\n        /* \"#utility.yul\":3665:3670   */\n      dup3\n        /* \"#utility.yul\":3634:3671   */\n      tag_101\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3621:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3824   */\n    tag_103:\n        /* \"#utility.yul\":3748:3757   */\n      0x00\n        /* \"#utility.yul\":3781:3818   */\n      tag_175\n        /* \"#utility.yul\":3812:3817   */\n      dup3\n        /* \"#utility.yul\":3781:3818   */\n      tag_102\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3768:3818   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3830:3991   */\n    tag_104:\n        /* \"#utility.yul\":3932:3984   */\n      tag_177\n        /* \"#utility.yul\":3978:3983   */\n      dup2\n        /* \"#utility.yul\":3932:3984   */\n      tag_103\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3927:3930   */\n      dup3\n        /* \"#utility.yul\":3920:3985   */\n      mstore\n        /* \"#utility.yul\":3830:3991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3997:4249   */\n    tag_38:\n        /* \"#utility.yul\":4105:4109   */\n      0x00\n        /* \"#utility.yul\":4143:4145   */\n      0x20\n        /* \"#utility.yul\":4132:4141   */\n      dup3\n        /* \"#utility.yul\":4128:4146   */\n      add\n        /* \"#utility.yul\":4120:4146   */\n      swap1\n      pop\n        /* \"#utility.yul\":4156:4242   */\n      tag_179\n        /* \"#utility.yul\":4239:4240   */\n      0x00\n        /* \"#utility.yul\":4228:4237   */\n      dup4\n        /* \"#utility.yul\":4224:4241   */\n      add\n        /* \"#utility.yul\":4215:4221   */\n      dup5\n        /* \"#utility.yul\":4156:4242   */\n      tag_104\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3997:4249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:4349   */\n    tag_105:\n        /* \"#utility.yul\":4288:4296   */\n      0x00\n        /* \"#utility.yul\":4336:4341   */\n      dup2\n        /* \"#utility.yul\":4332:4334   */\n      0x60\n        /* \"#utility.yul\":4328:4342   */\n      shl\n        /* \"#utility.yul\":4307:4342   */\n      swap1\n      pop\n        /* \"#utility.yul\":4255:4349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4355:4449   */\n    tag_106:\n        /* \"#utility.yul\":4394:4401   */\n      0x00\n        /* \"#utility.yul\":4423:4443   */\n      tag_182\n        /* \"#utility.yul\":4437:4442   */\n      dup3\n        /* \"#utility.yul\":4423:4443   */\n      tag_105\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4412:4443   */\n      swap1\n      pop\n        /* \"#utility.yul\":4355:4449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4455:4555   */\n    tag_107:\n        /* \"#utility.yul\":4494:4501   */\n      0x00\n        /* \"#utility.yul\":4523:4549   */\n      tag_184\n        /* \"#utility.yul\":4543:4548   */\n      dup3\n        /* \"#utility.yul\":4523:4549   */\n      tag_106\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4512:4549   */\n      swap1\n      pop\n        /* \"#utility.yul\":4455:4555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4561:4718   */\n    tag_108:\n        /* \"#utility.yul\":4666:4711   */\n      tag_186\n        /* \"#utility.yul\":4686:4710   */\n      tag_187\n        /* \"#utility.yul\":4704:4709   */\n      dup3\n        /* \"#utility.yul\":4686:4710   */\n      tag_93\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4666:4711   */\n      tag_107\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4661:4664   */\n      dup3\n        /* \"#utility.yul\":4654:4712   */\n      mstore\n        /* \"#utility.yul\":4561:4718   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4724:4803   */\n    tag_109:\n        /* \"#utility.yul\":4763:4770   */\n      0x00\n        /* \"#utility.yul\":4792:4797   */\n      dup2\n        /* \"#utility.yul\":4781:4797   */\n      swap1\n      pop\n        /* \"#utility.yul\":4724:4803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4809:4966   */\n    tag_110:\n        /* \"#utility.yul\":4914:4959   */\n      tag_190\n        /* \"#utility.yul\":4934:4958   */\n      tag_191\n        /* \"#utility.yul\":4952:4957   */\n      dup3\n        /* \"#utility.yul\":4934:4958   */\n      tag_95\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4914:4959   */\n      tag_109\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4909:4912   */\n      dup3\n        /* \"#utility.yul\":4902:4960   */\n      mstore\n        /* \"#utility.yul\":4809:4966   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4972:5369   */\n    tag_48:\n        /* \"#utility.yul\":5112:5115   */\n      0x00\n        /* \"#utility.yul\":5127:5202   */\n      tag_193\n        /* \"#utility.yul\":5198:5201   */\n      dup3\n        /* \"#utility.yul\":5189:5195   */\n      dup6\n        /* \"#utility.yul\":5127:5202   */\n      tag_108\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5227:5229   */\n      0x14\n        /* \"#utility.yul\":5222:5225   */\n      dup3\n        /* \"#utility.yul\":5218:5230   */\n      add\n        /* \"#utility.yul\":5211:5230   */\n      swap2\n      pop\n        /* \"#utility.yul\":5240:5315   */\n      tag_194\n        /* \"#utility.yul\":5311:5314   */\n      dup3\n        /* \"#utility.yul\":5302:5308   */\n      dup5\n        /* \"#utility.yul\":5240:5315   */\n      tag_110\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5340:5342   */\n      0x20\n        /* \"#utility.yul\":5335:5338   */\n      dup3\n        /* \"#utility.yul\":5331:5343   */\n      add\n        /* \"#utility.yul\":5324:5343   */\n      swap2\n      pop\n        /* \"#utility.yul\":5360:5363   */\n      dup2\n        /* \"#utility.yul\":5353:5363   */\n      swap1\n      pop\n        /* \"#utility.yul\":4972:5369   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5375:5493   */\n    tag_111:\n        /* \"#utility.yul\":5462:5486   */\n      tag_196\n        /* \"#utility.yul\":5480:5485   */\n      dup2\n        /* \"#utility.yul\":5462:5486   */\n      tag_95\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5457:5460   */\n      dup3\n        /* \"#utility.yul\":5450:5487   */\n      mstore\n        /* \"#utility.yul\":5375:5493   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5499:5721   */\n    tag_51:\n        /* \"#utility.yul\":5592:5596   */\n      0x00\n        /* \"#utility.yul\":5630:5632   */\n      0x20\n        /* \"#utility.yul\":5619:5628   */\n      dup3\n        /* \"#utility.yul\":5615:5633   */\n      add\n        /* \"#utility.yul\":5607:5633   */\n      swap1\n      pop\n        /* \"#utility.yul\":5643:5714   */\n      tag_198\n        /* \"#utility.yul\":5711:5712   */\n      0x00\n        /* \"#utility.yul\":5700:5709   */\n      dup4\n        /* \"#utility.yul\":5696:5713   */\n      add\n        /* \"#utility.yul\":5687:5693   */\n      dup5\n        /* \"#utility.yul\":5643:5714   */\n      tag_111\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5499:5721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5727:5870   */\n    tag_112:\n        /* \"#utility.yul\":5784:5789   */\n      0x00\n        /* \"#utility.yul\":5815:5821   */\n      dup2\n        /* \"#utility.yul\":5809:5822   */\n      mload\n        /* \"#utility.yul\":5800:5822   */\n      swap1\n      pop\n        /* \"#utility.yul\":5831:5864   */\n      tag_200\n        /* \"#utility.yul\":5858:5863   */\n      dup2\n        /* \"#utility.yul\":5831:5864   */\n      tag_98\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5727:5870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5876:6227   */\n    tag_55:\n        /* \"#utility.yul\":5946:5952   */\n      0x00\n        /* \"#utility.yul\":5995:5997   */\n      0x20\n        /* \"#utility.yul\":5983:5992   */\n      dup3\n        /* \"#utility.yul\":5974:5981   */\n      dup5\n        /* \"#utility.yul\":5970:5993   */\n      sub\n        /* \"#utility.yul\":5966:5998   */\n      slt\n        /* \"#utility.yul\":5963:6082   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":6001:6080   */\n      tag_203\n      tag_85\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5963:6082   */\n    tag_202:\n        /* \"#utility.yul\":6121:6122   */\n      0x00\n        /* \"#utility.yul\":6146:6210   */\n      tag_204\n        /* \"#utility.yul\":6202:6209   */\n      dup5\n        /* \"#utility.yul\":6193:6199   */\n      dup3\n        /* \"#utility.yul\":6182:6191   */\n      dup6\n        /* \"#utility.yul\":6178:6200   */\n      add\n        /* \"#utility.yul\":6146:6210   */\n      tag_112\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":6136:6210   */\n      swap2\n      pop\n        /* \"#utility.yul\":6092:6220   */\n      pop\n        /* \"#utility.yul\":5876:6227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6233:6402   */\n    tag_113:\n        /* \"#utility.yul\":6317:6328   */\n      0x00\n        /* \"#utility.yul\":6351:6357   */\n      dup3\n        /* \"#utility.yul\":6346:6349   */\n      dup3\n        /* \"#utility.yul\":6339:6358   */\n      mstore\n        /* \"#utility.yul\":6391:6395   */\n      0x20\n        /* \"#utility.yul\":6386:6389   */\n      dup3\n        /* \"#utility.yul\":6382:6396   */\n      add\n        /* \"#utility.yul\":6367:6396   */\n      swap1\n      pop\n        /* \"#utility.yul\":6233:6402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6408:6628   */\n    tag_114:\n        /* \"#utility.yul\":6548:6582   */\n      0x596f7520617265206e6f7420746865206f776e6572206f662074686973204e46\n        /* \"#utility.yul\":6544:6545   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup3\n        /* \"#utility.yul\":6532:6546   */\n      add\n        /* \"#utility.yul\":6525:6583   */\n      mstore\n        /* \"#utility.yul\":6617:6620   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6612:6614   */\n      0x20\n        /* \"#utility.yul\":6604:6610   */\n      dup3\n        /* \"#utility.yul\":6600:6615   */\n      add\n        /* \"#utility.yul\":6593:6621   */\n      mstore\n        /* \"#utility.yul\":6408:6628   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6634:7000   */\n    tag_115:\n        /* \"#utility.yul\":6776:6779   */\n      0x00\n        /* \"#utility.yul\":6797:6864   */\n      tag_208\n        /* \"#utility.yul\":6861:6863   */\n      0x21\n        /* \"#utility.yul\":6856:6859   */\n      dup4\n        /* \"#utility.yul\":6797:6864   */\n      tag_113\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6790:6864   */\n      swap2\n      pop\n        /* \"#utility.yul\":6873:6966   */\n      tag_209\n        /* \"#utility.yul\":6962:6965   */\n      dup3\n        /* \"#utility.yul\":6873:6966   */\n      tag_114\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6991:6993   */\n      0x40\n        /* \"#utility.yul\":6986:6989   */\n      dup3\n        /* \"#utility.yul\":6982:6994   */\n      add\n        /* \"#utility.yul\":6975:6994   */\n      swap1\n      pop\n        /* \"#utility.yul\":6634:7000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7006:7425   */\n    tag_58:\n        /* \"#utility.yul\":7172:7176   */\n      0x00\n        /* \"#utility.yul\":7210:7212   */\n      0x20\n        /* \"#utility.yul\":7199:7208   */\n      dup3\n        /* \"#utility.yul\":7195:7213   */\n      add\n        /* \"#utility.yul\":7187:7213   */\n      swap1\n      pop\n        /* \"#utility.yul\":7259:7268   */\n      dup2\n        /* \"#utility.yul\":7253:7257   */\n      dup2\n        /* \"#utility.yul\":7249:7269   */\n      sub\n        /* \"#utility.yul\":7245:7246   */\n      0x00\n        /* \"#utility.yul\":7234:7243   */\n      dup4\n        /* \"#utility.yul\":7230:7247   */\n      add\n        /* \"#utility.yul\":7223:7270   */\n      mstore\n        /* \"#utility.yul\":7287:7418   */\n      tag_211\n        /* \"#utility.yul\":7413:7417   */\n      dup2\n        /* \"#utility.yul\":7287:7418   */\n      tag_115\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7279:7418   */\n      swap1\n      pop\n        /* \"#utility.yul\":7006:7425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7431:7599   */\n    tag_116:\n        /* \"#utility.yul\":7571:7591   */\n      0x4e465420616c72656164792073746f7265640000000000000000000000000000\n        /* \"#utility.yul\":7567:7568   */\n      0x00\n        /* \"#utility.yul\":7559:7565   */\n      dup3\n        /* \"#utility.yul\":7555:7569   */\n      add\n        /* \"#utility.yul\":7548:7592   */\n      mstore\n        /* \"#utility.yul\":7431:7599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7605:7971   */\n    tag_117:\n        /* \"#utility.yul\":7747:7750   */\n      0x00\n        /* \"#utility.yul\":7768:7835   */\n      tag_214\n        /* \"#utility.yul\":7832:7834   */\n      0x12\n        /* \"#utility.yul\":7827:7830   */\n      dup4\n        /* \"#utility.yul\":7768:7835   */\n      tag_113\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7761:7835   */\n      swap2\n      pop\n        /* \"#utility.yul\":7844:7937   */\n      tag_215\n        /* \"#utility.yul\":7933:7936   */\n      dup3\n        /* \"#utility.yul\":7844:7937   */\n      tag_116\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":7962:7964   */\n      0x20\n        /* \"#utility.yul\":7957:7960   */\n      dup3\n        /* \"#utility.yul\":7953:7965   */\n      add\n        /* \"#utility.yul\":7946:7965   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7977:8396   */\n    tag_62:\n        /* \"#utility.yul\":8143:8147   */\n      0x00\n        /* \"#utility.yul\":8181:8183   */\n      0x20\n        /* \"#utility.yul\":8170:8179   */\n      dup3\n        /* \"#utility.yul\":8166:8184   */\n      add\n        /* \"#utility.yul\":8158:8184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8230:8239   */\n      dup2\n        /* \"#utility.yul\":8224:8228   */\n      dup2\n        /* \"#utility.yul\":8220:8240   */\n      sub\n        /* \"#utility.yul\":8216:8217   */\n      0x00\n        /* \"#utility.yul\":8205:8214   */\n      dup4\n        /* \"#utility.yul\":8201:8218   */\n      add\n        /* \"#utility.yul\":8194:8241   */\n      mstore\n        /* \"#utility.yul\":8258:8389   */\n      tag_217\n        /* \"#utility.yul\":8384:8388   */\n      dup2\n        /* \"#utility.yul\":8258:8389   */\n      tag_117\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":8250:8389   */\n      swap1\n      pop\n        /* \"#utility.yul\":7977:8396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8402:8844   */\n    tag_64:\n        /* \"#utility.yul\":8551:8555   */\n      0x00\n        /* \"#utility.yul\":8589:8591   */\n      0x60\n        /* \"#utility.yul\":8578:8587   */\n      dup3\n        /* \"#utility.yul\":8574:8592   */\n      add\n        /* \"#utility.yul\":8566:8592   */\n      swap1\n      pop\n        /* \"#utility.yul\":8602:8673   */\n      tag_219\n        /* \"#utility.yul\":8670:8671   */\n      0x00\n        /* \"#utility.yul\":8659:8668   */\n      dup4\n        /* \"#utility.yul\":8655:8672   */\n      add\n        /* \"#utility.yul\":8646:8652   */\n      dup7\n        /* \"#utility.yul\":8602:8673   */\n      tag_94\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":8683:8755   */\n      tag_220\n        /* \"#utility.yul\":8751:8753   */\n      0x20\n        /* \"#utility.yul\":8740:8749   */\n      dup4\n        /* \"#utility.yul\":8736:8754   */\n      add\n        /* \"#utility.yul\":8727:8733   */\n      dup6\n        /* \"#utility.yul\":8683:8755   */\n      tag_94\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8765:8837   */\n      tag_221\n        /* \"#utility.yul\":8833:8835   */\n      0x40\n        /* \"#utility.yul\":8822:8831   */\n      dup4\n        /* \"#utility.yul\":8818:8836   */\n      add\n        /* \"#utility.yul\":8809:8815   */\n      dup5\n        /* \"#utility.yul\":8765:8837   */\n      tag_111\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8402:8844   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8850:9075   */\n    tag_118:\n        /* \"#utility.yul\":8990:9024   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8986:8987   */\n      0x00\n        /* \"#utility.yul\":8978:8984   */\n      dup3\n        /* \"#utility.yul\":8974:8988   */\n      add\n        /* \"#utility.yul\":8967:9025   */\n      mstore\n        /* \"#utility.yul\":9059:9067   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9054:9056   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup3\n        /* \"#utility.yul\":9042:9057   */\n      add\n        /* \"#utility.yul\":9035:9068   */\n      mstore\n        /* \"#utility.yul\":8850:9075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9081:9447   */\n    tag_119:\n        /* \"#utility.yul\":9223:9226   */\n      0x00\n        /* \"#utility.yul\":9244:9311   */\n      tag_224\n        /* \"#utility.yul\":9308:9310   */\n      0x26\n        /* \"#utility.yul\":9303:9306   */\n      dup4\n        /* \"#utility.yul\":9244:9311   */\n      tag_113\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":9237:9311   */\n      swap2\n      pop\n        /* \"#utility.yul\":9320:9413   */\n      tag_225\n        /* \"#utility.yul\":9409:9412   */\n      dup3\n        /* \"#utility.yul\":9320:9413   */\n      tag_118\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":9438:9440   */\n      0x40\n        /* \"#utility.yul\":9433:9436   */\n      dup3\n        /* \"#utility.yul\":9429:9441   */\n      add\n        /* \"#utility.yul\":9422:9441   */\n      swap1\n      pop\n        /* \"#utility.yul\":9081:9447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9453:9872   */\n    tag_73:\n        /* \"#utility.yul\":9619:9623   */\n      0x00\n        /* \"#utility.yul\":9657:9659   */\n      0x20\n        /* \"#utility.yul\":9646:9655   */\n      dup3\n        /* \"#utility.yul\":9642:9660   */\n      add\n        /* \"#utility.yul\":9634:9660   */\n      swap1\n      pop\n        /* \"#utility.yul\":9706:9715   */\n      dup2\n        /* \"#utility.yul\":9700:9704   */\n      dup2\n        /* \"#utility.yul\":9696:9716   */\n      sub\n        /* \"#utility.yul\":9692:9693   */\n      0x00\n        /* \"#utility.yul\":9681:9690   */\n      dup4\n        /* \"#utility.yul\":9677:9694   */\n      add\n        /* \"#utility.yul\":9670:9717   */\n      mstore\n        /* \"#utility.yul\":9734:9865   */\n      tag_227\n        /* \"#utility.yul\":9860:9864   */\n      dup2\n        /* \"#utility.yul\":9734:9865   */\n      tag_119\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9726:9865   */\n      swap1\n      pop\n        /* \"#utility.yul\":9453:9872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9878:10060   */\n    tag_120:\n        /* \"#utility.yul\":10018:10052   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10014:10015   */\n      0x00\n        /* \"#utility.yul\":10006:10012   */\n      dup3\n        /* \"#utility.yul\":10002:10016   */\n      add\n        /* \"#utility.yul\":9995:10053   */\n      mstore\n        /* \"#utility.yul\":9878:10060   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10066:10432   */\n    tag_121:\n        /* \"#utility.yul\":10208:10211   */\n      0x00\n        /* \"#utility.yul\":10229:10296   */\n      tag_230\n        /* \"#utility.yul\":10293:10295   */\n      0x20\n        /* \"#utility.yul\":10288:10291   */\n      dup4\n        /* \"#utility.yul\":10229:10296   */\n      tag_113\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":10222:10296   */\n      swap2\n      pop\n        /* \"#utility.yul\":10305:10398   */\n      tag_231\n        /* \"#utility.yul\":10394:10397   */\n      dup3\n        /* \"#utility.yul\":10305:10398   */\n      tag_120\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":10423:10425   */\n      0x20\n        /* \"#utility.yul\":10418:10421   */\n      dup3\n        /* \"#utility.yul\":10414:10426   */\n      add\n        /* \"#utility.yul\":10407:10426   */\n      swap1\n      pop\n        /* \"#utility.yul\":10066:10432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10438:10857   */\n    tag_81:\n        /* \"#utility.yul\":10604:10608   */\n      0x00\n        /* \"#utility.yul\":10642:10644   */\n      0x20\n        /* \"#utility.yul\":10631:10640   */\n      dup3\n        /* \"#utility.yul\":10627:10645   */\n      add\n        /* \"#utility.yul\":10619:10645   */\n      swap1\n      pop\n        /* \"#utility.yul\":10691:10700   */\n      dup2\n        /* \"#utility.yul\":10685:10689   */\n      dup2\n        /* \"#utility.yul\":10681:10701   */\n      sub\n        /* \"#utility.yul\":10677:10678   */\n      0x00\n        /* \"#utility.yul\":10666:10675   */\n      dup4\n        /* \"#utility.yul\":10662:10679   */\n      add\n        /* \"#utility.yul\":10655:10702   */\n      mstore\n        /* \"#utility.yul\":10719:10850   */\n      tag_233\n        /* \"#utility.yul\":10845:10849   */\n      dup2\n        /* \"#utility.yul\":10719:10850   */\n      tag_121\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":10711:10850   */\n      swap1\n      pop\n        /* \"#utility.yul\":10438:10857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207d6bd7043c879a1f4c9ff3134e42ff43c9cad58a749385b4d18ba7498509820a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_293": {
									"entryPoint": null,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_240": {
									"entryPoint": 147,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 154,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:5",
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610de3380380610de3833981810160405281019061003191906101b9565b61004d61004261009360201b60201c565b61009a60201b60201c565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101e4565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101888261015f565b9050919050565b6101988161017e565b81146101a2575f80fd5b50565b5f815190506101b38161018f565b92915050565b5f602082840312156101ce576101cd61015b565b5b5f6101db848285016101a5565b91505092915050565b610bf2806101f15f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063c9ff64ec11610059578063c9ff64ec146100d7578063ceeddea414610107578063f2fde38b14610123578063f9be04ca1461013f5761007b565b8063223417411461007f578063715018a6146100af5780638da5cb5b146100b9575b5f80fd5b610099600480360381019061009491906106b7565b61015d565b6040516100a691906106fc565b60405180910390f35b6100b761017a565b005b6100c161018d565b6040516100ce9190610754565b60405180910390f35b6100f160048036038101906100ec91906107a0565b6101b4565b6040516100fe91906106fc565b60405180910390f35b610121600480360381019061011c91906107a0565b610207565b005b61013d600480360381019061013891906107f5565b610493565b005b610147610515565b604051610154919061087b565b60405180910390f35b6002602052805f5260405f205f915054906101000a900460ff1681565b61018261053a565b61018b5f6105b8565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8033836040516020016101c99291906108f9565b60405160208183030381529060405280519060200120905060025f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102789190610933565b602060405180830381865afa158015610293573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102b79190610960565b73ffffffffffffffffffffffffffffffffffffffff161461030d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030490610a0b565b60405180910390fd5b5f33826040516020016103219291906108f9565b60405160208183030381529060405280519060200120905060025f8281526020019081526020015f205f9054906101000a900460ff1615610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e90610a73565b60405180910390fd5b600160025f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161041e93929190610a91565b5f604051808303815f87803b158015610435575f80fd5b505af1158015610447573d5f803e3d5ffd5b50505050813373ffffffffffffffffffffffffffffffffffffffff167fcd7d8045490761f6468db55184c41c74ab6696514d5c6b630287bbd2f4e485c160405160405180910390a35050565b61049b61053a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610b36565b60405180910390fd5b610512816105b8565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610542610679565b73ffffffffffffffffffffffffffffffffffffffff1661056061018d565b73ffffffffffffffffffffffffffffffffffffffff16146105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90610b9e565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f819050919050565b61069681610684565b81146106a0575f80fd5b50565b5f813590506106b18161068d565b92915050565b5f602082840312156106cc576106cb610680565b5b5f6106d9848285016106a3565b91505092915050565b5f8115159050919050565b6106f6816106e2565b82525050565b5f60208201905061070f5f8301846106ed565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61073e82610715565b9050919050565b61074e81610734565b82525050565b5f6020820190506107675f830184610745565b92915050565b5f819050919050565b61077f8161076d565b8114610789575f80fd5b50565b5f8135905061079a81610776565b92915050565b5f602082840312156107b5576107b4610680565b5b5f6107c28482850161078c565b91505092915050565b6107d481610734565b81146107de575f80fd5b50565b5f813590506107ef816107cb565b92915050565b5f6020828403121561080a57610809610680565b5b5f610817848285016107e1565b91505092915050565b5f819050919050565b5f61084361083e61083984610715565b610820565b610715565b9050919050565b5f61085482610829565b9050919050565b5f6108658261084a565b9050919050565b6108758161085b565b82525050565b5f60208201905061088e5f83018461086c565b92915050565b5f8160601b9050919050565b5f6108aa82610894565b9050919050565b5f6108bb826108a0565b9050919050565b6108d36108ce82610734565b6108b1565b82525050565b5f819050919050565b6108f36108ee8261076d565b6108d9565b82525050565b5f61090482856108c2565b60148201915061091482846108e2565b6020820191508190509392505050565b61092d8161076d565b82525050565b5f6020820190506109465f830184610924565b92915050565b5f8151905061095a816107cb565b92915050565b5f6020828403121561097557610974610680565b5b5f6109828482850161094c565b91505092915050565b5f82825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e465f8201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6109f560218361098b565b9150610a008261099b565b604082019050919050565b5f6020820190508181035f830152610a22816109e9565b9050919050565b7f4e465420616c72656164792073746f72656400000000000000000000000000005f82015250565b5f610a5d60128361098b565b9150610a6882610a29565b602082019050919050565b5f6020820190508181035f830152610a8a81610a51565b9050919050565b5f606082019050610aa45f830186610745565b610ab16020830185610745565b610abe6040830184610924565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610b2060268361098b565b9150610b2b82610ac6565b604082019050919050565b5f6020820190508181035f830152610b4d81610b14565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f610b8860208361098b565b9150610b9382610b54565b602082019050919050565b5f6020820190508181035f830152610bb581610b7c565b905091905056fea26469706673582212207d6bd7043c879a1f4c9ff3134e42ff43c9cad58a749385b4d18ba7498509820a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDE3 CODESIZE SUB DUP1 PUSH2 0xDE3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x4D PUSH2 0x42 PUSH2 0x93 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x9A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1E4 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x188 DUP3 PUSH2 0x15F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x17E JUMP JUMPDEST DUP2 EQ PUSH2 0x1A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B3 DUP2 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE JUMPI PUSH2 0x1CD PUSH2 0x15B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DB DUP5 DUP3 DUP6 ADD PUSH2 0x1A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF2 DUP1 PUSH2 0x1F1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC9FF64EC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC9FF64EC EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xCEEDDEA4 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF9BE04CA EQ PUSH2 0x13F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x22341741 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x147 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x53A JUMP JUMPDEST PUSH2 0x18B PUSH0 PUSH2 0x5B8 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C9 SWAP3 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x321 SWAP3 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA91 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCD7D8045490761F6468DB55184C41C74AB6696514D5C6B630287BBD2F4E485C1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x49B PUSH2 0x53A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x512 DUP2 PUSH2 0x5B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x542 PUSH2 0x679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x560 PUSH2 0x18D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP1 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x696 DUP2 PUSH2 0x684 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B1 DUP2 PUSH2 0x68D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6D9 DUP5 DUP3 DUP6 ADD PUSH2 0x6A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F6 DUP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x70F PUSH0 DUP4 ADD DUP5 PUSH2 0x6ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x73E DUP3 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74E DUP2 PUSH2 0x734 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x767 PUSH0 DUP4 ADD DUP5 PUSH2 0x745 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x77F DUP2 PUSH2 0x76D JUMP JUMPDEST DUP2 EQ PUSH2 0x789 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x79A DUP2 PUSH2 0x776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B5 JUMPI PUSH2 0x7B4 PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7C2 DUP5 DUP3 DUP6 ADD PUSH2 0x78C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D4 DUP2 PUSH2 0x734 JUMP JUMPDEST DUP2 EQ PUSH2 0x7DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7EF DUP2 PUSH2 0x7CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x817 DUP5 DUP3 DUP6 ADD PUSH2 0x7E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x843 PUSH2 0x83E PUSH2 0x839 DUP5 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x854 DUP3 PUSH2 0x829 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x865 DUP3 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x85B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88E PUSH0 DUP4 ADD DUP5 PUSH2 0x86C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA DUP3 PUSH2 0x894 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8BB DUP3 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x8CE DUP3 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x8EE DUP3 PUSH2 0x76D JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x904 DUP3 DUP6 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x914 DUP3 DUP5 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x92D DUP2 PUSH2 0x76D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x946 PUSH0 DUP4 ADD DUP5 PUSH2 0x924 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x95A DUP2 PUSH2 0x7CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x975 JUMPI PUSH2 0x974 PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x982 DUP5 DUP3 DUP6 ADD PUSH2 0x94C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973204E46 PUSH0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9F5 PUSH1 0x21 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP2 POP PUSH2 0xA00 DUP3 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA22 DUP2 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E465420616C72656164792073746F7265640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA5D PUSH1 0x12 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP2 POP PUSH2 0xA68 DUP3 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA8A DUP2 PUSH2 0xA51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAA4 PUSH0 DUP4 ADD DUP7 PUSH2 0x745 JUMP JUMPDEST PUSH2 0xAB1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x745 JUMP JUMPDEST PUSH2 0xABE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x924 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH1 0x26 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB4D DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB88 PUSH1 0x20 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP2 POP PUSH2 0xB93 DUP3 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBB5 DUP2 PUSH2 0xB7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x6BD7043C879A1F4C9FF3134E42FF43C9CAD58A749385B4D18BA749850982 EXP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "170:957:4:-:0;;;363:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;439:17:4;412:16;;:45;;;;;;;;;;;;;;;;;;363:101;170:957;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;170:957:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1338,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_240": {
									"entryPoint": 1657,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1464,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@gameItemContract_271": {
									"entryPoint": 1301,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getStoredStatus_376": {
									"entryPoint": 436,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 397,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 378,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@storeNFT_353": {
									"entryPoint": 519,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@storedNFTs_275": {
									"entryPoint": 349,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1171,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 2242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 2274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$228_to_t_address": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1664,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10860:5",
										"nodeType": "YulBlock",
										"src": "0:10860:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "756:263:5",
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:5",
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nativeSrc": "804:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nativeSrc": "804:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nativeSrc": "773:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nativeSrc": "769:32:5",
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nativeSrc": "766:119:5",
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nativeSrc": "895:117:5",
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nativeSrc": "910:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:5",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:5",
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nativeSrc": "970:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "949:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nativeSrc": "949:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "690:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:5",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:5",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nativeSrc": "1067:48:5",
													"nodeType": "YulBlock",
													"src": "1067:48:5",
													"statements": [
														{
															"nativeSrc": "1077:32:5",
															"nodeType": "YulAssignment",
															"src": "1077:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1102:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1095:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:5"
																		},
																		"nativeSrc": "1095:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1088:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:5"
																},
																"nativeSrc": "1088:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1088:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1025:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:5",
														"nodeType": "YulTypedName",
														"src": "1049:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:5",
														"nodeType": "YulTypedName",
														"src": "1059:7:5",
														"type": ""
													}
												],
												"src": "1025:90:5"
											},
											{
												"body": {
													"nativeSrc": "1180:50:5",
													"nodeType": "YulBlock",
													"src": "1180:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1197:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1217:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1202:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:5"
																		},
																		"nativeSrc": "1202:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:5"
																},
																"nativeSrc": "1190:34:5",
																"nodeType": "YulFunctionCall",
																"src": "1190:34:5"
															},
															"nativeSrc": "1190:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1121:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1168:5:5",
														"nodeType": "YulTypedName",
														"src": "1168:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1175:3:5",
														"nodeType": "YulTypedName",
														"src": "1175:3:5",
														"type": ""
													}
												],
												"src": "1121:109:5"
											},
											{
												"body": {
													"nativeSrc": "1328:118:5",
													"nodeType": "YulBlock",
													"src": "1328:118:5",
													"statements": [
														{
															"nativeSrc": "1338:26:5",
															"nodeType": "YulAssignment",
															"src": "1338:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1350:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1361:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1346:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:5"
																},
																"nativeSrc": "1346:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1346:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1338:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1412:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1436:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1421:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:5"
																		},
																		"nativeSrc": "1421:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1374:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:5"
																},
																"nativeSrc": "1374:65:5",
																"nodeType": "YulFunctionCall",
																"src": "1374:65:5"
															},
															"nativeSrc": "1374:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1236:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1300:9:5",
														"nodeType": "YulTypedName",
														"src": "1300:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1312:6:5",
														"nodeType": "YulTypedName",
														"src": "1312:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1323:4:5",
														"nodeType": "YulTypedName",
														"src": "1323:4:5",
														"type": ""
													}
												],
												"src": "1236:210:5"
											},
											{
												"body": {
													"nativeSrc": "1497:81:5",
													"nodeType": "YulBlock",
													"src": "1497:81:5",
													"statements": [
														{
															"nativeSrc": "1507:65:5",
															"nodeType": "YulAssignment",
															"src": "1507:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1522:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1522:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1529:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1529:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1518:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:5"
																},
																"nativeSrc": "1518:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1518:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1507:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1507:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1452:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1479:5:5",
														"nodeType": "YulTypedName",
														"src": "1479:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1489:7:5",
														"nodeType": "YulTypedName",
														"src": "1489:7:5",
														"type": ""
													}
												],
												"src": "1452:126:5"
											},
											{
												"body": {
													"nativeSrc": "1629:51:5",
													"nodeType": "YulBlock",
													"src": "1629:51:5",
													"statements": [
														{
															"nativeSrc": "1639:35:5",
															"nodeType": "YulAssignment",
															"src": "1639:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1668:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1668:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1650:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1650:17:5"
																},
																"nativeSrc": "1650:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1650:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1639:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1639:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1584:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1611:5:5",
														"nodeType": "YulTypedName",
														"src": "1611:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1621:7:5",
														"nodeType": "YulTypedName",
														"src": "1621:7:5",
														"type": ""
													}
												],
												"src": "1584:96:5"
											},
											{
												"body": {
													"nativeSrc": "1751:53:5",
													"nodeType": "YulBlock",
													"src": "1751:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1768:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1791:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1791:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1773:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1773:17:5"
																		},
																		"nativeSrc": "1773:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1773:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1761:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:5"
																},
																"nativeSrc": "1761:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1761:37:5"
															},
															"nativeSrc": "1761:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1761:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1686:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:5",
														"nodeType": "YulTypedName",
														"src": "1739:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1746:3:5",
														"nodeType": "YulTypedName",
														"src": "1746:3:5",
														"type": ""
													}
												],
												"src": "1686:118:5"
											},
											{
												"body": {
													"nativeSrc": "1908:124:5",
													"nodeType": "YulBlock",
													"src": "1908:124:5",
													"statements": [
														{
															"nativeSrc": "1918:26:5",
															"nodeType": "YulAssignment",
															"src": "1918:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1930:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1941:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1926:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:5"
																},
																"nativeSrc": "1926:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1926:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1918:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1998:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2011:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2022:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2007:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:5"
																		},
																		"nativeSrc": "2007:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1954:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1954:43:5"
																},
																"nativeSrc": "1954:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1954:71:5"
															},
															"nativeSrc": "1954:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1954:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1810:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1880:9:5",
														"nodeType": "YulTypedName",
														"src": "1880:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1892:6:5",
														"nodeType": "YulTypedName",
														"src": "1892:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1903:4:5",
														"nodeType": "YulTypedName",
														"src": "1903:4:5",
														"type": ""
													}
												],
												"src": "1810:222:5"
											},
											{
												"body": {
													"nativeSrc": "2083:32:5",
													"nodeType": "YulBlock",
													"src": "2083:32:5",
													"statements": [
														{
															"nativeSrc": "2093:16:5",
															"nodeType": "YulAssignment",
															"src": "2093:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "2104:5:5",
																"nodeType": "YulIdentifier",
																"src": "2104:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2093:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2093:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2038:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2065:5:5",
														"nodeType": "YulTypedName",
														"src": "2065:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2075:7:5",
														"nodeType": "YulTypedName",
														"src": "2075:7:5",
														"type": ""
													}
												],
												"src": "2038:77:5"
											},
											{
												"body": {
													"nativeSrc": "2164:79:5",
													"nodeType": "YulBlock",
													"src": "2164:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2221:16:5",
																"nodeType": "YulBlock",
																"src": "2221:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2230:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2230:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2223:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:5"
																			},
																			"nativeSrc": "2223:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:12:5"
																		},
																		"nativeSrc": "2223:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2187:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2212:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2212:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2194:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2194:17:5"
																				},
																				"nativeSrc": "2194:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2194:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2184:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2184:2:5"
																		},
																		"nativeSrc": "2184:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2184:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2177:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:5"
																},
																"nativeSrc": "2177:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2177:43:5"
															},
															"nativeSrc": "2174:63:5",
															"nodeType": "YulIf",
															"src": "2174:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2121:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2157:5:5",
														"nodeType": "YulTypedName",
														"src": "2157:5:5",
														"type": ""
													}
												],
												"src": "2121:122:5"
											},
											{
												"body": {
													"nativeSrc": "2301:87:5",
													"nodeType": "YulBlock",
													"src": "2301:87:5",
													"statements": [
														{
															"nativeSrc": "2311:29:5",
															"nodeType": "YulAssignment",
															"src": "2311:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2333:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2333:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2320:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2320:12:5"
																},
																"nativeSrc": "2320:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2320:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2311:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2311:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2376:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2376:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2349:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2349:26:5"
																},
																"nativeSrc": "2349:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2349:33:5"
															},
															"nativeSrc": "2349:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2349:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2249:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2279:6:5",
														"nodeType": "YulTypedName",
														"src": "2279:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2287:3:5",
														"nodeType": "YulTypedName",
														"src": "2287:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2295:5:5",
														"nodeType": "YulTypedName",
														"src": "2295:5:5",
														"type": ""
													}
												],
												"src": "2249:139:5"
											},
											{
												"body": {
													"nativeSrc": "2460:263:5",
													"nodeType": "YulBlock",
													"src": "2460:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2506:83:5",
																"nodeType": "YulBlock",
																"src": "2506:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2508:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2508:77:5"
																			},
																			"nativeSrc": "2508:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2508:79:5"
																		},
																		"nativeSrc": "2508:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2508:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2481:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2481:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2490:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2490:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2477:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:5"
																		},
																		"nativeSrc": "2477:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2477:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2502:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2502:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2473:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:5"
																},
																"nativeSrc": "2473:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2473:32:5"
															},
															"nativeSrc": "2470:119:5",
															"nodeType": "YulIf",
															"src": "2470:119:5"
														},
														{
															"nativeSrc": "2599:117:5",
															"nodeType": "YulBlock",
															"src": "2599:117:5",
															"statements": [
																{
																	"nativeSrc": "2614:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2614:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2628:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2628:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2618:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2618:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2643:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2643:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2678:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2678:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2689:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2689:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2674:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2674:3:5"
																				},
																				"nativeSrc": "2674:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2674:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2698:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2698:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2653:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2653:20:5"
																		},
																		"nativeSrc": "2653:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2653:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2643:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2643:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2394:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2430:9:5",
														"nodeType": "YulTypedName",
														"src": "2430:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2441:7:5",
														"nodeType": "YulTypedName",
														"src": "2441:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2453:6:5",
														"nodeType": "YulTypedName",
														"src": "2453:6:5",
														"type": ""
													}
												],
												"src": "2394:329:5"
											},
											{
												"body": {
													"nativeSrc": "2772:79:5",
													"nodeType": "YulBlock",
													"src": "2772:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2829:16:5",
																"nodeType": "YulBlock",
																"src": "2829:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2838:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2838:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2841:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2841:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2831:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2831:6:5"
																			},
																			"nativeSrc": "2831:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2831:12:5"
																		},
																		"nativeSrc": "2831:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2831:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2795:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2795:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2820:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2820:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2802:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2802:17:5"
																				},
																				"nativeSrc": "2802:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2802:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2792:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2792:2:5"
																		},
																		"nativeSrc": "2792:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2785:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2785:6:5"
																},
																"nativeSrc": "2785:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2785:43:5"
															},
															"nativeSrc": "2782:63:5",
															"nodeType": "YulIf",
															"src": "2782:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2729:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2765:5:5",
														"nodeType": "YulTypedName",
														"src": "2765:5:5",
														"type": ""
													}
												],
												"src": "2729:122:5"
											},
											{
												"body": {
													"nativeSrc": "2909:87:5",
													"nodeType": "YulBlock",
													"src": "2909:87:5",
													"statements": [
														{
															"nativeSrc": "2919:29:5",
															"nodeType": "YulAssignment",
															"src": "2919:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2941:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2928:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2928:12:5"
																},
																"nativeSrc": "2928:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2928:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2919:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2919:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2984:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2984:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2957:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2957:26:5"
																},
																"nativeSrc": "2957:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2957:33:5"
															},
															"nativeSrc": "2957:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2957:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2857:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2887:6:5",
														"nodeType": "YulTypedName",
														"src": "2887:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2895:3:5",
														"nodeType": "YulTypedName",
														"src": "2895:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2903:5:5",
														"nodeType": "YulTypedName",
														"src": "2903:5:5",
														"type": ""
													}
												],
												"src": "2857:139:5"
											},
											{
												"body": {
													"nativeSrc": "3068:263:5",
													"nodeType": "YulBlock",
													"src": "3068:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3114:83:5",
																"nodeType": "YulBlock",
																"src": "3114:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3116:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3116:77:5"
																			},
																			"nativeSrc": "3116:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3116:79:5"
																		},
																		"nativeSrc": "3116:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3116:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3089:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3089:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3098:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3098:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3085:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:5"
																		},
																		"nativeSrc": "3085:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3085:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3110:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3110:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3081:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3081:3:5"
																},
																"nativeSrc": "3081:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3081:32:5"
															},
															"nativeSrc": "3078:119:5",
															"nodeType": "YulIf",
															"src": "3078:119:5"
														},
														{
															"nativeSrc": "3207:117:5",
															"nodeType": "YulBlock",
															"src": "3207:117:5",
															"statements": [
																{
																	"nativeSrc": "3222:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3222:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3236:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3236:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3226:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3226:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3251:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3251:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3286:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3286:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3297:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3297:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3282:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3282:3:5"
																				},
																				"nativeSrc": "3282:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3282:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3306:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3306:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3261:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3261:20:5"
																		},
																		"nativeSrc": "3261:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3251:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3251:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3002:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3038:9:5",
														"nodeType": "YulTypedName",
														"src": "3038:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3049:7:5",
														"nodeType": "YulTypedName",
														"src": "3049:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3061:6:5",
														"nodeType": "YulTypedName",
														"src": "3061:6:5",
														"type": ""
													}
												],
												"src": "3002:329:5"
											},
											{
												"body": {
													"nativeSrc": "3369:28:5",
													"nodeType": "YulBlock",
													"src": "3369:28:5",
													"statements": [
														{
															"nativeSrc": "3379:12:5",
															"nodeType": "YulAssignment",
															"src": "3379:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "3386:5:5",
																"nodeType": "YulIdentifier",
																"src": "3386:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3379:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3379:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3337:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3355:5:5",
														"nodeType": "YulTypedName",
														"src": "3355:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3365:3:5",
														"nodeType": "YulTypedName",
														"src": "3365:3:5",
														"type": ""
													}
												],
												"src": "3337:60:5"
											},
											{
												"body": {
													"nativeSrc": "3463:82:5",
													"nodeType": "YulBlock",
													"src": "3463:82:5",
													"statements": [
														{
															"nativeSrc": "3473:66:5",
															"nodeType": "YulAssignment",
															"src": "3473:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3531:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3531:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3513:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3513:17:5"
																				},
																				"nativeSrc": "3513:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3513:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3504:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "3504:8:5"
																		},
																		"nativeSrc": "3504:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3504:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3486:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3486:17:5"
																},
																"nativeSrc": "3486:53:5",
																"nodeType": "YulFunctionCall",
																"src": "3486:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3473:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3473:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3403:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3443:5:5",
														"nodeType": "YulTypedName",
														"src": "3443:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3453:9:5",
														"nodeType": "YulTypedName",
														"src": "3453:9:5",
														"type": ""
													}
												],
												"src": "3403:142:5"
											},
											{
												"body": {
													"nativeSrc": "3611:66:5",
													"nodeType": "YulBlock",
													"src": "3611:66:5",
													"statements": [
														{
															"nativeSrc": "3621:50:5",
															"nodeType": "YulAssignment",
															"src": "3621:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3665:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3665:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3634:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3634:30:5"
																},
																"nativeSrc": "3634:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3634:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3621:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3621:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3551:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3591:5:5",
														"nodeType": "YulTypedName",
														"src": "3591:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3601:9:5",
														"nodeType": "YulTypedName",
														"src": "3601:9:5",
														"type": ""
													}
												],
												"src": "3551:126:5"
											},
											{
												"body": {
													"nativeSrc": "3758:66:5",
													"nodeType": "YulBlock",
													"src": "3758:66:5",
													"statements": [
														{
															"nativeSrc": "3768:50:5",
															"nodeType": "YulAssignment",
															"src": "3768:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3812:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3812:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3781:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3781:30:5"
																},
																"nativeSrc": "3781:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3781:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3768:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3768:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$228_to_t_address",
												"nativeSrc": "3683:141:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3738:5:5",
														"nodeType": "YulTypedName",
														"src": "3738:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3748:9:5",
														"nodeType": "YulTypedName",
														"src": "3748:9:5",
														"type": ""
													}
												],
												"src": "3683:141:5"
											},
											{
												"body": {
													"nativeSrc": "3910:81:5",
													"nodeType": "YulBlock",
													"src": "3910:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3927:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3927:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3978:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3978:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$228_to_t_address",
																			"nativeSrc": "3932:45:5",
																			"nodeType": "YulIdentifier",
																			"src": "3932:45:5"
																		},
																		"nativeSrc": "3932:52:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3932:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3920:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:5"
																},
																"nativeSrc": "3920:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3920:65:5"
															},
															"nativeSrc": "3920:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3920:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack",
												"nativeSrc": "3830:161:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3898:5:5",
														"nodeType": "YulTypedName",
														"src": "3898:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3905:3:5",
														"nodeType": "YulTypedName",
														"src": "3905:3:5",
														"type": ""
													}
												],
												"src": "3830:161:5"
											},
											{
												"body": {
													"nativeSrc": "4110:139:5",
													"nodeType": "YulBlock",
													"src": "4110:139:5",
													"statements": [
														{
															"nativeSrc": "4120:26:5",
															"nodeType": "YulAssignment",
															"src": "4120:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4132:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4132:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4143:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4143:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4128:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:5"
																},
																"nativeSrc": "4128:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4128:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4120:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4120:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4215:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4215:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4228:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4228:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4239:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4239:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4224:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4224:3:5"
																		},
																		"nativeSrc": "4224:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4224:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack",
																	"nativeSrc": "4156:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4156:58:5"
																},
																"nativeSrc": "4156:86:5",
																"nodeType": "YulFunctionCall",
																"src": "4156:86:5"
															},
															"nativeSrc": "4156:86:5",
															"nodeType": "YulExpressionStatement",
															"src": "4156:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed",
												"nativeSrc": "3997:252:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4082:9:5",
														"nodeType": "YulTypedName",
														"src": "4082:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4094:6:5",
														"nodeType": "YulTypedName",
														"src": "4094:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4105:4:5",
														"nodeType": "YulTypedName",
														"src": "4105:4:5",
														"type": ""
													}
												],
												"src": "3997:252:5"
											},
											{
												"body": {
													"nativeSrc": "4297:52:5",
													"nodeType": "YulBlock",
													"src": "4297:52:5",
													"statements": [
														{
															"nativeSrc": "4307:35:5",
															"nodeType": "YulAssignment",
															"src": "4307:35:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4332:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4332:2:5",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4336:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4336:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4328:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4328:3:5"
																},
																"nativeSrc": "4328:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4328:14:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4307:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "4307:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "4255:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4278:5:5",
														"nodeType": "YulTypedName",
														"src": "4278:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4288:8:5",
														"nodeType": "YulTypedName",
														"src": "4288:8:5",
														"type": ""
													}
												],
												"src": "4255:94:5"
											},
											{
												"body": {
													"nativeSrc": "4402:47:5",
													"nodeType": "YulBlock",
													"src": "4402:47:5",
													"statements": [
														{
															"nativeSrc": "4412:31:5",
															"nodeType": "YulAssignment",
															"src": "4412:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4437:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4437:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "4423:13:5",
																	"nodeType": "YulIdentifier",
																	"src": "4423:13:5"
																},
																"nativeSrc": "4423:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4423:20:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "4412:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4412:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "4355:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4384:5:5",
														"nodeType": "YulTypedName",
														"src": "4384:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "4394:7:5",
														"nodeType": "YulTypedName",
														"src": "4394:7:5",
														"type": ""
													}
												],
												"src": "4355:94:5"
											},
											{
												"body": {
													"nativeSrc": "4502:53:5",
													"nodeType": "YulBlock",
													"src": "4502:53:5",
													"statements": [
														{
															"nativeSrc": "4512:37:5",
															"nodeType": "YulAssignment",
															"src": "4512:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4543:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4543:5:5"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "4523:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "4523:19:5"
																},
																"nativeSrc": "4523:26:5",
																"nodeType": "YulFunctionCall",
																"src": "4523:26:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "4512:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4512:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "4455:100:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4484:5:5",
														"nodeType": "YulTypedName",
														"src": "4484:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "4494:7:5",
														"nodeType": "YulTypedName",
														"src": "4494:7:5",
														"type": ""
													}
												],
												"src": "4455:100:5"
											},
											{
												"body": {
													"nativeSrc": "4644:74:5",
													"nodeType": "YulBlock",
													"src": "4644:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4661:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4661:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4704:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4704:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4686:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "4686:17:5"
																				},
																				"nativeSrc": "4686:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4686:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "4666:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "4666:19:5"
																		},
																		"nativeSrc": "4666:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4666:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4654:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:5"
																},
																"nativeSrc": "4654:58:5",
																"nodeType": "YulFunctionCall",
																"src": "4654:58:5"
															},
															"nativeSrc": "4654:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "4654:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "4561:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4632:5:5",
														"nodeType": "YulTypedName",
														"src": "4632:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4639:3:5",
														"nodeType": "YulTypedName",
														"src": "4639:3:5",
														"type": ""
													}
												],
												"src": "4561:157:5"
											},
											{
												"body": {
													"nativeSrc": "4771:32:5",
													"nodeType": "YulBlock",
													"src": "4771:32:5",
													"statements": [
														{
															"nativeSrc": "4781:16:5",
															"nodeType": "YulAssignment",
															"src": "4781:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "4792:5:5",
																"nodeType": "YulIdentifier",
																"src": "4792:5:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "4781:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4781:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "4724:79:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4753:5:5",
														"nodeType": "YulTypedName",
														"src": "4753:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "4763:7:5",
														"nodeType": "YulTypedName",
														"src": "4763:7:5",
														"type": ""
													}
												],
												"src": "4724:79:5"
											},
											{
												"body": {
													"nativeSrc": "4892:74:5",
													"nodeType": "YulBlock",
													"src": "4892:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4909:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4909:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4952:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4952:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4934:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "4934:17:5"
																				},
																				"nativeSrc": "4934:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4934:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "4914:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "4914:19:5"
																		},
																		"nativeSrc": "4914:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4914:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4902:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:5"
																},
																"nativeSrc": "4902:58:5",
																"nodeType": "YulFunctionCall",
																"src": "4902:58:5"
															},
															"nativeSrc": "4902:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "4902:58:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "4809:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4880:5:5",
														"nodeType": "YulTypedName",
														"src": "4880:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4887:3:5",
														"nodeType": "YulTypedName",
														"src": "4887:3:5",
														"type": ""
													}
												],
												"src": "4809:157:5"
											},
											{
												"body": {
													"nativeSrc": "5116:253:5",
													"nodeType": "YulBlock",
													"src": "5116:253:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5189:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5189:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5198:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5198:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "5127:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "5127:61:5"
																},
																"nativeSrc": "5127:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5127:75:5"
															},
															"nativeSrc": "5127:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5127:75:5"
														},
														{
															"nativeSrc": "5211:19:5",
															"nodeType": "YulAssignment",
															"src": "5211:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5222:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5222:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5227:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5227:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5218:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5218:3:5"
																},
																"nativeSrc": "5218:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5218:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5211:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5211:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5302:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5302:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5311:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5311:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "5240:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "5240:61:5"
																},
																"nativeSrc": "5240:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5240:75:5"
															},
															"nativeSrc": "5240:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5240:75:5"
														},
														{
															"nativeSrc": "5324:19:5",
															"nodeType": "YulAssignment",
															"src": "5324:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5335:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5335:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5340:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5331:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:5"
																},
																"nativeSrc": "5331:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5331:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5324:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5324:3:5"
																}
															]
														},
														{
															"nativeSrc": "5353:10:5",
															"nodeType": "YulAssignment",
															"src": "5353:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "5360:3:5",
																"nodeType": "YulIdentifier",
																"src": "5360:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5353:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5353:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4972:397:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5087:3:5",
														"nodeType": "YulTypedName",
														"src": "5087:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5093:6:5",
														"nodeType": "YulTypedName",
														"src": "5093:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5101:6:5",
														"nodeType": "YulTypedName",
														"src": "5101:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5112:3:5",
														"nodeType": "YulTypedName",
														"src": "5112:3:5",
														"type": ""
													}
												],
												"src": "4972:397:5"
											},
											{
												"body": {
													"nativeSrc": "5440:53:5",
													"nodeType": "YulBlock",
													"src": "5440:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5457:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5457:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5480:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5480:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5462:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5462:17:5"
																		},
																		"nativeSrc": "5462:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5462:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5450:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5450:6:5"
																},
																"nativeSrc": "5450:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5450:37:5"
															},
															"nativeSrc": "5450:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5450:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5375:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5428:5:5",
														"nodeType": "YulTypedName",
														"src": "5428:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5435:3:5",
														"nodeType": "YulTypedName",
														"src": "5435:3:5",
														"type": ""
													}
												],
												"src": "5375:118:5"
											},
											{
												"body": {
													"nativeSrc": "5597:124:5",
													"nodeType": "YulBlock",
													"src": "5597:124:5",
													"statements": [
														{
															"nativeSrc": "5607:26:5",
															"nodeType": "YulAssignment",
															"src": "5607:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5619:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5619:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5630:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5630:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5615:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:5"
																},
																"nativeSrc": "5615:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5615:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5607:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5607:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5687:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5687:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5700:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5700:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5711:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5711:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5696:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5696:3:5"
																		},
																		"nativeSrc": "5696:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5696:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5643:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5643:43:5"
																},
																"nativeSrc": "5643:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5643:71:5"
															},
															"nativeSrc": "5643:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5643:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5499:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5569:9:5",
														"nodeType": "YulTypedName",
														"src": "5569:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5581:6:5",
														"nodeType": "YulTypedName",
														"src": "5581:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5592:4:5",
														"nodeType": "YulTypedName",
														"src": "5592:4:5",
														"type": ""
													}
												],
												"src": "5499:222:5"
											},
											{
												"body": {
													"nativeSrc": "5790:80:5",
													"nodeType": "YulBlock",
													"src": "5790:80:5",
													"statements": [
														{
															"nativeSrc": "5800:22:5",
															"nodeType": "YulAssignment",
															"src": "5800:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5815:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5815:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5809:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5809:5:5"
																},
																"nativeSrc": "5809:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5809:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5800:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5800:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5858:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5858:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "5831:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "5831:26:5"
																},
																"nativeSrc": "5831:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5831:33:5"
															},
															"nativeSrc": "5831:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5831:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "5727:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5768:6:5",
														"nodeType": "YulTypedName",
														"src": "5768:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:5",
														"nodeType": "YulTypedName",
														"src": "5776:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5784:5:5",
														"nodeType": "YulTypedName",
														"src": "5784:5:5",
														"type": ""
													}
												],
												"src": "5727:143:5"
											},
											{
												"body": {
													"nativeSrc": "5953:274:5",
													"nodeType": "YulBlock",
													"src": "5953:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5999:83:5",
																"nodeType": "YulBlock",
																"src": "5999:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6001:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "6001:77:5"
																			},
																			"nativeSrc": "6001:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6001:79:5"
																		},
																		"nativeSrc": "6001:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6001:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5974:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5974:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5983:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5983:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5970:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5970:3:5"
																		},
																		"nativeSrc": "5970:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5970:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5995:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5995:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5966:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5966:3:5"
																},
																"nativeSrc": "5966:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5966:32:5"
															},
															"nativeSrc": "5963:119:5",
															"nodeType": "YulIf",
															"src": "5963:119:5"
														},
														{
															"nativeSrc": "6092:128:5",
															"nodeType": "YulBlock",
															"src": "6092:128:5",
															"statements": [
																{
																	"nativeSrc": "6107:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6107:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6121:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6121:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6111:6:5",
																			"nodeType": "YulTypedName",
																			"src": "6111:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6136:74:5",
																	"nodeType": "YulAssignment",
																	"src": "6136:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6182:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6182:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6193:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6193:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6178:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6178:3:5"
																				},
																				"nativeSrc": "6178:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6178:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6202:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6202:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "6146:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "6146:31:5"
																		},
																		"nativeSrc": "6146:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6146:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6136:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6136:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "5876:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5923:9:5",
														"nodeType": "YulTypedName",
														"src": "5923:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5934:7:5",
														"nodeType": "YulTypedName",
														"src": "5934:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5946:6:5",
														"nodeType": "YulTypedName",
														"src": "5946:6:5",
														"type": ""
													}
												],
												"src": "5876:351:5"
											},
											{
												"body": {
													"nativeSrc": "6329:73:5",
													"nodeType": "YulBlock",
													"src": "6329:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6346:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6346:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6351:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6351:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6339:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:5"
																},
																"nativeSrc": "6339:19:5",
																"nodeType": "YulFunctionCall",
																"src": "6339:19:5"
															},
															"nativeSrc": "6339:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "6339:19:5"
														},
														{
															"nativeSrc": "6367:29:5",
															"nodeType": "YulAssignment",
															"src": "6367:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6386:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6386:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6391:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6391:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6382:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6382:3:5"
																},
																"nativeSrc": "6382:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6382:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6367:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6367:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6233:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6301:3:5",
														"nodeType": "YulTypedName",
														"src": "6301:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6306:6:5",
														"nodeType": "YulTypedName",
														"src": "6306:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6317:11:5",
														"nodeType": "YulTypedName",
														"src": "6317:11:5",
														"type": ""
													}
												],
												"src": "6233:169:5"
											},
											{
												"body": {
													"nativeSrc": "6514:114:5",
													"nodeType": "YulBlock",
													"src": "6514:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6536:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6536:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6544:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6544:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6532:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6532:3:5"
																		},
																		"nativeSrc": "6532:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6532:14:5"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e46",
																		"kind": "string",
																		"nativeSrc": "6548:34:5",
																		"nodeType": "YulLiteral",
																		"src": "6548:34:5",
																		"type": "",
																		"value": "You are not the owner of this NF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6525:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6525:6:5"
																},
																"nativeSrc": "6525:58:5",
																"nodeType": "YulFunctionCall",
																"src": "6525:58:5"
															},
															"nativeSrc": "6525:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "6525:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6604:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6604:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6612:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6612:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6600:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:5"
																		},
																		"nativeSrc": "6600:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:15:5"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nativeSrc": "6617:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6617:3:5",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6593:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6593:6:5"
																},
																"nativeSrc": "6593:28:5",
																"nodeType": "YulFunctionCall",
																"src": "6593:28:5"
															},
															"nativeSrc": "6593:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "6593:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
												"nativeSrc": "6408:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6506:6:5",
														"nodeType": "YulTypedName",
														"src": "6506:6:5",
														"type": ""
													}
												],
												"src": "6408:220:5"
											},
											{
												"body": {
													"nativeSrc": "6780:220:5",
													"nodeType": "YulBlock",
													"src": "6780:220:5",
													"statements": [
														{
															"nativeSrc": "6790:74:5",
															"nodeType": "YulAssignment",
															"src": "6790:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6856:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6856:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6861:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6861:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6797:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6797:58:5"
																},
																"nativeSrc": "6797:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6797:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6790:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6790:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6962:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6962:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																	"nativeSrc": "6873:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6873:88:5"
																},
																"nativeSrc": "6873:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6873:93:5"
															},
															"nativeSrc": "6873:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6873:93:5"
														},
														{
															"nativeSrc": "6975:19:5",
															"nodeType": "YulAssignment",
															"src": "6975:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6986:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6986:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6991:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6991:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6982:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6982:3:5"
																},
																"nativeSrc": "6982:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6982:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6975:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6975:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6634:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6768:3:5",
														"nodeType": "YulTypedName",
														"src": "6768:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6776:3:5",
														"nodeType": "YulTypedName",
														"src": "6776:3:5",
														"type": ""
													}
												],
												"src": "6634:366:5"
											},
											{
												"body": {
													"nativeSrc": "7177:248:5",
													"nodeType": "YulBlock",
													"src": "7177:248:5",
													"statements": [
														{
															"nativeSrc": "7187:26:5",
															"nodeType": "YulAssignment",
															"src": "7187:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7199:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7199:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7210:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7210:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7195:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:5"
																},
																"nativeSrc": "7195:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7195:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7187:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7187:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7234:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7234:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7245:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7245:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7230:3:5"
																		},
																		"nativeSrc": "7230:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7230:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7253:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7253:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7259:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7259:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7249:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:5"
																		},
																		"nativeSrc": "7249:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7249:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7223:6:5"
																},
																"nativeSrc": "7223:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7223:47:5"
															},
															"nativeSrc": "7223:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7223:47:5"
														},
														{
															"nativeSrc": "7279:139:5",
															"nodeType": "YulAssignment",
															"src": "7279:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7413:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7413:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7287:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7287:124:5"
																},
																"nativeSrc": "7287:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7287:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7279:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7279:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7006:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7157:9:5",
														"nodeType": "YulTypedName",
														"src": "7157:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7172:4:5",
														"nodeType": "YulTypedName",
														"src": "7172:4:5",
														"type": ""
													}
												],
												"src": "7006:419:5"
											},
											{
												"body": {
													"nativeSrc": "7537:62:5",
													"nodeType": "YulBlock",
													"src": "7537:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7559:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7559:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7567:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7567:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7555:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:5"
																		},
																		"nativeSrc": "7555:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7555:14:5"
																	},
																	{
																		"hexValue": "4e465420616c72656164792073746f726564",
																		"kind": "string",
																		"nativeSrc": "7571:20:5",
																		"nodeType": "YulLiteral",
																		"src": "7571:20:5",
																		"type": "",
																		"value": "NFT already stored"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7548:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:5"
																},
																"nativeSrc": "7548:44:5",
																"nodeType": "YulFunctionCall",
																"src": "7548:44:5"
															},
															"nativeSrc": "7548:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "7548:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3",
												"nativeSrc": "7431:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7529:6:5",
														"nodeType": "YulTypedName",
														"src": "7529:6:5",
														"type": ""
													}
												],
												"src": "7431:168:5"
											},
											{
												"body": {
													"nativeSrc": "7751:220:5",
													"nodeType": "YulBlock",
													"src": "7751:220:5",
													"statements": [
														{
															"nativeSrc": "7761:74:5",
															"nodeType": "YulAssignment",
															"src": "7761:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7827:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7827:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7832:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7832:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7768:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "7768:58:5"
																},
																"nativeSrc": "7768:67:5",
																"nodeType": "YulFunctionCall",
																"src": "7768:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7761:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7761:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7933:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7933:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3",
																	"nativeSrc": "7844:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "7844:88:5"
																},
																"nativeSrc": "7844:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7844:93:5"
															},
															"nativeSrc": "7844:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "7844:93:5"
														},
														{
															"nativeSrc": "7946:19:5",
															"nodeType": "YulAssignment",
															"src": "7946:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7957:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7957:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7962:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7962:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7953:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7953:3:5"
																},
																"nativeSrc": "7953:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7953:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7946:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7946:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7605:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7739:3:5",
														"nodeType": "YulTypedName",
														"src": "7739:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7747:3:5",
														"nodeType": "YulTypedName",
														"src": "7747:3:5",
														"type": ""
													}
												],
												"src": "7605:366:5"
											},
											{
												"body": {
													"nativeSrc": "8148:248:5",
													"nodeType": "YulBlock",
													"src": "8148:248:5",
													"statements": [
														{
															"nativeSrc": "8158:26:5",
															"nodeType": "YulAssignment",
															"src": "8158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8170:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8170:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8181:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8181:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8166:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:5"
																},
																"nativeSrc": "8166:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8158:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8158:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8205:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8205:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8216:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8216:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8201:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8201:3:5"
																		},
																		"nativeSrc": "8201:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8201:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8224:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8224:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8230:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8230:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8220:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8220:3:5"
																		},
																		"nativeSrc": "8220:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8220:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8194:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8194:6:5"
																},
																"nativeSrc": "8194:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8194:47:5"
															},
															"nativeSrc": "8194:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8194:47:5"
														},
														{
															"nativeSrc": "8250:139:5",
															"nodeType": "YulAssignment",
															"src": "8250:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8384:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8384:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8258:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8258:124:5"
																},
																"nativeSrc": "8258:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8258:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8250:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8250:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7977:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8128:9:5",
														"nodeType": "YulTypedName",
														"src": "8128:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8143:4:5",
														"nodeType": "YulTypedName",
														"src": "8143:4:5",
														"type": ""
													}
												],
												"src": "7977:419:5"
											},
											{
												"body": {
													"nativeSrc": "8556:288:5",
													"nodeType": "YulBlock",
													"src": "8556:288:5",
													"statements": [
														{
															"nativeSrc": "8566:26:5",
															"nodeType": "YulAssignment",
															"src": "8566:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8578:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8578:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8589:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8589:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8574:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8574:3:5"
																},
																"nativeSrc": "8574:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8574:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8566:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8566:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8646:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8646:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8659:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8659:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8670:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8670:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8655:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8655:3:5"
																		},
																		"nativeSrc": "8655:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8655:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8602:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8602:43:5"
																},
																"nativeSrc": "8602:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8602:71:5"
															},
															"nativeSrc": "8602:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8602:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8727:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8727:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8740:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8740:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8751:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8751:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8736:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8736:3:5"
																		},
																		"nativeSrc": "8736:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8736:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8683:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8683:43:5"
																},
																"nativeSrc": "8683:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8683:72:5"
															},
															"nativeSrc": "8683:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8683:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8809:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8809:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8822:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8822:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8833:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8833:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8818:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:5"
																		},
																		"nativeSrc": "8818:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8818:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8765:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8765:43:5"
																},
																"nativeSrc": "8765:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8765:72:5"
															},
															"nativeSrc": "8765:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8765:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8402:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8512:9:5",
														"nodeType": "YulTypedName",
														"src": "8512:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8524:6:5",
														"nodeType": "YulTypedName",
														"src": "8524:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8532:6:5",
														"nodeType": "YulTypedName",
														"src": "8532:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8540:6:5",
														"nodeType": "YulTypedName",
														"src": "8540:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8551:4:5",
														"nodeType": "YulTypedName",
														"src": "8551:4:5",
														"type": ""
													}
												],
												"src": "8402:442:5"
											},
											{
												"body": {
													"nativeSrc": "8956:119:5",
													"nodeType": "YulBlock",
													"src": "8956:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8978:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8978:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8986:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8986:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8974:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8974:3:5"
																		},
																		"nativeSrc": "8974:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8974:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "8990:34:5",
																		"nodeType": "YulLiteral",
																		"src": "8990:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8967:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8967:6:5"
																},
																"nativeSrc": "8967:58:5",
																"nodeType": "YulFunctionCall",
																"src": "8967:58:5"
															},
															"nativeSrc": "8967:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "8967:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9046:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9054:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9054:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9042:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:5"
																		},
																		"nativeSrc": "9042:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9042:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "9059:8:5",
																		"nodeType": "YulLiteral",
																		"src": "9059:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9035:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9035:6:5"
																},
																"nativeSrc": "9035:33:5",
																"nodeType": "YulFunctionCall",
																"src": "9035:33:5"
															},
															"nativeSrc": "9035:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "9035:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "8850:225:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8948:6:5",
														"nodeType": "YulTypedName",
														"src": "8948:6:5",
														"type": ""
													}
												],
												"src": "8850:225:5"
											},
											{
												"body": {
													"nativeSrc": "9227:220:5",
													"nodeType": "YulBlock",
													"src": "9227:220:5",
													"statements": [
														{
															"nativeSrc": "9237:74:5",
															"nodeType": "YulAssignment",
															"src": "9237:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9303:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9303:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9308:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9308:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9244:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9244:58:5"
																},
																"nativeSrc": "9244:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9244:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9237:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9237:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9409:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9409:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "9320:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9320:88:5"
																},
																"nativeSrc": "9320:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9320:93:5"
															},
															"nativeSrc": "9320:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9320:93:5"
														},
														{
															"nativeSrc": "9422:19:5",
															"nodeType": "YulAssignment",
															"src": "9422:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9433:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9433:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9438:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9438:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9429:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9429:3:5"
																},
																"nativeSrc": "9429:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9429:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9422:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9422:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9081:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9215:3:5",
														"nodeType": "YulTypedName",
														"src": "9215:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9223:3:5",
														"nodeType": "YulTypedName",
														"src": "9223:3:5",
														"type": ""
													}
												],
												"src": "9081:366:5"
											},
											{
												"body": {
													"nativeSrc": "9624:248:5",
													"nodeType": "YulBlock",
													"src": "9624:248:5",
													"statements": [
														{
															"nativeSrc": "9634:26:5",
															"nodeType": "YulAssignment",
															"src": "9634:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9646:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9646:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9657:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9657:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9642:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9642:3:5"
																},
																"nativeSrc": "9642:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9642:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9634:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9634:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9681:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9681:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9692:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9692:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9677:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9677:3:5"
																		},
																		"nativeSrc": "9677:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9677:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9700:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9700:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9706:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9706:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9696:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9696:3:5"
																		},
																		"nativeSrc": "9696:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9696:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9670:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9670:6:5"
																},
																"nativeSrc": "9670:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9670:47:5"
															},
															"nativeSrc": "9670:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9670:47:5"
														},
														{
															"nativeSrc": "9726:139:5",
															"nodeType": "YulAssignment",
															"src": "9726:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9860:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9860:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9734:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9734:124:5"
																},
																"nativeSrc": "9734:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9734:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9726:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9726:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9453:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9604:9:5",
														"nodeType": "YulTypedName",
														"src": "9604:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9619:4:5",
														"nodeType": "YulTypedName",
														"src": "9619:4:5",
														"type": ""
													}
												],
												"src": "9453:419:5"
											},
											{
												"body": {
													"nativeSrc": "9984:76:5",
													"nodeType": "YulBlock",
													"src": "9984:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10006:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10006:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10014:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10014:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10002:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10002:3:5"
																		},
																		"nativeSrc": "10002:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10002:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "10018:34:5",
																		"nodeType": "YulLiteral",
																		"src": "10018:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9995:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9995:6:5"
																},
																"nativeSrc": "9995:58:5",
																"nodeType": "YulFunctionCall",
																"src": "9995:58:5"
															},
															"nativeSrc": "9995:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "9995:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "9878:182:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9976:6:5",
														"nodeType": "YulTypedName",
														"src": "9976:6:5",
														"type": ""
													}
												],
												"src": "9878:182:5"
											},
											{
												"body": {
													"nativeSrc": "10212:220:5",
													"nodeType": "YulBlock",
													"src": "10212:220:5",
													"statements": [
														{
															"nativeSrc": "10222:74:5",
															"nodeType": "YulAssignment",
															"src": "10222:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10288:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10288:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10293:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10293:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10229:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10229:58:5"
																},
																"nativeSrc": "10229:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10229:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10222:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10222:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10394:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10394:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "10305:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10305:88:5"
																},
																"nativeSrc": "10305:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10305:93:5"
															},
															"nativeSrc": "10305:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10305:93:5"
														},
														{
															"nativeSrc": "10407:19:5",
															"nodeType": "YulAssignment",
															"src": "10407:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10418:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10418:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10423:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10423:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10414:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10414:3:5"
																},
																"nativeSrc": "10414:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10414:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10407:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10407:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10066:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10200:3:5",
														"nodeType": "YulTypedName",
														"src": "10200:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10208:3:5",
														"nodeType": "YulTypedName",
														"src": "10208:3:5",
														"type": ""
													}
												],
												"src": "10066:366:5"
											},
											{
												"body": {
													"nativeSrc": "10609:248:5",
													"nodeType": "YulBlock",
													"src": "10609:248:5",
													"statements": [
														{
															"nativeSrc": "10619:26:5",
															"nodeType": "YulAssignment",
															"src": "10619:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10631:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10631:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10642:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10642:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10627:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10627:3:5"
																},
																"nativeSrc": "10627:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10627:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10619:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10619:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10666:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10666:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10677:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10677:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10662:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10662:3:5"
																		},
																		"nativeSrc": "10662:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10662:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10685:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10685:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10691:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10691:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10681:3:5"
																		},
																		"nativeSrc": "10681:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10681:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10655:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10655:6:5"
																},
																"nativeSrc": "10655:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10655:47:5"
															},
															"nativeSrc": "10655:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10655:47:5"
														},
														{
															"nativeSrc": "10711:139:5",
															"nodeType": "YulAssignment",
															"src": "10711:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10845:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10845:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10719:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10719:124:5"
																},
																"nativeSrc": "10719:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10719:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10711:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10711:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10438:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10589:9:5",
														"nodeType": "YulTypedName",
														"src": "10589:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10604:4:5",
														"nodeType": "YulTypedName",
														"src": "10604:4:5",
														"type": ""
													}
												],
												"src": "10438:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$228_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$228_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner of this NF\")\n\n        mstore(add(memPtr, 32), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT already stored\")\n\n    }\n\n    function abi_encode_t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063c9ff64ec11610059578063c9ff64ec146100d7578063ceeddea414610107578063f2fde38b14610123578063f9be04ca1461013f5761007b565b8063223417411461007f578063715018a6146100af5780638da5cb5b146100b9575b5f80fd5b610099600480360381019061009491906106b7565b61015d565b6040516100a691906106fc565b60405180910390f35b6100b761017a565b005b6100c161018d565b6040516100ce9190610754565b60405180910390f35b6100f160048036038101906100ec91906107a0565b6101b4565b6040516100fe91906106fc565b60405180910390f35b610121600480360381019061011c91906107a0565b610207565b005b61013d600480360381019061013891906107f5565b610493565b005b610147610515565b604051610154919061087b565b60405180910390f35b6002602052805f5260405f205f915054906101000a900460ff1681565b61018261053a565b61018b5f6105b8565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8033836040516020016101c99291906108f9565b60405160208183030381529060405280519060200120905060025f8281526020019081526020015f205f9054906101000a900460ff16915050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102789190610933565b602060405180830381865afa158015610293573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102b79190610960565b73ffffffffffffffffffffffffffffffffffffffff161461030d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030490610a0b565b60405180910390fd5b5f33826040516020016103219291906108f9565b60405160208183030381529060405280519060200120905060025f8281526020019081526020015f205f9054906101000a900460ff1615610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e90610a73565b60405180910390fd5b600160025f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161041e93929190610a91565b5f604051808303815f87803b158015610435575f80fd5b505af1158015610447573d5f803e3d5ffd5b50505050813373ffffffffffffffffffffffffffffffffffffffff167fcd7d8045490761f6468db55184c41c74ab6696514d5c6b630287bbd2f4e485c160405160405180910390a35050565b61049b61053a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610b36565b60405180910390fd5b610512816105b8565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610542610679565b73ffffffffffffffffffffffffffffffffffffffff1661056061018d565b73ffffffffffffffffffffffffffffffffffffffff16146105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90610b9e565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f819050919050565b61069681610684565b81146106a0575f80fd5b50565b5f813590506106b18161068d565b92915050565b5f602082840312156106cc576106cb610680565b5b5f6106d9848285016106a3565b91505092915050565b5f8115159050919050565b6106f6816106e2565b82525050565b5f60208201905061070f5f8301846106ed565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61073e82610715565b9050919050565b61074e81610734565b82525050565b5f6020820190506107675f830184610745565b92915050565b5f819050919050565b61077f8161076d565b8114610789575f80fd5b50565b5f8135905061079a81610776565b92915050565b5f602082840312156107b5576107b4610680565b5b5f6107c28482850161078c565b91505092915050565b6107d481610734565b81146107de575f80fd5b50565b5f813590506107ef816107cb565b92915050565b5f6020828403121561080a57610809610680565b5b5f610817848285016107e1565b91505092915050565b5f819050919050565b5f61084361083e61083984610715565b610820565b610715565b9050919050565b5f61085482610829565b9050919050565b5f6108658261084a565b9050919050565b6108758161085b565b82525050565b5f60208201905061088e5f83018461086c565b92915050565b5f8160601b9050919050565b5f6108aa82610894565b9050919050565b5f6108bb826108a0565b9050919050565b6108d36108ce82610734565b6108b1565b82525050565b5f819050919050565b6108f36108ee8261076d565b6108d9565b82525050565b5f61090482856108c2565b60148201915061091482846108e2565b6020820191508190509392505050565b61092d8161076d565b82525050565b5f6020820190506109465f830184610924565b92915050565b5f8151905061095a816107cb565b92915050565b5f6020828403121561097557610974610680565b5b5f6109828482850161094c565b91505092915050565b5f82825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e465f8201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6109f560218361098b565b9150610a008261099b565b604082019050919050565b5f6020820190508181035f830152610a22816109e9565b9050919050565b7f4e465420616c72656164792073746f72656400000000000000000000000000005f82015250565b5f610a5d60128361098b565b9150610a6882610a29565b602082019050919050565b5f6020820190508181035f830152610a8a81610a51565b9050919050565b5f606082019050610aa45f830186610745565b610ab16020830185610745565b610abe6040830184610924565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610b2060268361098b565b9150610b2b82610ac6565b604082019050919050565b5f6020820190508181035f830152610b4d81610b14565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f610b8860208361098b565b9150610b9382610b54565b602082019050919050565b5f6020820190508181035f830152610bb581610b7c565b905091905056fea26469706673582212207d6bd7043c879a1f4c9ff3134e42ff43c9cad58a749385b4d18ba7498509820a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC9FF64EC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC9FF64EC EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xCEEDDEA4 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF9BE04CA EQ PUSH2 0x13F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x22341741 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x147 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x53A JUMP JUMPDEST PUSH2 0x18B PUSH0 PUSH2 0x5B8 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 CALLER DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C9 SWAP3 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x321 SWAP3 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA91 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCD7D8045490761F6468DB55184C41C74AB6696514D5C6B630287BBD2F4E485C1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x49B PUSH2 0x53A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x512 DUP2 PUSH2 0x5B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x542 PUSH2 0x679 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x560 PUSH2 0x18D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP1 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x696 DUP2 PUSH2 0x684 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B1 DUP2 PUSH2 0x68D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6D9 DUP5 DUP3 DUP6 ADD PUSH2 0x6A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F6 DUP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x70F PUSH0 DUP4 ADD DUP5 PUSH2 0x6ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x73E DUP3 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74E DUP2 PUSH2 0x734 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x767 PUSH0 DUP4 ADD DUP5 PUSH2 0x745 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x77F DUP2 PUSH2 0x76D JUMP JUMPDEST DUP2 EQ PUSH2 0x789 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x79A DUP2 PUSH2 0x776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B5 JUMPI PUSH2 0x7B4 PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7C2 DUP5 DUP3 DUP6 ADD PUSH2 0x78C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D4 DUP2 PUSH2 0x734 JUMP JUMPDEST DUP2 EQ PUSH2 0x7DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7EF DUP2 PUSH2 0x7CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x817 DUP5 DUP3 DUP6 ADD PUSH2 0x7E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x843 PUSH2 0x83E PUSH2 0x839 DUP5 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x854 DUP3 PUSH2 0x829 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x865 DUP3 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x85B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88E PUSH0 DUP4 ADD DUP5 PUSH2 0x86C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA DUP3 PUSH2 0x894 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8BB DUP3 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x8CE DUP3 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x8EE DUP3 PUSH2 0x76D JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x904 DUP3 DUP6 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x914 DUP3 DUP5 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x92D DUP2 PUSH2 0x76D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x946 PUSH0 DUP4 ADD DUP5 PUSH2 0x924 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x95A DUP2 PUSH2 0x7CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x975 JUMPI PUSH2 0x974 PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x982 DUP5 DUP3 DUP6 ADD PUSH2 0x94C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973204E46 PUSH0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9F5 PUSH1 0x21 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP2 POP PUSH2 0xA00 DUP3 PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA22 DUP2 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E465420616C72656164792073746F7265640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA5D PUSH1 0x12 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP2 POP PUSH2 0xA68 DUP3 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA8A DUP2 PUSH2 0xA51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAA4 PUSH0 DUP4 ADD DUP7 PUSH2 0x745 JUMP JUMPDEST PUSH2 0xAB1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x745 JUMP JUMPDEST PUSH2 0xABE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x924 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH1 0x26 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP2 POP PUSH2 0xB2B DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB4D DUP2 PUSH2 0xB14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB88 PUSH1 0x20 DUP4 PUSH2 0x98B JUMP JUMPDEST SWAP2 POP PUSH2 0xB93 DUP3 PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBB5 DUP2 PUSH2 0xB7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x6BD7043C879A1F4C9FF3134E42FF43C9CAD58A749385B4D18BA749850982 EXP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "170:957:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;244:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;931:194:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:455;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;207:31:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;244:42;;;;;;;;;;;;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;931:194:4:-;996:4;1012:17;1059:10;1071:7;1042:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1032:48;;;;;;1012:68;;1097:10;:21;1108:9;1097:21;;;;;;;;;;;;;;;;;;;;;1090:28;;;931:194;;;:::o;470:455::-;569:10;532:47;;:16;;;;;;;;;;;:24;;;557:7;532:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;524:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;627:17;674:10;686:7;657:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;647:48;;;;;;627:68;;714:10;:21;725:9;714:21;;;;;;;;;;;;;;;;;;;;;713:22;705:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;793:4;769:10;:21;780:9;769:21;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;807:16;;;;;;;;;;;:29;;;837:10;857:4;864:7;807:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;910:7;898:10;888:30;;;;;;;;;;;;514:411;470:455;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;207:31:4:-;;;;;;;;;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o;1452:126::-;1489:7;1529:42;1522:5;1518:54;1507:65;;1452:126;;;:::o;1584:96::-;1621:7;1650:24;1668:5;1650:24;:::i;:::-;1639:35;;1584:96;;;:::o;1686:118::-;1773:24;1791:5;1773:24;:::i;:::-;1768:3;1761:37;1686:118;;:::o;1810:222::-;1903:4;1941:2;1930:9;1926:18;1918:26;;1954:71;2022:1;2011:9;2007:17;1998:6;1954:71;:::i;:::-;1810:222;;;;:::o;2038:77::-;2075:7;2104:5;2093:16;;2038:77;;;:::o;2121:122::-;2194:24;2212:5;2194:24;:::i;:::-;2187:5;2184:35;2174:63;;2233:1;2230;2223:12;2174:63;2121:122;:::o;2249:139::-;2295:5;2333:6;2320:20;2311:29;;2349:33;2376:5;2349:33;:::i;:::-;2249:139;;;;:::o;2394:329::-;2453:6;2502:2;2490:9;2481:7;2477:23;2473:32;2470:119;;;2508:79;;:::i;:::-;2470:119;2628:1;2653:53;2698:7;2689:6;2678:9;2674:22;2653:53;:::i;:::-;2643:63;;2599:117;2394:329;;;;:::o;2729:122::-;2802:24;2820:5;2802:24;:::i;:::-;2795:5;2792:35;2782:63;;2841:1;2838;2831:12;2782:63;2729:122;:::o;2857:139::-;2903:5;2941:6;2928:20;2919:29;;2957:33;2984:5;2957:33;:::i;:::-;2857:139;;;;:::o;3002:329::-;3061:6;3110:2;3098:9;3089:7;3085:23;3081:32;3078:119;;;3116:79;;:::i;:::-;3078:119;3236:1;3261:53;3306:7;3297:6;3286:9;3282:22;3261:53;:::i;:::-;3251:63;;3207:117;3002:329;;;;:::o;3337:60::-;3365:3;3386:5;3379:12;;3337:60;;;:::o;3403:142::-;3453:9;3486:53;3504:34;3513:24;3531:5;3513:24;:::i;:::-;3504:34;:::i;:::-;3486:53;:::i;:::-;3473:66;;3403:142;;;:::o;3551:126::-;3601:9;3634:37;3665:5;3634:37;:::i;:::-;3621:50;;3551:126;;;:::o;3683:141::-;3748:9;3781:37;3812:5;3781:37;:::i;:::-;3768:50;;3683:141;;;:::o;3830:161::-;3932:52;3978:5;3932:52;:::i;:::-;3927:3;3920:65;3830:161;;:::o;3997:252::-;4105:4;4143:2;4132:9;4128:18;4120:26;;4156:86;4239:1;4228:9;4224:17;4215:6;4156:86;:::i;:::-;3997:252;;;;:::o;4255:94::-;4288:8;4336:5;4332:2;4328:14;4307:35;;4255:94;;;:::o;4355:::-;4394:7;4423:20;4437:5;4423:20;:::i;:::-;4412:31;;4355:94;;;:::o;4455:100::-;4494:7;4523:26;4543:5;4523:26;:::i;:::-;4512:37;;4455:100;;;:::o;4561:157::-;4666:45;4686:24;4704:5;4686:24;:::i;:::-;4666:45;:::i;:::-;4661:3;4654:58;4561:157;;:::o;4724:79::-;4763:7;4792:5;4781:16;;4724:79;;;:::o;4809:157::-;4914:45;4934:24;4952:5;4934:24;:::i;:::-;4914:45;:::i;:::-;4909:3;4902:58;4809:157;;:::o;4972:397::-;5112:3;5127:75;5198:3;5189:6;5127:75;:::i;:::-;5227:2;5222:3;5218:12;5211:19;;5240:75;5311:3;5302:6;5240:75;:::i;:::-;5340:2;5335:3;5331:12;5324:19;;5360:3;5353:10;;4972:397;;;;;:::o;5375:118::-;5462:24;5480:5;5462:24;:::i;:::-;5457:3;5450:37;5375:118;;:::o;5499:222::-;5592:4;5630:2;5619:9;5615:18;5607:26;;5643:71;5711:1;5700:9;5696:17;5687:6;5643:71;:::i;:::-;5499:222;;;;:::o;5727:143::-;5784:5;5815:6;5809:13;5800:22;;5831:33;5858:5;5831:33;:::i;:::-;5727:143;;;;:::o;5876:351::-;5946:6;5995:2;5983:9;5974:7;5970:23;5966:32;5963:119;;;6001:79;;:::i;:::-;5963:119;6121:1;6146:64;6202:7;6193:6;6182:9;6178:22;6146:64;:::i;:::-;6136:74;;6092:128;5876:351;;;;:::o;6233:169::-;6317:11;6351:6;6346:3;6339:19;6391:4;6386:3;6382:14;6367:29;;6233:169;;;;:::o;6408:220::-;6548:34;6544:1;6536:6;6532:14;6525:58;6617:3;6612:2;6604:6;6600:15;6593:28;6408:220;:::o;6634:366::-;6776:3;6797:67;6861:2;6856:3;6797:67;:::i;:::-;6790:74;;6873:93;6962:3;6873:93;:::i;:::-;6991:2;6986:3;6982:12;6975:19;;6634:366;;;:::o;7006:419::-;7172:4;7210:2;7199:9;7195:18;7187:26;;7259:9;7253:4;7249:20;7245:1;7234:9;7230:17;7223:47;7287:131;7413:4;7287:131;:::i;:::-;7279:139;;7006:419;;;:::o;7431:168::-;7571:20;7567:1;7559:6;7555:14;7548:44;7431:168;:::o;7605:366::-;7747:3;7768:67;7832:2;7827:3;7768:67;:::i;:::-;7761:74;;7844:93;7933:3;7844:93;:::i;:::-;7962:2;7957:3;7953:12;7946:19;;7605:366;;;:::o;7977:419::-;8143:4;8181:2;8170:9;8166:18;8158:26;;8230:9;8224:4;8220:20;8216:1;8205:9;8201:17;8194:47;8258:131;8384:4;8258:131;:::i;:::-;8250:139;;7977:419;;;:::o;8402:442::-;8551:4;8589:2;8578:9;8574:18;8566:26;;8602:71;8670:1;8659:9;8655:17;8646:6;8602:71;:::i;:::-;8683:72;8751:2;8740:9;8736:18;8727:6;8683:72;:::i;:::-;8765;8833:2;8822:9;8818:18;8809:6;8765:72;:::i;:::-;8402:442;;;;;;:::o;8850:225::-;8990:34;8986:1;8978:6;8974:14;8967:58;9059:8;9054:2;9046:6;9042:15;9035:33;8850:225;:::o;9081:366::-;9223:3;9244:67;9308:2;9303:3;9244:67;:::i;:::-;9237:74;;9320:93;9409:3;9320:93;:::i;:::-;9438:2;9433:3;9429:12;9422:19;;9081:366;;;:::o;9453:419::-;9619:4;9657:2;9646:9;9642:18;9634:26;;9706:9;9700:4;9696:20;9692:1;9681:9;9677:17;9670:47;9734:131;9860:4;9734:131;:::i;:::-;9726:139;;9453:419;;;:::o;9878:182::-;10018:34;10014:1;10006:6;10002:14;9995:58;9878:182;:::o;10066:366::-;10208:3;10229:67;10293:2;10288:3;10229:67;:::i;:::-;10222:74;;10305:93;10394:3;10305:93;:::i;:::-;10423:2;10418:3;10414:12;10407:19;;10066:366;;;:::o;10438:419::-;10604:4;10642:2;10631:9;10627:18;10619:26;;10691:9;10685:4;10681:20;10677:1;10666:9;10662:17;10655:47;10719:131;10845:4;10719:131;:::i;:::-;10711:139;;10438:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "611600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"gameItemContract()": "infinite",
								"getStoredStatus(uint256)": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "30413",
								"storeNFT(uint256)": "infinite",
								"storedNFTs(bytes32)": "2786",
								"transferOwnership(address)": "30775"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 464,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 464,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 464,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 464,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 464,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 363,
									"end": 464,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 363,
									"end": 464,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 363,
									"end": 464,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 439,
									"end": 456,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 412,
									"end": 428,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 428,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 457,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 412,
									"end": 457,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 412,
									"end": 457,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 412,
									"end": 457,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 412,
									"end": 457,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 363,
									"end": 464,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 1127,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d6bd7043c879a1f4c9ff3134e42ff43c9cad58a749385b4d18ba7498509820a64736f6c634300081a0033",
									".code": [
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "C9FF64EC"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "C9FF64EC"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "CEEDDEA4"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "F9BE04CA"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "22341741"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 1127,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 244,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 244,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 244,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 931,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 931,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 470,
											"end": 925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 470,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 470,
											"end": 925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 470,
											"end": 925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 470,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 470,
											"end": 925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 470,
											"end": 925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 238,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 207,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 207,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 244,
											"end": 286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1069,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1042,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1080,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1080,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1080,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1107,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1097,
											"end": 1118,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 569,
											"end": 579,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 532,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 532,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 532,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 548,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 532,
											"end": 548,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 548,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 532,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 548,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 557,
											"end": 564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 532,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 532,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 565,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 532,
											"end": 565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 532,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 532,
											"end": 579,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 524,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 524,
											"end": 617,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 524,
											"end": 617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 627,
											"end": 644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 684,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 686,
											"end": 693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 657,
											"end": 694,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 657,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 657,
											"end": 694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 657,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 647,
											"end": 695,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 695,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 695,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 627,
											"end": 695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 714,
											"end": 735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 735,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 714,
											"end": 735,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 714,
											"end": 735,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 714,
											"end": 735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 713,
											"end": 735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 705,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 705,
											"end": 758,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 793,
											"end": 797,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 769,
											"end": 779,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 769,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 789,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 790,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 790,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 790,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 769,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 797,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 769,
											"end": 797,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 769,
											"end": 797,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 769,
											"end": 797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 823,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 823,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 823,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 807,
											"end": 823,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 823,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 807,
											"end": 823,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 823,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 823,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 807,
											"end": 823,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 823,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 807,
											"end": 836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 807,
											"end": 836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 807,
											"end": 836,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 837,
											"end": 847,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 857,
											"end": 861,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 864,
											"end": 871,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 807,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 807,
											"end": 872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 898,
											"end": 908,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 888,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 888,
											"end": 918,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 888,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "CD7D8045490761F6468DB55184C41C74AB6696514D5C6B630287BBD2F4E485C1"
										},
										{
											"begin": 888,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 888,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 888,
											"end": 918,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 888,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 888,
											"end": 918,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 888,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 888,
											"end": 918,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 514,
											"end": 925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 470,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 238,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 207,
											"end": 238,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 207,
											"end": 238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1628,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1668,
											"end": 1673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1650,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1584,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1773,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1903,
											"end": 1907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1954,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1954,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 2032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2115,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2038,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2243,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2121,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2194,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2194,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2219,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2174,
											"end": 2237,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2235,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2237,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2174,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2388,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2249,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2376,
											"end": 2381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2349,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2481,
											"end": 2488,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2500,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2505,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2508,
											"end": 2587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2653,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2729,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2820,
											"end": 2825,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2802,
											"end": 2826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2800,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2827,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2782,
											"end": 2845,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2843,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2845,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2782,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2928,
											"end": 2948,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2919,
											"end": 2948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2919,
											"end": 2948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2984,
											"end": 2989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2957,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2957,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3331,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3002,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3112,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3107,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3089,
											"end": 3096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3113,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3197,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3078,
											"end": 3197,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3116,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3116,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3195,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3116,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3197,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3078,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3306,
											"end": 3313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3304,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3261,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3314,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3261,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3314,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3331,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3397,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3337,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3379,
											"end": 3391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3379,
											"end": 3391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3397,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3545,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3403,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3504,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3513,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3531,
											"end": 3536,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3513,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3537,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3513,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3504,
											"end": 3538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3538,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3504,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3486,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3539,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3486,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3665,
											"end": 3670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3634,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3671,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3634,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3824,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3683,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3781,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3830,
											"end": 3991,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3830,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3978,
											"end": 3983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3932,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3984,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3932,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3830,
											"end": 3991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3830,
											"end": 3991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3830,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4249,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3997,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4156,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4239,
											"end": 4240,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4237,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4156,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4156,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4156,
											"end": 4242,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4156,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4349,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4255,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4449,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4355,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4437,
											"end": 4442,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4423,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4443,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4423,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4449,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4555,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4455,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4494,
											"end": 4501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4543,
											"end": 4548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4523,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4523,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4512,
											"end": 4549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4512,
											"end": 4549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4561,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4686,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4704,
											"end": 4709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4686,
											"end": 4710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4686,
											"end": 4710,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4686,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4666,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4711,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4666,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4712,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4803,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4724,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4763,
											"end": 4770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4966,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4809,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4914,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4952,
											"end": 4957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4934,
											"end": 4958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4914,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4914,
											"end": 4959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4914,
											"end": 4959,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4914,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4902,
											"end": 4960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4966,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4966,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5369,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4972,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5127,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5198,
											"end": 5201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5195,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5127,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5202,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5127,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5222,
											"end": 5225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5311,
											"end": 5314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5240,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5315,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5240,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5340,
											"end": 5342,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5335,
											"end": 5338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5369,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5369,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4972,
											"end": 5369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5493,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5375,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5480,
											"end": 5485,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5462,
											"end": 5486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5457,
											"end": 5460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5721,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5499,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5632,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5711,
											"end": 5712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5693,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5643,
											"end": 5714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5714,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5643,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5721,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5870,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5727,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5822,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5858,
											"end": 5863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5831,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5864,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5831,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5870,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 6227,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5876,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5946,
											"end": 5952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 5997,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 5992,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5974,
											"end": 5981,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5970,
											"end": 5993,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 5998,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 6082,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5963,
											"end": 6082,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6001,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 6001,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6080,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6001,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 6082,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5963,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6122,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6193,
											"end": 6199,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6191,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6146,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6146,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6146,
											"end": 6210,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6146,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6092,
											"end": 6220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 6227,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 6227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 6227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 6227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 6227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6402,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6233,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6346,
											"end": 6349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6391,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6402,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6408,
											"end": 6628,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6408,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6548,
											"end": 6582,
											"name": "PUSH",
											"source": 5,
											"value": "596F7520617265206E6F7420746865206F776E6572206F662074686973204E46"
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6583,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "PUSH",
											"source": 5,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6612,
											"end": 6614,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 6610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6593,
											"end": 6621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6408,
											"end": 6628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6408,
											"end": 6628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6776,
											"end": 6779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 6856,
											"end": 6859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6797,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6797,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6797,
											"end": 6864,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6797,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 6864,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 6864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6962,
											"end": 6965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6873,
											"end": 6966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6966,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6873,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 6993,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6986,
											"end": 6989,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6975,
											"end": 6994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6975,
											"end": 6994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 7000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 7000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7212,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7199,
											"end": 7208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7259,
											"end": 7268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7249,
											"end": 7269,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7413,
											"end": 7417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 7287,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7418,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7287,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7279,
											"end": 7418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7431,
											"end": 7599,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 7431,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7591,
											"name": "PUSH",
											"source": 5,
											"value": "4E465420616C72656164792073746F7265640000000000000000000000000000"
										},
										{
											"begin": 7567,
											"end": 7568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7559,
											"end": 7565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7555,
											"end": 7569,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7548,
											"end": 7592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7431,
											"end": 7599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7431,
											"end": 7599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7605,
											"end": 7971,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 7605,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7832,
											"end": 7834,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 7827,
											"end": 7830,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7768,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7768,
											"end": 7835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7768,
											"end": 7835,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7768,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7761,
											"end": 7835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7761,
											"end": 7835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7844,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 7933,
											"end": 7936,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7844,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 7844,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7844,
											"end": 7937,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 7844,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7953,
											"end": 7965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 7965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 7965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7605,
											"end": 7971,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7605,
											"end": 7971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7605,
											"end": 7971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7605,
											"end": 7971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 8396,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7977,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8143,
											"end": 8147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8170,
											"end": 8179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8158,
											"end": 8184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8158,
											"end": 8184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8230,
											"end": 8239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8240,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8194,
											"end": 8241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8384,
											"end": 8388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 8258,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8389,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8258,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8250,
											"end": 8389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8250,
											"end": 8389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 8396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 8396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 8396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 8396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8844,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8402,
											"end": 8844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8551,
											"end": 8555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8591,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8578,
											"end": 8587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 8670,
											"end": 8671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8668,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8655,
											"end": 8672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 8602,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8602,
											"end": 8673,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 8602,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8683,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8751,
											"end": 8753,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8740,
											"end": 8749,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8736,
											"end": 8754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8727,
											"end": 8733,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8683,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 8683,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8683,
											"end": 8755,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8683,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8765,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8833,
											"end": 8835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8822,
											"end": 8831,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 8815,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8765,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 8765,
											"end": 8837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8765,
											"end": 8837,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 8765,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8844,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8844,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8850,
											"end": 9075,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 8850,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9024,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8986,
											"end": 8987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 8984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8974,
											"end": 8988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8967,
											"end": 9025,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9059,
											"end": 9067,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9054,
											"end": 9056,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8850,
											"end": 9075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8850,
											"end": 9075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9447,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 9081,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9223,
											"end": 9226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9244,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9308,
											"end": 9310,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 9303,
											"end": 9306,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9244,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 9244,
											"end": 9311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9244,
											"end": 9311,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9244,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9237,
											"end": 9311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9237,
											"end": 9311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9409,
											"end": 9412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 9320,
											"end": 9413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9320,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9320,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9438,
											"end": 9440,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9433,
											"end": 9436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9453,
											"end": 9872,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 9453,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9623,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9646,
											"end": 9655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9700,
											"end": 9704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9696,
											"end": 9716,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9677,
											"end": 9694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9670,
											"end": 9717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9734,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9860,
											"end": 9864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9734,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 9734,
											"end": 9865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9734,
											"end": 9865,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9734,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9726,
											"end": 9865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9726,
											"end": 9865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9453,
											"end": 9872,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9453,
											"end": 9872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9453,
											"end": 9872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9453,
											"end": 9872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9878,
											"end": 10060,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 9878,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10014,
											"end": 10015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10012,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10002,
											"end": 10016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9995,
											"end": 10053,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9878,
											"end": 10060,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9878,
											"end": 10060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10432,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 10066,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 10293,
											"end": 10295,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10288,
											"end": 10291,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 10229,
											"end": 10296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10296,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 10229,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10222,
											"end": 10296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10222,
											"end": 10296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 10394,
											"end": 10397,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 10305,
											"end": 10398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10305,
											"end": 10398,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 10305,
											"end": 10398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10423,
											"end": 10425,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10418,
											"end": 10421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10407,
											"end": 10426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10407,
											"end": 10426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10857,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 10438,
											"end": 10857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10644,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10631,
											"end": 10640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10619,
											"end": 10645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10619,
											"end": 10645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10691,
											"end": 10700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10685,
											"end": 10689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10677,
											"end": 10678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10666,
											"end": 10675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10662,
											"end": 10679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10702,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10845,
											"end": 10849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 10719,
											"end": 10850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10850,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10719,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10711,
											"end": 10850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10711,
											"end": 10850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10857,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10857,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10438,
											"end": 10857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"trustless cross-chain/trading pair formation/NFTstore.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"gameItemContract()": "f9be04ca",
							"getStoredStatus(uint256)": "c9ff64ec",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"storeNFT(uint256)": "ceeddea4",
							"storedNFTs(bytes32)": "22341741",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gameItemContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"gameItemContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getStoredStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"storeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"storedNFTs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trustless cross-chain/trading pair formation/NFTstore.sol\":\"NFTStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"trustless cross-chain/trading pair formation/NFTstore.sol\":{\"keccak256\":\"0x6e7bc675cfb64e2c8fc1c66ff80951dacfd8067e1e980107857f78c2d519a7d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690c312bc1e0c01a938b9f68a5d13cf10084fef2979e50c057ba91d808b53bba\",\"dweb:/ipfs/QmYrYtgv6Z2GfSR3DEtznH17Lif2deYuY6WasSQW1YcXV9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "trustless cross-chain/trading pair formation/NFTstore.sol:NFTStorage",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 271,
								"contract": "trustless cross-chain/trading pair formation/NFTstore.sol:NFTStorage",
								"label": "gameItemContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)228"
							},
							{
								"astId": 275,
								"contract": "trustless cross-chain/trading pair formation/NFTstore.sol:NFTStorage",
								"label": "storedNFTs",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC721)228": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							250
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 251,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 250,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								250
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							262
						],
						"IERC721": [
							228
						]
					},
					"id": 229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 263,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 262,
										"src": "271:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228,
								262
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 127,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 136,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 145,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 228,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 228,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1844:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1866:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1911:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:1"
									},
									"scope": 228,
									"src": "1809:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2679:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2701:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2721:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:1"
									},
									"scope": 228,
									"src": "2644:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3526:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3568:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:1"
									},
									"scope": 228,
									"src": "3495:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4079:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4091:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:1"
									},
									"scope": 228,
									"src": "4062:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4464:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4482:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:1"
									},
									"scope": 228,
									"src": "4437:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4678:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4718:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:1"
									},
									"scope": 228,
									"src": "4657:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4911:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4926:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4967:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:1"
									},
									"scope": 228,
									"src": "4885:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "250:4725:1",
							"usedErrors": [],
							"usedEvents": [
								127,
								136,
								145
							]
						}
					],
					"src": "108:4868:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 231,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 236,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 235,
												"id": 238,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 250,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 245,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 244,
												"id": 247,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 250,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 251,
							"src": "608:235:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							262
						]
					},
					"id": 263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 262,
							"linearizedBaseContracts": [
								262
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 255,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 262,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 263,
							"src": "405:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"trustless cross-chain/trading pair formation/NFTstore.sol": {
				"ast": {
					"absolutePath": "trustless cross-chain/trading pair formation/NFTstore.sol",
					"exportedSymbols": {
						"Context": [
							250
						],
						"IERC165": [
							262
						],
						"IERC721": [
							228
						],
						"NFTStorage": [
							377
						],
						"Ownable": [
							112
						]
					},
					"id": 378,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 378,
							"sourceUnit": 229,
							"src": "57:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 378,
							"sourceUnit": 113,
							"src": "116:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 267,
										"name": "Ownable",
										"nameLocations": [
											"193:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "193:7:4"
									},
									"id": 268,
									"nodeType": "InheritanceSpecifier",
									"src": "193:7:4"
								}
							],
							"canonicalName": "NFTStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 377,
							"linearizedBaseContracts": [
								377,
								112,
								250
							],
							"name": "NFTStorage",
							"nameLocation": "179:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f9be04ca",
									"id": 271,
									"mutability": "mutable",
									"name": "gameItemContract",
									"nameLocation": "222:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 377,
									"src": "207:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$228",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 270,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 269,
											"name": "IERC721",
											"nameLocations": [
												"207:7:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 228,
											"src": "207:7:4"
										},
										"referencedDeclaration": 228,
										"src": "207:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$228",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "22341741",
									"id": 275,
									"mutability": "mutable",
									"name": "storedNFTs",
									"nameLocation": "276:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 377,
									"src": "244:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 274,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 272,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "252:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "244:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 273,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "263:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cd7d8045490761f6468db55184c41c74ab6696514d5c6b630287bbd2f4e485c1",
									"id": 281,
									"name": "NFTStored",
									"nameLocation": "299:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "309:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "348:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "332:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:48:4"
									},
									"src": "293:64:4"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "402:62:4",
										"statements": [
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 286,
														"name": "gameItemContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "412:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$228",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 288,
																"name": "_gameItemContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "439:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 287,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "431:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$228_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "431:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$228",
															"typeString": "contract IERC721"
														}
													},
													"src": "412:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$228",
														"typeString": "contract IERC721"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "412:45:4"
											}
										]
									},
									"id": 293,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_gameItemContract",
												"nameLocation": "383:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "375:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:27:4"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "402:0:4"
									},
									"scope": 377,
									"src": "363:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "514:411:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "557:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 299,
																		"name": "gameItemContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "532:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$228",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "549:7:4",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 161,
																	"src": "532:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "532:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 303,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "569:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "573:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "569:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "532:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e4654",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "581:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																"typeString": "literal_string \"You are not the owner of this NFT\""
															},
															"value": "You are not the owner of this NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																"typeString": "literal_string \"You are not the owner of this NFT\""
															}
														],
														"id": 298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "524:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "524:93:4"
											},
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "storageId",
														"nameLocation": "635:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "627:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 309,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "627:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 319,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 314,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "674:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "678:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "674:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 316,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "686:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 312,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "657:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "661:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "657:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "657:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 311,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "647:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "647:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "627:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "713:22:4",
															"subExpression": {
																"baseExpression": {
																	"id": 321,
																	"name": "storedNFTs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "714:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 323,
																"indexExpression": {
																	"id": 322,
																	"name": "storageId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "725:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "714:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e465420616c72656164792073746f726564",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "737:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3",
																"typeString": "literal_string \"NFT already stored\""
															},
															"value": "NFT already stored"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9897e9b265d2b6a3bf8109386277b412002c238ae45d823fe99d933219d715d3",
																"typeString": "literal_string \"NFT already stored\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "705:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "705:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "705:53:4"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 328,
															"name": "storedNFTs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "769:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 330,
														"indexExpression": {
															"id": 329,
															"name": "storageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "780:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "769:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "793:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "769:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "769:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "837:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "841:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "837:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 341,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "857:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStorage_$377",
																		"typeString": "contract NFTStorage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStorage_$377",
																		"typeString": "contract NFTStorage"
																	}
																],
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "849:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 339,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "849:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "864:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 334,
															"name": "gameItemContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "807:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$228",
																"typeString": "contract IERC721"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "824:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 193,
														"src": "807:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "807:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "807:65:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 347,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "898:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "902:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "898:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "910:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "NFTStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "888:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "888:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "EmitStatement",
												"src": "883:35:4"
											}
										]
									},
									"functionSelector": "ceeddea4",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeNFT",
									"nameLocation": "479:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "496:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "488:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:17:4"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:0:4"
									},
									"scope": 377,
									"src": "470:455:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1002:123:4",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "storageId",
														"nameLocation": "1020:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "1012:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 360,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1012:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 365,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1059:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1063:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1059:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 367,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "1071:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 363,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1042:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1046:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1042:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1042:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 362,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1032:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1032:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1012:68:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 371,
														"name": "storedNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "1097:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 373,
													"indexExpression": {
														"id": 372,
														"name": "storageId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1108:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1097:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 359,
												"id": 374,
												"nodeType": "Return",
												"src": "1090:28:4"
											}
										]
									},
									"functionSelector": "c9ff64ec",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStoredStatus",
									"nameLocation": "940:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "964:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "956:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:17:4"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "996:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "996:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:6:4"
									},
									"scope": 377,
									"src": "931:194:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 378,
							"src": "170:957:4",
							"usedErrors": [],
							"usedEvents": [
								13,
								281
							]
						}
					],
					"src": "32:1095:4"
				},
				"id": 4
			}
		}
	}
}