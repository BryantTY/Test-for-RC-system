{
	"id": "4f4f0713b21403a9ccf8d770ae7971d9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"trustless cross-chain/trading pair formation/NFTburn.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract StakingContract is Ownable {\n    IERC721 public gameItemContract;\n    address public blackholeAddress;\n    uint256 public deltaK;\n    uint256 public deltaB;\n    uint256 public deltaD;\n\n    struct StakeInfo {\n        address owner;\n        uint256 tokenId;\n        uint256 lockTime;\n        uint256 deadline;\n    }\n\n    mapping(bytes32 => StakeInfo) public stakes;\n\n    event StakeLocked(bytes32 stakeId, address owner, uint256 tokenId, uint256 deadline);\n    event Burned(uint256 oldTokenId);\n\n    constructor(\n        address _gameItemContract,\n        address _blackholeAddress,\n        uint256 _deltaK,\n        uint256 _deltaB,\n        uint256 _deltaD\n    ) {\n        gameItemContract = IERC721(_gameItemContract);\n        blackholeAddress = _blackholeAddress;\n        deltaK = _deltaK;\n        deltaB = _deltaB;\n        deltaD = _deltaD;\n    }\n\n    function lock(uint256 tokenId) external {\n        require(gameItemContract.ownerOf(tokenId) == msg.sender, \"You are not the owner of this NFT\");\n\n        bytes32 stakeId = keccak256(abi.encodePacked(tokenId, msg.sender, block.timestamp));\n        uint256 lockTime = block.timestamp;\n        uint256 deadline = lockTime + deltaK + deltaB + deltaD;\n\n        stakes[stakeId] = StakeInfo(msg.sender, tokenId, lockTime, deadline);\n\n        gameItemContract.transferFrom(msg.sender, address(this), tokenId);\n\n        emit StakeLocked(stakeId, msg.sender, tokenId, deadline);\n    }\n\n    function burn(bytes32 stakeId) external onlyOwner {\n        StakeInfo storage stake = stakes[stakeId];\n        require(stake.deadline <= block.timestamp, \"Deadline not reached\");\n        require(stake.owner != address(0), \"Invalid stake\");\n\n        gameItemContract.transferFrom(address(this), blackholeAddress, stake.tokenId);\n\n        delete stakes[stakeId];\n\n        emit Burned(stake.tokenId);\n    }\n\n    function getStakeInfo(bytes32 stakeId) external view returns (StakeInfo memory) {\n        return stakes[stakeId];\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"trustless cross-chain/trading pair formation/NFTburn.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gameItemContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_blackholeAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_deltaK",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deltaB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deltaD",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldTokenId",
									"type": "uint256"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "stakeId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "blackholeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "stakeId",
									"type": "bytes32"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deltaB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deltaD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deltaK",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameItemContract",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "stakeId",
									"type": "bytes32"
								}
							],
							"name": "getStakeInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct StakingContract.StakeInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "lock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":170:2142  contract StakingContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":677:1026  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":877:894  _gameItemContract */\n  dup5\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":850:866  gameItemContract */\n  0x01\n  0x00\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":850:895  gameItemContract = IERC721(_gameItemContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":924:941  _blackholeAddress */\n  dup4\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":905:921  blackholeAddress */\n  0x02\n  0x00\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":905:941  blackholeAddress = _blackholeAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":960:967  _deltaK */\n  dup3\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":951:957  deltaK */\n  0x03\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":951:967  deltaK = _deltaK */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":986:993  _deltaB */\n  dup2\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":977:983  deltaB */\n  0x04\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":977:993  deltaB = _deltaB */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1012:1019  _deltaD */\n  dup1\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1003:1009  deltaD */\n  0x05\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1003:1019  deltaD = _deltaD */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":677:1026  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":170:2142  contract StakingContract is Ownable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_22:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_23:\n    /* \"#utility.yul\":1001:1025   */\n  tag_39\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_40:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_24:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_42\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_23\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2182   */\ntag_3:\n    /* \"#utility.yul\":1311:1317   */\n  0x00\n    /* \"#utility.yul\":1319:1325   */\n  dup1\n    /* \"#utility.yul\":1327:1333   */\n  0x00\n    /* \"#utility.yul\":1335:1341   */\n  dup1\n    /* \"#utility.yul\":1343:1349   */\n  0x00\n    /* \"#utility.yul\":1392:1395   */\n  0xa0\n    /* \"#utility.yul\":1380:1389   */\n  dup7\n    /* \"#utility.yul\":1371:1378   */\n  dup9\n    /* \"#utility.yul\":1367:1390   */\n  sub\n    /* \"#utility.yul\":1363:1396   */\n  slt\n    /* \"#utility.yul\":1360:1480   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1399:1478   */\n  tag_45\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1360:1480   */\ntag_44:\n    /* \"#utility.yul\":1519:1520   */\n  0x00\n    /* \"#utility.yul\":1544:1608   */\n  tag_46\n    /* \"#utility.yul\":1600:1607   */\n  dup9\n    /* \"#utility.yul\":1591:1597   */\n  dup3\n    /* \"#utility.yul\":1580:1589   */\n  dup10\n    /* \"#utility.yul\":1576:1598   */\n  add\n    /* \"#utility.yul\":1544:1608   */\n  tag_21\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1534:1608   */\n  swap6\n  pop\n    /* \"#utility.yul\":1490:1618   */\n  pop\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1683:1747   */\n  tag_47\n    /* \"#utility.yul\":1739:1746   */\n  dup9\n    /* \"#utility.yul\":1730:1736   */\n  dup3\n    /* \"#utility.yul\":1719:1728   */\n  dup10\n    /* \"#utility.yul\":1715:1737   */\n  add\n    /* \"#utility.yul\":1683:1747   */\n  tag_21\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1673:1747   */\n  swap5\n  pop\n    /* \"#utility.yul\":1628:1757   */\n  pop\n    /* \"#utility.yul\":1796:1798   */\n  0x40\n    /* \"#utility.yul\":1822:1886   */\n  tag_48\n    /* \"#utility.yul\":1878:1885   */\n  dup9\n    /* \"#utility.yul\":1869:1875   */\n  dup3\n    /* \"#utility.yul\":1858:1867   */\n  dup10\n    /* \"#utility.yul\":1854:1876   */\n  add\n    /* \"#utility.yul\":1822:1886   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1812:1886   */\n  swap4\n  pop\n    /* \"#utility.yul\":1767:1896   */\n  pop\n    /* \"#utility.yul\":1935:1937   */\n  0x60\n    /* \"#utility.yul\":1961:2025   */\n  tag_49\n    /* \"#utility.yul\":2017:2024   */\n  dup9\n    /* \"#utility.yul\":2008:2014   */\n  dup3\n    /* \"#utility.yul\":1997:2006   */\n  dup10\n    /* \"#utility.yul\":1993:2015   */\n  add\n    /* \"#utility.yul\":1961:2025   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1951:2025   */\n  swap3\n  pop\n    /* \"#utility.yul\":1906:2035   */\n  pop\n    /* \"#utility.yul\":2074:2077   */\n  0x80\n    /* \"#utility.yul\":2101:2165   */\n  tag_50\n    /* \"#utility.yul\":2157:2164   */\n  dup9\n    /* \"#utility.yul\":2148:2154   */\n  dup3\n    /* \"#utility.yul\":2137:2146   */\n  dup10\n    /* \"#utility.yul\":2133:2155   */\n  add\n    /* \"#utility.yul\":2101:2165   */\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2091:2165   */\n  swap2\n  pop\n    /* \"#utility.yul\":2045:2175   */\n  pop\n    /* \"#utility.yul\":1205:2182   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":170:2142  contract StakingContract is Ownable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":170:2142  contract StakingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8fee6407\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd467064\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xea768123\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf9be04ca\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x08a1eee1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x568b962a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7d515a10\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7e8d094c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x83a811bf\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1612:2015  function burn(bytes32 stakeId) external onlyOwner {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":286:307  uint256 public deltaK */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":249:280  address public blackholeAddress */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2021:2140  function getStakeInfo(bytes32 stakeId) external view returns (StakeInfo memory) {... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":340:361  uint256 public deltaD */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":498:541  mapping(bytes32 => StakeInfo) public stakes */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1032:1606  function lock(uint256 tokenId) external {... */\n    tag_11:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":313:334  uint256 public deltaB */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":212:243  IERC721 public gameItemContract */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1612:2015  function burn(bytes32 stakeId) external onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1672:1695  StakeInfo storage stake */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1698:1704  stakes */\n      0x06\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1698:1713  stakes[stakeId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1705:1712  stakeId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1698:1713  stakes[stakeId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1672:1713  StakeInfo storage stake = stakes[stakeId] */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1749:1764  block.timestamp */\n      timestamp\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1731:1736  stake */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1731:1745  stake.deadline */\n      0x03\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1731:1764  stake.deadline <= block.timestamp */\n      gt\n      iszero\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1723:1789  require(stake.deadline <= block.timestamp, \"Deadline not reached\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1830:1831  0 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1807:1832  stake.owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1807:1812  stake */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1807:1818  stake.owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1807:1832  stake.owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1799:1850  require(stake.owner != address(0), \"Invalid stake\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1861:1877  gameItemContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1861:1890  gameItemContract.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1899:1903  this */\n      address\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1906:1922  blackholeAddress */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1924:1929  stake */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1924:1937  stake.tokenId */\n      0x01\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1861:1938  gameItemContract.transferFrom(address(this), blackholeAddress, stake.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1956:1962  stakes */\n      0x06\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1956:1971  stakes[stakeId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1963:1970  stakeId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1956:1971  stakes[stakeId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1949:1971  delete stakes[stakeId] */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1987:2008  Burned(stake.tokenId) */\n      0xd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1994:1999  stake */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1994:2007  stake.tokenId */\n      0x01\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1987:2008  Burned(stake.tokenId) */\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1662:2015  {... */\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1612:2015  function burn(bytes32 stakeId) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":286:307  uint256 public deltaK */\n    tag_21:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":249:280  address public blackholeAddress */\n    tag_27:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2021:2140  function getStakeInfo(bytes32 stakeId) external view returns (StakeInfo memory) {... */\n    tag_32:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2083:2099  StakeInfo memory */\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2118:2124  stakes */\n      0x06\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2118:2133  stakes[stakeId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2125:2132  stakeId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2118:2133  stakes[stakeId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2111:2133  return stakes[stakeId] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":2021:2140  function getStakeInfo(bytes32 stakeId) external view returns (StakeInfo memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":340:361  uint256 public deltaD */\n    tag_36:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":498:541  mapping(bytes32 => StakeInfo) public stakes */\n    tag_43:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1032:1606  function lock(uint256 tokenId) external {... */\n    tag_49:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1127:1137  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1090:1137  gameItemContract.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1090:1106  gameItemContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1090:1114  gameItemContract.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1115:1122  tokenId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1090:1123  gameItemContract.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1090:1137  gameItemContract.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1082:1175  require(gameItemContract.ownerOf(tokenId) == msg.sender, \"You are not the owner of this NFT\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1186:1201  bytes32 stakeId */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1231:1238  tokenId */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1240:1250  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1252:1267  block.timestamp */\n      timestamp\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1214:1268  abi.encodePacked(tokenId, msg.sender, block.timestamp) */\n      add(0x20, mload(0x40))\n      tag_95\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1204:1269  keccak256(abi.encodePacked(tokenId, msg.sender, block.timestamp)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1186:1269  bytes32 stakeId = keccak256(abi.encodePacked(tokenId, msg.sender, block.timestamp)) */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1279:1295  uint256 lockTime */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1298:1313  block.timestamp */\n      timestamp\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1279:1313  uint256 lockTime = block.timestamp */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1323:1339  uint256 deadline */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1371:1377  deltaD */\n      sload(0x05)\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1362:1368  deltaB */\n      sload(0x04)\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1353:1359  deltaK */\n      sload(0x03)\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1342:1350  lockTime */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1342:1359  lockTime + deltaK */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1342:1368  lockTime + deltaK + deltaB */\n      tag_99\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1342:1377  lockTime + deltaK + deltaB + deltaD */\n      tag_100\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1323:1377  uint256 deadline = lockTime + deltaK + deltaB + deltaD */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1406:1456  StakeInfo(msg.sender, tokenId, lockTime, deadline) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1416:1426  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1406:1456  StakeInfo(msg.sender, tokenId, lockTime, deadline) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1428:1435  tokenId */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1406:1456  StakeInfo(msg.sender, tokenId, lockTime, deadline) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1437:1445  lockTime */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1406:1456  StakeInfo(msg.sender, tokenId, lockTime, deadline) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1447:1455  deadline */\n      dup3\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1406:1456  StakeInfo(msg.sender, tokenId, lockTime, deadline) */\n      dup2\n      mstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1388:1394  stakes */\n      0x06\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1388:1403  stakes[stakeId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1395:1402  stakeId */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1388:1403  stakes[stakeId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1388:1456  stakes[stakeId] = StakeInfo(msg.sender, tokenId, lockTime, deadline) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1467:1483  gameItemContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1467:1496  gameItemContract.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1497:1507  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1517:1521  this */\n      address\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1524:1531  tokenId */\n      dup8\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1467:1532  gameItemContract.transferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_101:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1548:1599  StakeLocked(stakeId, msg.sender, tokenId, deadline) */\n      0xe42732012f91412364b2848d4c8c3d8dd5508e0a5a0f60d6e1de7843145ea5c0\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1560:1567  stakeId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1569:1579  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1581:1588  tokenId */\n      dup7\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1590:1598  deadline */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1548:1599  StakeLocked(stakeId, msg.sender, tokenId, deadline) */\n      mload(0x40)\n      tag_105\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1072:1606  {... */\n      pop\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":1032:1606  function lock(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":313:334  uint256 public deltaB */\n    tag_51:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/NFTburn.sol\":212:243  IERC721 public gameItemContract */\n    tag_58:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_83:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_124:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_126:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_127:\n        /* \"#utility.yul\":490:514   */\n      tag_172\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_126\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_173:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_128:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_175\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_127\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_18:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_178\n      tag_124\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":766:885   */\n    tag_177:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_179\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_128\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1102   */\n    tag_129:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1091:1096   */\n      dup2\n        /* \"#utility.yul\":1080:1096   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1108:1226   */\n    tag_130:\n        /* \"#utility.yul\":1195:1219   */\n      tag_182\n        /* \"#utility.yul\":1213:1218   */\n      dup2\n        /* \"#utility.yul\":1195:1219   */\n      tag_129\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1190:1193   */\n      dup3\n        /* \"#utility.yul\":1183:1220   */\n      mstore\n        /* \"#utility.yul\":1108:1226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1232:1454   */\n    tag_23:\n        /* \"#utility.yul\":1325:1329   */\n      0x00\n        /* \"#utility.yul\":1363:1365   */\n      0x20\n        /* \"#utility.yul\":1352:1361   */\n      dup3\n        /* \"#utility.yul\":1348:1366   */\n      add\n        /* \"#utility.yul\":1340:1366   */\n      swap1\n      pop\n        /* \"#utility.yul\":1376:1447   */\n      tag_184\n        /* \"#utility.yul\":1444:1445   */\n      0x00\n        /* \"#utility.yul\":1433:1442   */\n      dup4\n        /* \"#utility.yul\":1429:1446   */\n      add\n        /* \"#utility.yul\":1420:1426   */\n      dup5\n        /* \"#utility.yul\":1376:1447   */\n      tag_130\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1232:1454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1460:1586   */\n    tag_131:\n        /* \"#utility.yul\":1497:1504   */\n      0x00\n        /* \"#utility.yul\":1537:1579   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1530:1535   */\n      dup3\n        /* \"#utility.yul\":1526:1580   */\n      and\n        /* \"#utility.yul\":1515:1580   */\n      swap1\n      pop\n        /* \"#utility.yul\":1460:1586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1592:1688   */\n    tag_132:\n        /* \"#utility.yul\":1629:1636   */\n      0x00\n        /* \"#utility.yul\":1658:1682   */\n      tag_187\n        /* \"#utility.yul\":1676:1681   */\n      dup3\n        /* \"#utility.yul\":1658:1682   */\n      tag_131\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1647:1682   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1694:1812   */\n    tag_133:\n        /* \"#utility.yul\":1781:1805   */\n      tag_189\n        /* \"#utility.yul\":1799:1804   */\n      dup2\n        /* \"#utility.yul\":1781:1805   */\n      tag_132\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1769:1806   */\n      mstore\n        /* \"#utility.yul\":1694:1812   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1818:2040   */\n    tag_29:\n        /* \"#utility.yul\":1911:1915   */\n      0x00\n        /* \"#utility.yul\":1949:1951   */\n      0x20\n        /* \"#utility.yul\":1938:1947   */\n      dup3\n        /* \"#utility.yul\":1934:1952   */\n      add\n        /* \"#utility.yul\":1926:1952   */\n      swap1\n      pop\n        /* \"#utility.yul\":1962:2033   */\n      tag_191\n        /* \"#utility.yul\":2030:2031   */\n      0x00\n        /* \"#utility.yul\":2019:2028   */\n      dup4\n        /* \"#utility.yul\":2015:2032   */\n      add\n        /* \"#utility.yul\":2006:2012   */\n      dup5\n        /* \"#utility.yul\":1962:2033   */\n      tag_133\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1818:2040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2046:2154   */\n    tag_134:\n        /* \"#utility.yul\":2123:2147   */\n      tag_193\n        /* \"#utility.yul\":2141:2146   */\n      dup2\n        /* \"#utility.yul\":2123:2147   */\n      tag_132\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2118:2121   */\n      dup3\n        /* \"#utility.yul\":2111:2148   */\n      mstore\n        /* \"#utility.yul\":2046:2154   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2160:2268   */\n    tag_135:\n        /* \"#utility.yul\":2237:2261   */\n      tag_195\n        /* \"#utility.yul\":2255:2260   */\n      dup2\n        /* \"#utility.yul\":2237:2261   */\n      tag_129\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2232:2235   */\n      dup3\n        /* \"#utility.yul\":2225:2262   */\n      mstore\n        /* \"#utility.yul\":2160:2268   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2350:3219   */\n    tag_136:\n        /* \"#utility.yul\":2499:2503   */\n      0x80\n        /* \"#utility.yul\":2494:2497   */\n      dup3\n        /* \"#utility.yul\":2490:2504   */\n      add\n        /* \"#utility.yul\":2587:2591   */\n      0x00\n        /* \"#utility.yul\":2580:2585   */\n      dup3\n        /* \"#utility.yul\":2576:2592   */\n      add\n        /* \"#utility.yul\":2570:2593   */\n      mload\n        /* \"#utility.yul\":2606:2669   */\n      tag_197\n        /* \"#utility.yul\":2663:2667   */\n      0x00\n        /* \"#utility.yul\":2658:2661   */\n      dup6\n        /* \"#utility.yul\":2654:2668   */\n      add\n        /* \"#utility.yul\":2640:2652   */\n      dup3\n        /* \"#utility.yul\":2606:2669   */\n      tag_134\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2514:2679   */\n      pop\n        /* \"#utility.yul\":2764:2768   */\n      0x20\n        /* \"#utility.yul\":2757:2762   */\n      dup3\n        /* \"#utility.yul\":2753:2769   */\n      add\n        /* \"#utility.yul\":2747:2770   */\n      mload\n        /* \"#utility.yul\":2783:2846   */\n      tag_198\n        /* \"#utility.yul\":2840:2844   */\n      0x20\n        /* \"#utility.yul\":2835:2838   */\n      dup6\n        /* \"#utility.yul\":2831:2845   */\n      add\n        /* \"#utility.yul\":2817:2829   */\n      dup3\n        /* \"#utility.yul\":2783:2846   */\n      tag_135\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2689:2856   */\n      pop\n        /* \"#utility.yul\":2942:2946   */\n      0x40\n        /* \"#utility.yul\":2935:2940   */\n      dup3\n        /* \"#utility.yul\":2931:2947   */\n      add\n        /* \"#utility.yul\":2925:2948   */\n      mload\n        /* \"#utility.yul\":2961:3024   */\n      tag_199\n        /* \"#utility.yul\":3018:3022   */\n      0x40\n        /* \"#utility.yul\":3013:3016   */\n      dup6\n        /* \"#utility.yul\":3009:3023   */\n      add\n        /* \"#utility.yul\":2995:3007   */\n      dup3\n        /* \"#utility.yul\":2961:3024   */\n      tag_135\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2866:3034   */\n      pop\n        /* \"#utility.yul\":3120:3124   */\n      0x60\n        /* \"#utility.yul\":3113:3118   */\n      dup3\n        /* \"#utility.yul\":3109:3125   */\n      add\n        /* \"#utility.yul\":3103:3126   */\n      mload\n        /* \"#utility.yul\":3139:3202   */\n      tag_200\n        /* \"#utility.yul\":3196:3200   */\n      0x60\n        /* \"#utility.yul\":3191:3194   */\n      dup6\n        /* \"#utility.yul\":3187:3201   */\n      add\n        /* \"#utility.yul\":3173:3185   */\n      dup3\n        /* \"#utility.yul\":3139:3202   */\n      tag_135\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3044:3212   */\n      pop\n        /* \"#utility.yul\":2468:3219   */\n      pop\n        /* \"#utility.yul\":2350:3219   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3225:3552   */\n    tag_34:\n        /* \"#utility.yul\":3370:3374   */\n      0x00\n        /* \"#utility.yul\":3408:3411   */\n      0x80\n        /* \"#utility.yul\":3397:3406   */\n      dup3\n        /* \"#utility.yul\":3393:3412   */\n      add\n        /* \"#utility.yul\":3385:3412   */\n      swap1\n      pop\n        /* \"#utility.yul\":3422:3545   */\n      tag_202\n        /* \"#utility.yul\":3542:3543   */\n      0x00\n        /* \"#utility.yul\":3531:3540   */\n      dup4\n        /* \"#utility.yul\":3527:3544   */\n      add\n        /* \"#utility.yul\":3518:3524   */\n      dup5\n        /* \"#utility.yul\":3422:3545   */\n      tag_136\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3225:3552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3558:4111   */\n    tag_45:\n        /* \"#utility.yul\":3735:3739   */\n      0x00\n        /* \"#utility.yul\":3773:3776   */\n      0x80\n        /* \"#utility.yul\":3762:3771   */\n      dup3\n        /* \"#utility.yul\":3758:3777   */\n      add\n        /* \"#utility.yul\":3750:3777   */\n      swap1\n      pop\n        /* \"#utility.yul\":3787:3858   */\n      tag_204\n        /* \"#utility.yul\":3855:3856   */\n      0x00\n        /* \"#utility.yul\":3844:3853   */\n      dup4\n        /* \"#utility.yul\":3840:3857   */\n      add\n        /* \"#utility.yul\":3831:3837   */\n      dup8\n        /* \"#utility.yul\":3787:3858   */\n      tag_133\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3868:3940   */\n      tag_205\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"#utility.yul\":3925:3934   */\n      dup4\n        /* \"#utility.yul\":3921:3939   */\n      add\n        /* \"#utility.yul\":3912:3918   */\n      dup7\n        /* \"#utility.yul\":3868:3940   */\n      tag_130\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3950:4022   */\n      tag_206\n        /* \"#utility.yul\":4018:4020   */\n      0x40\n        /* \"#utility.yul\":4007:4016   */\n      dup4\n        /* \"#utility.yul\":4003:4021   */\n      add\n        /* \"#utility.yul\":3994:4000   */\n      dup6\n        /* \"#utility.yul\":3950:4022   */\n      tag_130\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4032:4104   */\n      tag_207\n        /* \"#utility.yul\":4100:4102   */\n      0x60\n        /* \"#utility.yul\":4089:4098   */\n      dup4\n        /* \"#utility.yul\":4085:4103   */\n      add\n        /* \"#utility.yul\":4076:4082   */\n      dup5\n        /* \"#utility.yul\":4032:4104   */\n      tag_130\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3558:4111   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4117:4239   */\n    tag_137:\n        /* \"#utility.yul\":4190:4214   */\n      tag_209\n        /* \"#utility.yul\":4208:4213   */\n      dup2\n        /* \"#utility.yul\":4190:4214   */\n      tag_129\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4183:4188   */\n      dup2\n        /* \"#utility.yul\":4180:4215   */\n      eq\n        /* \"#utility.yul\":4170:4233   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4229:4230   */\n      0x00\n        /* \"#utility.yul\":4226:4227   */\n      dup1\n        /* \"#utility.yul\":4219:4231   */\n      revert\n        /* \"#utility.yul\":4170:4233   */\n    tag_210:\n        /* \"#utility.yul\":4117:4239   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4245:4384   */\n    tag_138:\n        /* \"#utility.yul\":4291:4296   */\n      0x00\n        /* \"#utility.yul\":4329:4335   */\n      dup2\n        /* \"#utility.yul\":4316:4336   */\n      calldataload\n        /* \"#utility.yul\":4307:4336   */\n      swap1\n      pop\n        /* \"#utility.yul\":4345:4378   */\n      tag_212\n        /* \"#utility.yul\":4372:4377   */\n      dup2\n        /* \"#utility.yul\":4345:4378   */\n      tag_137\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4245:4384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4390:4719   */\n    tag_48:\n        /* \"#utility.yul\":4449:4455   */\n      0x00\n        /* \"#utility.yul\":4498:4500   */\n      0x20\n        /* \"#utility.yul\":4486:4495   */\n      dup3\n        /* \"#utility.yul\":4477:4484   */\n      dup5\n        /* \"#utility.yul\":4473:4496   */\n      sub\n        /* \"#utility.yul\":4469:4501   */\n      slt\n        /* \"#utility.yul\":4466:4585   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":4504:4583   */\n      tag_215\n      tag_124\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4466:4585   */\n    tag_214:\n        /* \"#utility.yul\":4624:4625   */\n      0x00\n        /* \"#utility.yul\":4649:4702   */\n      tag_216\n        /* \"#utility.yul\":4694:4701   */\n      dup5\n        /* \"#utility.yul\":4685:4691   */\n      dup3\n        /* \"#utility.yul\":4674:4683   */\n      dup6\n        /* \"#utility.yul\":4670:4692   */\n      add\n        /* \"#utility.yul\":4649:4702   */\n      tag_138\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4639:4702   */\n      swap2\n      pop\n        /* \"#utility.yul\":4595:4712   */\n      pop\n        /* \"#utility.yul\":4390:4719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4725:4847   */\n    tag_139:\n        /* \"#utility.yul\":4798:4822   */\n      tag_218\n        /* \"#utility.yul\":4816:4821   */\n      dup2\n        /* \"#utility.yul\":4798:4822   */\n      tag_132\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4791:4796   */\n      dup2\n        /* \"#utility.yul\":4788:4823   */\n      eq\n        /* \"#utility.yul\":4778:4841   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4834:4835   */\n      dup1\n        /* \"#utility.yul\":4827:4839   */\n      revert\n        /* \"#utility.yul\":4778:4841   */\n    tag_219:\n        /* \"#utility.yul\":4725:4847   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4992   */\n    tag_140:\n        /* \"#utility.yul\":4899:4904   */\n      0x00\n        /* \"#utility.yul\":4937:4943   */\n      dup2\n        /* \"#utility.yul\":4924:4944   */\n      calldataload\n        /* \"#utility.yul\":4915:4944   */\n      swap1\n      pop\n        /* \"#utility.yul\":4953:4986   */\n      tag_221\n        /* \"#utility.yul\":4980:4985   */\n      dup2\n        /* \"#utility.yul\":4953:4986   */\n      tag_139\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4853:4992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4998:5327   */\n    tag_55:\n        /* \"#utility.yul\":5057:5063   */\n      0x00\n        /* \"#utility.yul\":5106:5108   */\n      0x20\n        /* \"#utility.yul\":5094:5103   */\n      dup3\n        /* \"#utility.yul\":5085:5092   */\n      dup5\n        /* \"#utility.yul\":5081:5104   */\n      sub\n        /* \"#utility.yul\":5077:5109   */\n      slt\n        /* \"#utility.yul\":5074:5193   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":5112:5191   */\n      tag_224\n      tag_124\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5074:5193   */\n    tag_223:\n        /* \"#utility.yul\":5232:5233   */\n      0x00\n        /* \"#utility.yul\":5257:5310   */\n      tag_225\n        /* \"#utility.yul\":5302:5309   */\n      dup5\n        /* \"#utility.yul\":5293:5299   */\n      dup3\n        /* \"#utility.yul\":5282:5291   */\n      dup6\n        /* \"#utility.yul\":5278:5300   */\n      add\n        /* \"#utility.yul\":5257:5310   */\n      tag_140\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5247:5310   */\n      swap2\n      pop\n        /* \"#utility.yul\":5203:5320   */\n      pop\n        /* \"#utility.yul\":4998:5327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5333:5393   */\n    tag_141:\n        /* \"#utility.yul\":5361:5364   */\n      0x00\n        /* \"#utility.yul\":5382:5387   */\n      dup2\n        /* \"#utility.yul\":5375:5387   */\n      swap1\n      pop\n        /* \"#utility.yul\":5333:5393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5399:5541   */\n    tag_142:\n        /* \"#utility.yul\":5449:5458   */\n      0x00\n        /* \"#utility.yul\":5482:5535   */\n      tag_228\n        /* \"#utility.yul\":5500:5534   */\n      tag_229\n        /* \"#utility.yul\":5509:5533   */\n      tag_230\n        /* \"#utility.yul\":5527:5532   */\n      dup5\n        /* \"#utility.yul\":5509:5533   */\n      tag_131\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5500:5534   */\n      tag_141\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5482:5535   */\n      tag_131\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5469:5535   */\n      swap1\n      pop\n        /* \"#utility.yul\":5399:5541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5547:5673   */\n    tag_143:\n        /* \"#utility.yul\":5597:5606   */\n      0x00\n        /* \"#utility.yul\":5630:5667   */\n      tag_232\n        /* \"#utility.yul\":5661:5666   */\n      dup3\n        /* \"#utility.yul\":5630:5667   */\n      tag_142\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5617:5667   */\n      swap1\n      pop\n        /* \"#utility.yul\":5547:5673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5679:5820   */\n    tag_144:\n        /* \"#utility.yul\":5744:5753   */\n      0x00\n        /* \"#utility.yul\":5777:5814   */\n      tag_234\n        /* \"#utility.yul\":5808:5813   */\n      dup3\n        /* \"#utility.yul\":5777:5814   */\n      tag_143\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5764:5814   */\n      swap1\n      pop\n        /* \"#utility.yul\":5679:5820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5826:5987   */\n    tag_145:\n        /* \"#utility.yul\":5928:5980   */\n      tag_236\n        /* \"#utility.yul\":5974:5979   */\n      dup2\n        /* \"#utility.yul\":5928:5980   */\n      tag_144\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5923:5926   */\n      dup3\n        /* \"#utility.yul\":5916:5981   */\n      mstore\n        /* \"#utility.yul\":5826:5987   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6245   */\n    tag_60:\n        /* \"#utility.yul\":6101:6105   */\n      0x00\n        /* \"#utility.yul\":6139:6141   */\n      0x20\n        /* \"#utility.yul\":6128:6137   */\n      dup3\n        /* \"#utility.yul\":6124:6142   */\n      add\n        /* \"#utility.yul\":6116:6142   */\n      swap1\n      pop\n        /* \"#utility.yul\":6152:6238   */\n      tag_238\n        /* \"#utility.yul\":6235:6236   */\n      0x00\n        /* \"#utility.yul\":6224:6233   */\n      dup4\n        /* \"#utility.yul\":6220:6237   */\n      add\n        /* \"#utility.yul\":6211:6217   */\n      dup5\n        /* \"#utility.yul\":6152:6238   */\n      tag_145\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5993:6245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6251:6420   */\n    tag_146:\n        /* \"#utility.yul\":6335:6346   */\n      0x00\n        /* \"#utility.yul\":6369:6375   */\n      dup3\n        /* \"#utility.yul\":6364:6367   */\n      dup3\n        /* \"#utility.yul\":6357:6376   */\n      mstore\n        /* \"#utility.yul\":6409:6413   */\n      0x20\n        /* \"#utility.yul\":6404:6407   */\n      dup3\n        /* \"#utility.yul\":6400:6414   */\n      add\n        /* \"#utility.yul\":6385:6414   */\n      swap1\n      pop\n        /* \"#utility.yul\":6251:6420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6426:6596   */\n    tag_147:\n        /* \"#utility.yul\":6566:6588   */\n      0x446561646c696e65206e6f742072656163686564000000000000000000000000\n        /* \"#utility.yul\":6562:6563   */\n      0x00\n        /* \"#utility.yul\":6554:6560   */\n      dup3\n        /* \"#utility.yul\":6550:6564   */\n      add\n        /* \"#utility.yul\":6543:6589   */\n      mstore\n        /* \"#utility.yul\":6426:6596   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6602:6968   */\n    tag_148:\n        /* \"#utility.yul\":6744:6747   */\n      0x00\n        /* \"#utility.yul\":6765:6832   */\n      tag_242\n        /* \"#utility.yul\":6829:6831   */\n      0x14\n        /* \"#utility.yul\":6824:6827   */\n      dup4\n        /* \"#utility.yul\":6765:6832   */\n      tag_146\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6758:6832   */\n      swap2\n      pop\n        /* \"#utility.yul\":6841:6934   */\n      tag_243\n        /* \"#utility.yul\":6930:6933   */\n      dup3\n        /* \"#utility.yul\":6841:6934   */\n      tag_147\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6959:6961   */\n      0x20\n        /* \"#utility.yul\":6954:6957   */\n      dup3\n        /* \"#utility.yul\":6950:6962   */\n      add\n        /* \"#utility.yul\":6943:6962   */\n      swap1\n      pop\n        /* \"#utility.yul\":6602:6968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6974:7393   */\n    tag_67:\n        /* \"#utility.yul\":7140:7144   */\n      0x00\n        /* \"#utility.yul\":7178:7180   */\n      0x20\n        /* \"#utility.yul\":7167:7176   */\n      dup3\n        /* \"#utility.yul\":7163:7181   */\n      add\n        /* \"#utility.yul\":7155:7181   */\n      swap1\n      pop\n        /* \"#utility.yul\":7227:7236   */\n      dup2\n        /* \"#utility.yul\":7221:7225   */\n      dup2\n        /* \"#utility.yul\":7217:7237   */\n      sub\n        /* \"#utility.yul\":7213:7214   */\n      0x00\n        /* \"#utility.yul\":7202:7211   */\n      dup4\n        /* \"#utility.yul\":7198:7215   */\n      add\n        /* \"#utility.yul\":7191:7238   */\n      mstore\n        /* \"#utility.yul\":7255:7386   */\n      tag_245\n        /* \"#utility.yul\":7381:7385   */\n      dup2\n        /* \"#utility.yul\":7255:7386   */\n      tag_148\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7247:7386   */\n      swap1\n      pop\n        /* \"#utility.yul\":6974:7393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7399:7562   */\n    tag_149:\n        /* \"#utility.yul\":7539:7554   */\n      0x496e76616c6964207374616b6500000000000000000000000000000000000000\n        /* \"#utility.yul\":7535:7536   */\n      0x00\n        /* \"#utility.yul\":7527:7533   */\n      dup3\n        /* \"#utility.yul\":7523:7537   */\n      add\n        /* \"#utility.yul\":7516:7555   */\n      mstore\n        /* \"#utility.yul\":7399:7562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7568:7934   */\n    tag_150:\n        /* \"#utility.yul\":7710:7713   */\n      0x00\n        /* \"#utility.yul\":7731:7798   */\n      tag_248\n        /* \"#utility.yul\":7795:7797   */\n      0x0d\n        /* \"#utility.yul\":7790:7793   */\n      dup4\n        /* \"#utility.yul\":7731:7798   */\n      tag_146\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7724:7798   */\n      swap2\n      pop\n        /* \"#utility.yul\":7807:7900   */\n      tag_249\n        /* \"#utility.yul\":7896:7899   */\n      dup3\n        /* \"#utility.yul\":7807:7900   */\n      tag_149\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7925:7927   */\n      0x20\n        /* \"#utility.yul\":7920:7923   */\n      dup3\n        /* \"#utility.yul\":7916:7928   */\n      add\n        /* \"#utility.yul\":7909:7928   */\n      swap1\n      pop\n        /* \"#utility.yul\":7568:7934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7940:8359   */\n    tag_70:\n        /* \"#utility.yul\":8106:8110   */\n      0x00\n        /* \"#utility.yul\":8144:8146   */\n      0x20\n        /* \"#utility.yul\":8133:8142   */\n      dup3\n        /* \"#utility.yul\":8129:8147   */\n      add\n        /* \"#utility.yul\":8121:8147   */\n      swap1\n      pop\n        /* \"#utility.yul\":8193:8202   */\n      dup2\n        /* \"#utility.yul\":8187:8191   */\n      dup2\n        /* \"#utility.yul\":8183:8203   */\n      sub\n        /* \"#utility.yul\":8179:8180   */\n      0x00\n        /* \"#utility.yul\":8168:8177   */\n      dup4\n        /* \"#utility.yul\":8164:8181   */\n      add\n        /* \"#utility.yul\":8157:8204   */\n      mstore\n        /* \"#utility.yul\":8221:8352   */\n      tag_251\n        /* \"#utility.yul\":8347:8351   */\n      dup2\n        /* \"#utility.yul\":8221:8352   */\n      tag_150\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8213:8352   */\n      swap1\n      pop\n        /* \"#utility.yul\":7940:8359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8365:8807   */\n    tag_72:\n        /* \"#utility.yul\":8514:8518   */\n      0x00\n        /* \"#utility.yul\":8552:8554   */\n      0x60\n        /* \"#utility.yul\":8541:8550   */\n      dup3\n        /* \"#utility.yul\":8537:8555   */\n      add\n        /* \"#utility.yul\":8529:8555   */\n      swap1\n      pop\n        /* \"#utility.yul\":8565:8636   */\n      tag_253\n        /* \"#utility.yul\":8633:8634   */\n      0x00\n        /* \"#utility.yul\":8622:8631   */\n      dup4\n        /* \"#utility.yul\":8618:8635   */\n      add\n        /* \"#utility.yul\":8609:8615   */\n      dup7\n        /* \"#utility.yul\":8565:8636   */\n      tag_133\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8646:8718   */\n      tag_254\n        /* \"#utility.yul\":8714:8716   */\n      0x20\n        /* \"#utility.yul\":8703:8712   */\n      dup4\n        /* \"#utility.yul\":8699:8717   */\n      add\n        /* \"#utility.yul\":8690:8696   */\n      dup6\n        /* \"#utility.yul\":8646:8718   */\n      tag_133\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8728:8800   */\n      tag_255\n        /* \"#utility.yul\":8796:8798   */\n      0x40\n        /* \"#utility.yul\":8785:8794   */\n      dup4\n        /* \"#utility.yul\":8781:8799   */\n      add\n        /* \"#utility.yul\":8772:8778   */\n      dup5\n        /* \"#utility.yul\":8728:8800   */\n      tag_130\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8365:8807   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8813:8956   */\n    tag_151:\n        /* \"#utility.yul\":8870:8875   */\n      0x00\n        /* \"#utility.yul\":8901:8907   */\n      dup2\n        /* \"#utility.yul\":8895:8908   */\n      mload\n        /* \"#utility.yul\":8886:8908   */\n      swap1\n      pop\n        /* \"#utility.yul\":8917:8950   */\n      tag_257\n        /* \"#utility.yul\":8944:8949   */\n      dup2\n        /* \"#utility.yul\":8917:8950   */\n      tag_139\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8813:8956   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8962:9313   */\n    tag_91:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9081:9083   */\n      0x20\n        /* \"#utility.yul\":9069:9078   */\n      dup3\n        /* \"#utility.yul\":9060:9067   */\n      dup5\n        /* \"#utility.yul\":9056:9079   */\n      sub\n        /* \"#utility.yul\":9052:9084   */\n      slt\n        /* \"#utility.yul\":9049:9168   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":9087:9166   */\n      tag_260\n      tag_124\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9049:9168   */\n    tag_259:\n        /* \"#utility.yul\":9207:9208   */\n      0x00\n        /* \"#utility.yul\":9232:9296   */\n      tag_261\n        /* \"#utility.yul\":9288:9295   */\n      dup5\n        /* \"#utility.yul\":9279:9285   */\n      dup3\n        /* \"#utility.yul\":9268:9277   */\n      dup6\n        /* \"#utility.yul\":9264:9286   */\n      add\n        /* \"#utility.yul\":9232:9296   */\n      tag_151\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9222:9296   */\n      swap2\n      pop\n        /* \"#utility.yul\":9178:9306   */\n      pop\n        /* \"#utility.yul\":8962:9313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9319:9539   */\n    tag_152:\n        /* \"#utility.yul\":9459:9493   */\n      0x596f7520617265206e6f7420746865206f776e6572206f662074686973204e46\n        /* \"#utility.yul\":9455:9456   */\n      0x00\n        /* \"#utility.yul\":9447:9453   */\n      dup3\n        /* \"#utility.yul\":9443:9457   */\n      add\n        /* \"#utility.yul\":9436:9494   */\n      mstore\n        /* \"#utility.yul\":9528:9531   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9523:9525   */\n      0x20\n        /* \"#utility.yul\":9515:9521   */\n      dup3\n        /* \"#utility.yul\":9511:9526   */\n      add\n        /* \"#utility.yul\":9504:9532   */\n      mstore\n        /* \"#utility.yul\":9319:9539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9545:9911   */\n    tag_153:\n        /* \"#utility.yul\":9687:9690   */\n      0x00\n        /* \"#utility.yul\":9708:9775   */\n      tag_264\n        /* \"#utility.yul\":9772:9774   */\n      0x21\n        /* \"#utility.yul\":9767:9770   */\n      dup4\n        /* \"#utility.yul\":9708:9775   */\n      tag_146\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9701:9775   */\n      swap2\n      pop\n        /* \"#utility.yul\":9784:9877   */\n      tag_265\n        /* \"#utility.yul\":9873:9876   */\n      dup3\n        /* \"#utility.yul\":9784:9877   */\n      tag_152\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9902:9904   */\n      0x40\n        /* \"#utility.yul\":9897:9900   */\n      dup3\n        /* \"#utility.yul\":9893:9905   */\n      add\n        /* \"#utility.yul\":9886:9905   */\n      swap1\n      pop\n        /* \"#utility.yul\":9545:9911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9917:10336   */\n    tag_94:\n        /* \"#utility.yul\":10083:10087   */\n      0x00\n        /* \"#utility.yul\":10121:10123   */\n      0x20\n        /* \"#utility.yul\":10110:10119   */\n      dup3\n        /* \"#utility.yul\":10106:10124   */\n      add\n        /* \"#utility.yul\":10098:10124   */\n      swap1\n      pop\n        /* \"#utility.yul\":10170:10179   */\n      dup2\n        /* \"#utility.yul\":10164:10168   */\n      dup2\n        /* \"#utility.yul\":10160:10180   */\n      sub\n        /* \"#utility.yul\":10156:10157   */\n      0x00\n        /* \"#utility.yul\":10145:10154   */\n      dup4\n        /* \"#utility.yul\":10141:10158   */\n      add\n        /* \"#utility.yul\":10134:10181   */\n      mstore\n        /* \"#utility.yul\":10198:10329   */\n      tag_267\n        /* \"#utility.yul\":10324:10328   */\n      dup2\n        /* \"#utility.yul\":10198:10329   */\n      tag_153\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10190:10329   */\n      swap1\n      pop\n        /* \"#utility.yul\":9917:10336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10342:10421   */\n    tag_154:\n        /* \"#utility.yul\":10381:10388   */\n      0x00\n        /* \"#utility.yul\":10410:10415   */\n      dup2\n        /* \"#utility.yul\":10399:10415   */\n      swap1\n      pop\n        /* \"#utility.yul\":10342:10421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10427:10584   */\n    tag_155:\n        /* \"#utility.yul\":10532:10577   */\n      tag_270\n        /* \"#utility.yul\":10552:10576   */\n      tag_271\n        /* \"#utility.yul\":10570:10575   */\n      dup3\n        /* \"#utility.yul\":10552:10576   */\n      tag_129\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10532:10577   */\n      tag_154\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10527:10530   */\n      dup3\n        /* \"#utility.yul\":10520:10578   */\n      mstore\n        /* \"#utility.yul\":10427:10584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10590:10684   */\n    tag_156:\n        /* \"#utility.yul\":10623:10631   */\n      0x00\n        /* \"#utility.yul\":10671:10676   */\n      dup2\n        /* \"#utility.yul\":10667:10669   */\n      0x60\n        /* \"#utility.yul\":10663:10677   */\n      shl\n        /* \"#utility.yul\":10642:10677   */\n      swap1\n      pop\n        /* \"#utility.yul\":10590:10684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10690:10784   */\n    tag_157:\n        /* \"#utility.yul\":10729:10736   */\n      0x00\n        /* \"#utility.yul\":10758:10778   */\n      tag_274\n        /* \"#utility.yul\":10772:10777   */\n      dup3\n        /* \"#utility.yul\":10758:10778   */\n      tag_156\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10747:10778   */\n      swap1\n      pop\n        /* \"#utility.yul\":10690:10784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10790:10890   */\n    tag_158:\n        /* \"#utility.yul\":10829:10836   */\n      0x00\n        /* \"#utility.yul\":10858:10884   */\n      tag_276\n        /* \"#utility.yul\":10878:10883   */\n      dup3\n        /* \"#utility.yul\":10858:10884   */\n      tag_157\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10847:10884   */\n      swap1\n      pop\n        /* \"#utility.yul\":10790:10890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10896:11053   */\n    tag_159:\n        /* \"#utility.yul\":11001:11046   */\n      tag_278\n        /* \"#utility.yul\":11021:11045   */\n      tag_279\n        /* \"#utility.yul\":11039:11044   */\n      dup3\n        /* \"#utility.yul\":11021:11045   */\n      tag_132\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11001:11046   */\n      tag_158\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10996:10999   */\n      dup3\n        /* \"#utility.yul\":10989:11047   */\n      mstore\n        /* \"#utility.yul\":10896:11053   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11059:11597   */\n    tag_96:\n        /* \"#utility.yul\":11227:11230   */\n      0x00\n        /* \"#utility.yul\":11242:11317   */\n      tag_281\n        /* \"#utility.yul\":11313:11316   */\n      dup3\n        /* \"#utility.yul\":11304:11310   */\n      dup7\n        /* \"#utility.yul\":11242:11317   */\n      tag_155\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11342:11344   */\n      0x20\n        /* \"#utility.yul\":11337:11340   */\n      dup3\n        /* \"#utility.yul\":11333:11345   */\n      add\n        /* \"#utility.yul\":11326:11345   */\n      swap2\n      pop\n        /* \"#utility.yul\":11355:11430   */\n      tag_282\n        /* \"#utility.yul\":11426:11429   */\n      dup3\n        /* \"#utility.yul\":11417:11423   */\n      dup6\n        /* \"#utility.yul\":11355:11430   */\n      tag_159\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11455:11457   */\n      0x14\n        /* \"#utility.yul\":11450:11453   */\n      dup3\n        /* \"#utility.yul\":11446:11458   */\n      add\n        /* \"#utility.yul\":11439:11458   */\n      swap2\n      pop\n        /* \"#utility.yul\":11468:11543   */\n      tag_283\n        /* \"#utility.yul\":11539:11542   */\n      dup3\n        /* \"#utility.yul\":11530:11536   */\n      dup5\n        /* \"#utility.yul\":11468:11543   */\n      tag_155\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11568:11570   */\n      0x20\n        /* \"#utility.yul\":11563:11566   */\n      dup3\n        /* \"#utility.yul\":11559:11571   */\n      add\n        /* \"#utility.yul\":11552:11571   */\n      swap2\n      pop\n        /* \"#utility.yul\":11588:11591   */\n      dup2\n        /* \"#utility.yul\":11581:11591   */\n      swap1\n      pop\n        /* \"#utility.yul\":11059:11597   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11603:11783   */\n    tag_160:\n        /* \"#utility.yul\":11651:11728   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11648:11649   */\n      0x00\n        /* \"#utility.yul\":11641:11729   */\n      mstore\n        /* \"#utility.yul\":11748:11752   */\n      0x11\n        /* \"#utility.yul\":11745:11746   */\n      0x04\n        /* \"#utility.yul\":11738:11753   */\n      mstore\n        /* \"#utility.yul\":11772:11776   */\n      0x24\n        /* \"#utility.yul\":11769:11770   */\n      0x00\n        /* \"#utility.yul\":11762:11777   */\n      revert\n        /* \"#utility.yul\":11789:11980   */\n    tag_98:\n        /* \"#utility.yul\":11829:11832   */\n      0x00\n        /* \"#utility.yul\":11848:11868   */\n      tag_286\n        /* \"#utility.yul\":11866:11867   */\n      dup3\n        /* \"#utility.yul\":11848:11868   */\n      tag_129\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11843:11868   */\n      swap2\n      pop\n        /* \"#utility.yul\":11882:11902   */\n      tag_287\n        /* \"#utility.yul\":11900:11901   */\n      dup4\n        /* \"#utility.yul\":11882:11902   */\n      tag_129\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11877:11902   */\n      swap3\n      pop\n        /* \"#utility.yul\":11925:11926   */\n      dup3\n        /* \"#utility.yul\":11922:11923   */\n      dup3\n        /* \"#utility.yul\":11918:11927   */\n      add\n        /* \"#utility.yul\":11911:11927   */\n      swap1\n      pop\n        /* \"#utility.yul\":11946:11949   */\n      dup1\n        /* \"#utility.yul\":11943:11944   */\n      dup3\n        /* \"#utility.yul\":11940:11950   */\n      gt\n        /* \"#utility.yul\":11937:11973   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":11953:11971   */\n      tag_289\n      tag_160\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":11937:11973   */\n    tag_288:\n        /* \"#utility.yul\":11789:11980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11986:12104   */\n    tag_161:\n        /* \"#utility.yul\":12073:12097   */\n      tag_291\n        /* \"#utility.yul\":12091:12096   */\n      dup2\n        /* \"#utility.yul\":12073:12097   */\n      tag_126\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":12068:12071   */\n      dup3\n        /* \"#utility.yul\":12061:12098   */\n      mstore\n        /* \"#utility.yul\":11986:12104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12110:12663   */\n    tag_106:\n        /* \"#utility.yul\":12287:12291   */\n      0x00\n        /* \"#utility.yul\":12325:12328   */\n      0x80\n        /* \"#utility.yul\":12314:12323   */\n      dup3\n        /* \"#utility.yul\":12310:12329   */\n      add\n        /* \"#utility.yul\":12302:12329   */\n      swap1\n      pop\n        /* \"#utility.yul\":12339:12410   */\n      tag_293\n        /* \"#utility.yul\":12407:12408   */\n      0x00\n        /* \"#utility.yul\":12396:12405   */\n      dup4\n        /* \"#utility.yul\":12392:12409   */\n      add\n        /* \"#utility.yul\":12383:12389   */\n      dup8\n        /* \"#utility.yul\":12339:12410   */\n      tag_161\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":12420:12492   */\n      tag_294\n        /* \"#utility.yul\":12488:12490   */\n      0x20\n        /* \"#utility.yul\":12477:12486   */\n      dup4\n        /* \"#utility.yul\":12473:12491   */\n      add\n        /* \"#utility.yul\":12464:12470   */\n      dup7\n        /* \"#utility.yul\":12420:12492   */\n      tag_133\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":12502:12574   */\n      tag_295\n        /* \"#utility.yul\":12570:12572   */\n      0x40\n        /* \"#utility.yul\":12559:12568   */\n      dup4\n        /* \"#utility.yul\":12555:12573   */\n      add\n        /* \"#utility.yul\":12546:12552   */\n      dup6\n        /* \"#utility.yul\":12502:12574   */\n      tag_130\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":12584:12656   */\n      tag_296\n        /* \"#utility.yul\":12652:12654   */\n      0x60\n        /* \"#utility.yul\":12641:12650   */\n      dup4\n        /* \"#utility.yul\":12637:12655   */\n      add\n        /* \"#utility.yul\":12628:12634   */\n      dup5\n        /* \"#utility.yul\":12584:12656   */\n      tag_130\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":12110:12663   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12669:12894   */\n    tag_162:\n        /* \"#utility.yul\":12809:12843   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12805:12806   */\n      0x00\n        /* \"#utility.yul\":12797:12803   */\n      dup3\n        /* \"#utility.yul\":12793:12807   */\n      add\n        /* \"#utility.yul\":12786:12844   */\n      mstore\n        /* \"#utility.yul\":12878:12886   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12873:12875   */\n      0x20\n        /* \"#utility.yul\":12865:12871   */\n      dup3\n        /* \"#utility.yul\":12861:12876   */\n      add\n        /* \"#utility.yul\":12854:12887   */\n      mstore\n        /* \"#utility.yul\":12669:12894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12900:13266   */\n    tag_163:\n        /* \"#utility.yul\":13042:13045   */\n      0x00\n        /* \"#utility.yul\":13063:13130   */\n      tag_299\n        /* \"#utility.yul\":13127:13129   */\n      0x26\n        /* \"#utility.yul\":13122:13125   */\n      dup4\n        /* \"#utility.yul\":13063:13130   */\n      tag_146\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":13056:13130   */\n      swap2\n      pop\n        /* \"#utility.yul\":13139:13232   */\n      tag_300\n        /* \"#utility.yul\":13228:13231   */\n      dup3\n        /* \"#utility.yul\":13139:13232   */\n      tag_162\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":13257:13259   */\n      0x40\n        /* \"#utility.yul\":13252:13255   */\n      dup3\n        /* \"#utility.yul\":13248:13260   */\n      add\n        /* \"#utility.yul\":13241:13260   */\n      swap1\n      pop\n        /* \"#utility.yul\":12900:13266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13272:13691   */\n    tag_112:\n        /* \"#utility.yul\":13438:13442   */\n      0x00\n        /* \"#utility.yul\":13476:13478   */\n      0x20\n        /* \"#utility.yul\":13465:13474   */\n      dup3\n        /* \"#utility.yul\":13461:13479   */\n      add\n        /* \"#utility.yul\":13453:13479   */\n      swap1\n      pop\n        /* \"#utility.yul\":13525:13534   */\n      dup2\n        /* \"#utility.yul\":13519:13523   */\n      dup2\n        /* \"#utility.yul\":13515:13535   */\n      sub\n        /* \"#utility.yul\":13511:13512   */\n      0x00\n        /* \"#utility.yul\":13500:13509   */\n      dup4\n        /* \"#utility.yul\":13496:13513   */\n      add\n        /* \"#utility.yul\":13489:13536   */\n      mstore\n        /* \"#utility.yul\":13553:13684   */\n      tag_302\n        /* \"#utility.yul\":13679:13683   */\n      dup2\n        /* \"#utility.yul\":13553:13684   */\n      tag_163\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":13545:13684   */\n      swap1\n      pop\n        /* \"#utility.yul\":13272:13691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13697:13879   */\n    tag_164:\n        /* \"#utility.yul\":13837:13871   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13833:13834   */\n      0x00\n        /* \"#utility.yul\":13825:13831   */\n      dup3\n        /* \"#utility.yul\":13821:13835   */\n      add\n        /* \"#utility.yul\":13814:13872   */\n      mstore\n        /* \"#utility.yul\":13697:13879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13885:14251   */\n    tag_165:\n        /* \"#utility.yul\":14027:14030   */\n      0x00\n        /* \"#utility.yul\":14048:14115   */\n      tag_305\n        /* \"#utility.yul\":14112:14114   */\n      0x20\n        /* \"#utility.yul\":14107:14110   */\n      dup4\n        /* \"#utility.yul\":14048:14115   */\n      tag_146\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":14041:14115   */\n      swap2\n      pop\n        /* \"#utility.yul\":14124:14217   */\n      tag_306\n        /* \"#utility.yul\":14213:14216   */\n      dup3\n        /* \"#utility.yul\":14124:14217   */\n      tag_164\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":14242:14244   */\n      0x20\n        /* \"#utility.yul\":14237:14240   */\n      dup3\n        /* \"#utility.yul\":14233:14245   */\n      add\n        /* \"#utility.yul\":14226:14245   */\n      swap1\n      pop\n        /* \"#utility.yul\":13885:14251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14257:14676   */\n    tag_120:\n        /* \"#utility.yul\":14423:14427   */\n      0x00\n        /* \"#utility.yul\":14461:14463   */\n      0x20\n        /* \"#utility.yul\":14450:14459   */\n      dup3\n        /* \"#utility.yul\":14446:14464   */\n      add\n        /* \"#utility.yul\":14438:14464   */\n      swap1\n      pop\n        /* \"#utility.yul\":14510:14519   */\n      dup2\n        /* \"#utility.yul\":14504:14508   */\n      dup2\n        /* \"#utility.yul\":14500:14520   */\n      sub\n        /* \"#utility.yul\":14496:14497   */\n      0x00\n        /* \"#utility.yul\":14485:14494   */\n      dup4\n        /* \"#utility.yul\":14481:14498   */\n      add\n        /* \"#utility.yul\":14474:14521   */\n      mstore\n        /* \"#utility.yul\":14538:14669   */\n      tag_308\n        /* \"#utility.yul\":14664:14668   */\n      dup2\n        /* \"#utility.yul\":14538:14669   */\n      tag_165\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":14530:14669   */\n      swap1\n      pop\n        /* \"#utility.yul\":14257:14676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ac5d46b1aad220b38f1f11e6c10abf2c26213ad0375e46ce96740952435a0b9864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_msgSender_240": {
									"entryPoint": 236,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 243,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2185:5",
										"nodeType": "YulBlock",
										"src": "0:2185:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "890:32:5",
													"nodeType": "YulBlock",
													"src": "890:32:5",
													"statements": [
														{
															"nativeSrc": "900:16:5",
															"nodeType": "YulAssignment",
															"src": "900:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:5",
																"nodeType": "YulIdentifier",
																"src": "911:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:5",
														"nodeType": "YulTypedName",
														"src": "872:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:5",
														"nodeType": "YulTypedName",
														"src": "882:7:5",
														"type": ""
													}
												],
												"src": "845:77:5"
											},
											{
												"body": {
													"nativeSrc": "971:79:5",
													"nodeType": "YulBlock",
													"src": "971:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:5",
																"nodeType": "YulBlock",
																"src": "1028:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:5"
																			},
																			"nativeSrc": "1030:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:5"
																		},
																		"nativeSrc": "1030:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:5"
																				},
																				"nativeSrc": "1001:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:5"
																		},
																		"nativeSrc": "991:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:5"
																},
																"nativeSrc": "984:43:5",
																"nodeType": "YulFunctionCall",
																"src": "984:43:5"
															},
															"nativeSrc": "981:63:5",
															"nodeType": "YulIf",
															"src": "981:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:5",
														"nodeType": "YulTypedName",
														"src": "964:5:5",
														"type": ""
													}
												],
												"src": "928:122:5"
											},
											{
												"body": {
													"nativeSrc": "1119:80:5",
													"nodeType": "YulBlock",
													"src": "1119:80:5",
													"statements": [
														{
															"nativeSrc": "1129:22:5",
															"nodeType": "YulAssignment",
															"src": "1129:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:5"
																},
																"nativeSrc": "1138:13:5",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:5"
																},
																"nativeSrc": "1160:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:5"
															},
															"nativeSrc": "1160:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:5",
														"nodeType": "YulTypedName",
														"src": "1097:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:5",
														"nodeType": "YulTypedName",
														"src": "1105:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:5",
														"nodeType": "YulTypedName",
														"src": "1113:5:5",
														"type": ""
													}
												],
												"src": "1056:143:5"
											},
											{
												"body": {
													"nativeSrc": "1350:832:5",
													"nodeType": "YulBlock",
													"src": "1350:832:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1397:83:5",
																"nodeType": "YulBlock",
																"src": "1397:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1399:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1399:77:5"
																			},
																			"nativeSrc": "1399:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1399:79:5"
																		},
																		"nativeSrc": "1399:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1399:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1380:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1367:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:5"
																		},
																		"nativeSrc": "1367:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1392:3:5",
																		"nodeType": "YulLiteral",
																		"src": "1392:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1363:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:5"
																},
																"nativeSrc": "1363:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1363:33:5"
															},
															"nativeSrc": "1360:120:5",
															"nodeType": "YulIf",
															"src": "1360:120:5"
														},
														{
															"nativeSrc": "1490:128:5",
															"nodeType": "YulBlock",
															"src": "1490:128:5",
															"statements": [
																{
																	"nativeSrc": "1505:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1505:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1519:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1509:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1509:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1534:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1534:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1580:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1591:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1591:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1576:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:5"
																				},
																				"nativeSrc": "1576:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1576:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1600:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1544:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1544:31:5"
																		},
																		"nativeSrc": "1544:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1534:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1534:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1628:129:5",
															"nodeType": "YulBlock",
															"src": "1628:129:5",
															"statements": [
																{
																	"nativeSrc": "1643:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1643:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1657:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1647:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1647:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1673:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1673:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1719:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1719:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1730:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1730:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1715:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1715:3:5"
																				},
																				"nativeSrc": "1715:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1715:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1739:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1739:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1683:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1683:31:5"
																		},
																		"nativeSrc": "1683:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1673:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1673:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1767:129:5",
															"nodeType": "YulBlock",
															"src": "1767:129:5",
															"statements": [
																{
																	"nativeSrc": "1782:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1782:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1796:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1786:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1786:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1812:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1812:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1858:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1858:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1869:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1854:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:5"
																				},
																				"nativeSrc": "1854:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1854:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1878:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1878:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1822:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1822:31:5"
																		},
																		"nativeSrc": "1822:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1812:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1812:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1906:129:5",
															"nodeType": "YulBlock",
															"src": "1906:129:5",
															"statements": [
																{
																	"nativeSrc": "1921:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1921:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1935:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1935:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1925:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1925:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1951:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1951:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1997:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1997:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2008:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2008:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1993:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1993:3:5"
																				},
																				"nativeSrc": "1993:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1993:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2017:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2017:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1961:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1961:31:5"
																		},
																		"nativeSrc": "1961:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1951:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1951:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2045:130:5",
															"nodeType": "YulBlock",
															"src": "2045:130:5",
															"statements": [
																{
																	"nativeSrc": "2060:17:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2060:17:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2074:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2074:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2064:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2064:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2091:74:5",
																	"nodeType": "YulAssignment",
																	"src": "2091:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2137:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2137:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2148:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2148:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2133:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2133:3:5"
																				},
																				"nativeSrc": "2133:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2133:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2157:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2101:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "2101:31:5"
																		},
																		"nativeSrc": "2101:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2091:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2091:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "1205:977:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1288:9:5",
														"nodeType": "YulTypedName",
														"src": "1288:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1299:7:5",
														"nodeType": "YulTypedName",
														"src": "1299:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1311:6:5",
														"nodeType": "YulTypedName",
														"src": "1311:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1319:6:5",
														"nodeType": "YulTypedName",
														"src": "1319:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1327:6:5",
														"nodeType": "YulTypedName",
														"src": "1327:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1335:6:5",
														"nodeType": "YulTypedName",
														"src": "1335:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1343:6:5",
														"nodeType": "YulTypedName",
														"src": "1343:6:5",
														"type": ""
													}
												],
												"src": "1205:977:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516114b93803806114b983398181016040528101906100319190610245565b61004d6100426100ec60201b60201c565b6100f360201b60201c565b8460015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600381905550816004819055508060058190555050505050506102bc565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e1826101b8565b9050919050565b6101f1816101d7565b81146101fb575f80fd5b50565b5f8151905061020c816101e8565b92915050565b5f819050919050565b61022481610212565b811461022e575f80fd5b50565b5f8151905061023f8161021b565b92915050565b5f805f805f60a0868803121561025e5761025d6101b4565b5b5f61026b888289016101fe565b955050602061027c888289016101fe565b945050604061028d88828901610231565b935050606061029e88828901610231565b92505060806102af88828901610231565b9150509295509295909350565b6111f0806102c95f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80638da5cb5b1161006f5780638da5cb5b146101665780638fee640714610184578063dd467064146101b7578063ea768123146101d3578063f2fde38b146101f1578063f9be04ca1461020d576100b2565b806308a1eee1146100b6578063568b962a146100d2578063715018a6146100f05780637d515a10146100fa5780637e8d094c1461011857806383a811bf14610148575b5f80fd5b6100d060048036038101906100cb9190610af0565b61022b565b005b6100da61045b565b6040516100e79190610b33565b60405180910390f35b6100f8610461565b005b610102610474565b60405161010f9190610b8b565b60405180910390f35b610132600480360381019061012d9190610af0565b610499565b60405161013f9190610c15565b60405180910390f35b610150610536565b60405161015d9190610b33565b60405180910390f35b61016e61053c565b60405161017b9190610b8b565b60405180910390f35b61019e60048036038101906101999190610af0565b610563565b6040516101ae9493929190610c2e565b60405180910390f35b6101d160048036038101906101cc9190610c9b565b6105ae565b005b6101db61088c565b6040516101e89190610b33565b60405180910390f35b61020b60048036038101906102069190610cf0565b610892565b005b610215610914565b6040516102229190610d76565b60405180910390f35b610233610939565b5f60065f8381526020019081526020015f209050428160030154111561028e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028590610de9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610e51565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b81526004016103a193929190610e6f565b5f604051808303815f87803b1580156103b8575f80fd5b505af11580156103ca573d5f803e3d5ffd5b5050505060065f8381526020019081526020015f205f8082015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182015f9055600282015f9055600382015f905550507fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e816001015460405161044f9190610b33565b60405180910390a15050565b60035481565b610469610939565b6104725f6109b7565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104a1610a7f565b60065f8381526020019081526020015f206040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815250509050919050565b60055481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161061f9190610b33565b602060405180830381865afa15801561063a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065e9190610eb8565b73ffffffffffffffffffffffffffffffffffffffff16146106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90610f53565b60405180910390fd5b5f8133426040516020016106ca93929190610fd6565b6040516020818303038152906040528051906020012090505f4290505f600554600454600354846106fb919061103f565b610705919061103f565b61070f919061103f565b905060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018381526020018281525060065f8581526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015590505060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161081c93929190610e6f565b5f604051808303815f87803b158015610833575f80fd5b505af1158015610845573d5f803e3d5ffd5b505050507fe42732012f91412364b2848d4c8c3d8dd5508e0a5a0f60d6e1de7843145ea5c08333868460405161087e9493929190611081565b60405180910390a150505050565b60045481565b61089a610939565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611134565b60405180910390fd5b610911816109b7565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610941610a78565b73ffffffffffffffffffffffffffffffffffffffff1661095f61053c565b73ffffffffffffffffffffffffffffffffffffffff16146109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac9061119c565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b60405180608001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81525090565b5f80fd5b5f819050919050565b610acf81610abd565b8114610ad9575f80fd5b50565b5f81359050610aea81610ac6565b92915050565b5f60208284031215610b0557610b04610ab9565b5b5f610b1284828501610adc565b91505092915050565b5f819050919050565b610b2d81610b1b565b82525050565b5f602082019050610b465f830184610b24565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7582610b4c565b9050919050565b610b8581610b6b565b82525050565b5f602082019050610b9e5f830184610b7c565b92915050565b610bad81610b6b565b82525050565b610bbc81610b1b565b82525050565b608082015f820151610bd65f850182610ba4565b506020820151610be96020850182610bb3565b506040820151610bfc6040850182610bb3565b506060820151610c0f6060850182610bb3565b50505050565b5f608082019050610c285f830184610bc2565b92915050565b5f608082019050610c415f830187610b7c565b610c4e6020830186610b24565b610c5b6040830185610b24565b610c686060830184610b24565b95945050505050565b610c7a81610b1b565b8114610c84575f80fd5b50565b5f81359050610c9581610c71565b92915050565b5f60208284031215610cb057610caf610ab9565b5b5f610cbd84828501610c87565b91505092915050565b610ccf81610b6b565b8114610cd9575f80fd5b50565b5f81359050610cea81610cc6565b92915050565b5f60208284031215610d0557610d04610ab9565b5b5f610d1284828501610cdc565b91505092915050565b5f819050919050565b5f610d3e610d39610d3484610b4c565b610d1b565b610b4c565b9050919050565b5f610d4f82610d24565b9050919050565b5f610d6082610d45565b9050919050565b610d7081610d56565b82525050565b5f602082019050610d895f830184610d67565b92915050565b5f82825260208201905092915050565b7f446561646c696e65206e6f7420726561636865640000000000000000000000005f82015250565b5f610dd3601483610d8f565b9150610dde82610d9f565b602082019050919050565b5f6020820190508181035f830152610e0081610dc7565b9050919050565b7f496e76616c6964207374616b65000000000000000000000000000000000000005f82015250565b5f610e3b600d83610d8f565b9150610e4682610e07565b602082019050919050565b5f6020820190508181035f830152610e6881610e2f565b9050919050565b5f606082019050610e825f830186610b7c565b610e8f6020830185610b7c565b610e9c6040830184610b24565b949350505050565b5f81519050610eb281610cc6565b92915050565b5f60208284031215610ecd57610ecc610ab9565b5b5f610eda84828501610ea4565b91505092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e465f8201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f3d602183610d8f565b9150610f4882610ee3565b604082019050919050565b5f6020820190508181035f830152610f6a81610f31565b9050919050565b5f819050919050565b610f8b610f8682610b1b565b610f71565b82525050565b5f8160601b9050919050565b5f610fa782610f91565b9050919050565b5f610fb882610f9d565b9050919050565b610fd0610fcb82610b6b565b610fae565b82525050565b5f610fe18286610f7a565b602082019150610ff18285610fbf565b6014820191506110018284610f7a565b602082019150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61104982610b1b565b915061105483610b1b565b925082820190508082111561106c5761106b611012565b5b92915050565b61107b81610abd565b82525050565b5f6080820190506110945f830187611072565b6110a16020830186610b7c565b6110ae6040830185610b24565b6110bb6060830184610b24565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61111e602683610d8f565b9150611129826110c4565b604082019050919050565b5f6020820190508181035f83015261114b81611112565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f611186602083610d8f565b915061119182611152565b602082019050919050565b5f6020820190508181035f8301526111b38161117a565b905091905056fea2646970667358221220ac5d46b1aad220b38f1f11e6c10abf2c26213ad0375e46ce96740952435a0b9864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x14B9 CODESIZE SUB DUP1 PUSH2 0x14B9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH2 0x4D PUSH2 0x42 PUSH2 0xEC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xF3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x2BC JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1 DUP3 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20C DUP2 PUSH2 0x1E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x224 DUP2 PUSH2 0x212 JUMP JUMPDEST DUP2 EQ PUSH2 0x22E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x23F DUP2 PUSH2 0x21B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25E JUMPI PUSH2 0x25D PUSH2 0x1B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26B DUP9 DUP3 DUP10 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x27C DUP9 DUP3 DUP10 ADD PUSH2 0x1FE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x28D DUP9 DUP3 DUP10 ADD PUSH2 0x231 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x29E DUP9 DUP3 DUP10 ADD PUSH2 0x231 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2AF DUP9 DUP3 DUP10 ADD PUSH2 0x231 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x11F0 DUP1 PUSH2 0x2C9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x8FEE6407 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xDD467064 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xEA768123 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xF9BE04CA EQ PUSH2 0x20D JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x8A1EEE1 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x568B962A EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x7D515A10 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7E8D094C EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x83A811BF EQ PUSH2 0x148 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x461 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x939 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP TIMESTAMP DUP2 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x28E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP PUSH32 0xD83C63197E8E676D80AB0122BEBA9A9D20F3828839E9A1D6FE81D242E9CD7E6E DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x469 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x472 PUSH0 PUSH2 0x9B7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4A1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP1 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 CALLER TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x833 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x845 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0xE42732012F91412364B2848D4C8C3D8DD5508E0A5A0F60D6E1DE7843145EA5C0 DUP4 CALLER DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x87E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x89A PUSH2 0x939 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FF SWAP1 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x911 DUP2 PUSH2 0x9B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x941 PUSH2 0xA78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x95F PUSH2 0x53C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AC SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACF DUP2 PUSH2 0xABD JUMP JUMPDEST DUP2 EQ PUSH2 0xAD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAEA DUP2 PUSH2 0xAC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB12 DUP5 DUP3 DUP6 ADD PUSH2 0xADC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2D DUP2 PUSH2 0xB1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB46 PUSH0 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB75 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH0 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBBC DUP2 PUSH2 0xB1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xBD6 PUSH0 DUP6 ADD DUP3 PUSH2 0xBA4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xBE9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xBB3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xBFC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBB3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC0F PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xBB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC28 PUSH0 DUP4 ADD DUP5 PUSH2 0xBC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC41 PUSH0 DUP4 ADD DUP8 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xC4E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xC5B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xC68 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0xB1B JUMP JUMPDEST DUP2 EQ PUSH2 0xC84 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC95 DUP2 PUSH2 0xC71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH2 0xCAF PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCBD DUP5 DUP3 DUP6 ADD PUSH2 0xC87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCCF DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP2 EQ PUSH2 0xCD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCEA DUP2 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD12 DUP5 DUP3 DUP6 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD3E PUSH2 0xD39 PUSH2 0xD34 DUP5 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD4F DUP3 PUSH2 0xD24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD60 DUP3 PUSH2 0xD45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD70 DUP2 PUSH2 0xD56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD89 PUSH0 DUP4 ADD DUP5 PUSH2 0xD67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446561646C696E65206E6F742072656163686564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDD3 PUSH1 0x14 DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0xDDE DUP3 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE00 DUP2 PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE3B PUSH1 0xD DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0xE46 DUP3 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE68 DUP2 PUSH2 0xE2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE82 PUSH0 DUP4 ADD DUP7 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xE8F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xE9C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEB2 DUP2 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECD JUMPI PUSH2 0xECC PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEDA DUP5 DUP3 DUP6 ADD PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973204E46 PUSH0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF3D PUSH1 0x21 DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0xF48 DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF6A DUP2 PUSH2 0xF31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B PUSH2 0xF86 DUP3 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0xF71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA7 DUP3 PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB8 DUP3 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD0 PUSH2 0xFCB DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFE1 DUP3 DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xFF1 DUP3 DUP6 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1001 DUP3 DUP5 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1049 DUP3 PUSH2 0xB1B JUMP JUMPDEST SWAP2 POP PUSH2 0x1054 DUP4 PUSH2 0xB1B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x106C JUMPI PUSH2 0x106B PUSH2 0x1012 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x107B DUP2 PUSH2 0xABD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1094 PUSH0 DUP4 ADD DUP8 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x10A1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x10AE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x10BB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x111E PUSH1 0x26 DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1129 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x114B DUP2 PUSH2 0x1112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1186 PUSH1 0x20 DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1191 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11B3 DUP2 PUSH2 0x117A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC TSTORE CHAINID 0xB1 0xAA 0xD2 KECCAK256 0xB3 DUP16 0x1F GT 0xE6 0xC1 EXP 0xBF 0x2C 0x26 0x21 GASPRICE 0xD0 CALLDATACOPY MCOPY CHAINID 0xCE SWAP7 PUSH21 0x952435A0B9864736F6C634300081A003300000000 ",
							"sourceMap": "170:1972:4:-:0;;;677:349;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;877:17:4;850:16;;:45;;;;;;;;;;;;;;;;;;924:17;905:16;;:36;;;;;;;;;;;;;;;;;;960:7;951:6;:16;;;;986:7;977:6;:16;;;;1012:7;1003:6;:16;;;;677:349;;;;;170:1972;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:977::-;1311:6;1319;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:64;1739:7;1730:6;1719:9;1715:22;1683:64;:::i;:::-;1673:74;;1628:129;1796:2;1822:64;1878:7;1869:6;1858:9;1854:22;1822:64;:::i;:::-;1812:74;;1767:129;1935:2;1961:64;2017:7;2008:6;1997:9;1993:22;1961:64;:::i;:::-;1951:74;;1906:129;2074:3;2101:64;2157:7;2148:6;2137:9;2133:22;2101:64;:::i;:::-;2091:74;;2045:130;1205:977;;;;;;;;:::o;170:1972:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 2361,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_240": {
									"entryPoint": 2680,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2487,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@blackholeAddress_273": {
									"entryPoint": 1140,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_477": {
									"entryPoint": 555,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deltaB_277": {
									"entryPoint": 2188,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deltaD_279": {
									"entryPoint": 1334,
									"id": 279,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deltaK_275": {
									"entryPoint": 1115,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gameItemContract_271": {
									"entryPoint": 2324,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getStakeInfo_490": {
									"entryPoint": 1177,
									"id": 490,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lock_420": {
									"entryPoint": 1454,
									"id": 420,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 1340,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1121,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakes_293": {
									"entryPoint": 1379,
									"id": 293,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2194,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_StakeInfo_$288_memory_ptr_to_t_struct$_StakeInfo_$288_memory_ptr_fromStack": {
									"entryPoint": 3010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4054,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3695,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3118,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_StakeInfo_$288_memory_ptr__to_t_struct$_StakeInfo_$288_memory_ptr__fromStack_reversed": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$228_to_t_address": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 3953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14679:5",
										"nodeType": "YulBlock",
										"src": "0:14679:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "756:263:5",
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:5",
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nativeSrc": "804:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nativeSrc": "804:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nativeSrc": "773:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nativeSrc": "769:32:5",
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nativeSrc": "766:119:5",
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nativeSrc": "895:117:5",
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nativeSrc": "910:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:5",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:5",
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nativeSrc": "970:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "949:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nativeSrc": "949:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "690:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:5",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:5",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nativeSrc": "1070:32:5",
													"nodeType": "YulBlock",
													"src": "1070:32:5",
													"statements": [
														{
															"nativeSrc": "1080:16:5",
															"nodeType": "YulAssignment",
															"src": "1080:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1091:5:5",
																"nodeType": "YulIdentifier",
																"src": "1091:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1025:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:5",
														"nodeType": "YulTypedName",
														"src": "1052:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:5",
														"nodeType": "YulTypedName",
														"src": "1062:7:5",
														"type": ""
													}
												],
												"src": "1025:77:5"
											},
											{
												"body": {
													"nativeSrc": "1173:53:5",
													"nodeType": "YulBlock",
													"src": "1173:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1190:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1190:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1213:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1213:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1195:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1195:17:5"
																		},
																		"nativeSrc": "1195:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1195:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1183:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:5"
																},
																"nativeSrc": "1183:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1183:37:5"
															},
															"nativeSrc": "1183:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1183:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1108:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1161:5:5",
														"nodeType": "YulTypedName",
														"src": "1161:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1168:3:5",
														"nodeType": "YulTypedName",
														"src": "1168:3:5",
														"type": ""
													}
												],
												"src": "1108:118:5"
											},
											{
												"body": {
													"nativeSrc": "1330:124:5",
													"nodeType": "YulBlock",
													"src": "1330:124:5",
													"statements": [
														{
															"nativeSrc": "1340:26:5",
															"nodeType": "YulAssignment",
															"src": "1340:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1352:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1363:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1348:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:5"
																},
																"nativeSrc": "1348:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1348:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1340:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1420:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1420:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1433:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1433:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1444:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1444:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1429:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1429:3:5"
																		},
																		"nativeSrc": "1429:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1429:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1376:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1376:43:5"
																},
																"nativeSrc": "1376:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1376:71:5"
															},
															"nativeSrc": "1376:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1376:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1232:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1302:9:5",
														"nodeType": "YulTypedName",
														"src": "1302:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1314:6:5",
														"nodeType": "YulTypedName",
														"src": "1314:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1325:4:5",
														"nodeType": "YulTypedName",
														"src": "1325:4:5",
														"type": ""
													}
												],
												"src": "1232:222:5"
											},
											{
												"body": {
													"nativeSrc": "1505:81:5",
													"nodeType": "YulBlock",
													"src": "1505:81:5",
													"statements": [
														{
															"nativeSrc": "1515:65:5",
															"nodeType": "YulAssignment",
															"src": "1515:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1530:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1530:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1537:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1537:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1526:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1526:3:5"
																},
																"nativeSrc": "1526:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1526:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1515:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1515:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1460:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1487:5:5",
														"nodeType": "YulTypedName",
														"src": "1487:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1497:7:5",
														"nodeType": "YulTypedName",
														"src": "1497:7:5",
														"type": ""
													}
												],
												"src": "1460:126:5"
											},
											{
												"body": {
													"nativeSrc": "1637:51:5",
													"nodeType": "YulBlock",
													"src": "1637:51:5",
													"statements": [
														{
															"nativeSrc": "1647:35:5",
															"nodeType": "YulAssignment",
															"src": "1647:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1676:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1676:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1658:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:5"
																},
																"nativeSrc": "1658:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1658:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1647:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1647:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1592:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1619:5:5",
														"nodeType": "YulTypedName",
														"src": "1619:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1629:7:5",
														"nodeType": "YulTypedName",
														"src": "1629:7:5",
														"type": ""
													}
												],
												"src": "1592:96:5"
											},
											{
												"body": {
													"nativeSrc": "1759:53:5",
													"nodeType": "YulBlock",
													"src": "1759:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1799:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1799:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1781:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1781:17:5"
																		},
																		"nativeSrc": "1781:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1769:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:5"
																},
																"nativeSrc": "1769:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1769:37:5"
															},
															"nativeSrc": "1769:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1769:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1694:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1747:5:5",
														"nodeType": "YulTypedName",
														"src": "1747:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1754:3:5",
														"nodeType": "YulTypedName",
														"src": "1754:3:5",
														"type": ""
													}
												],
												"src": "1694:118:5"
											},
											{
												"body": {
													"nativeSrc": "1916:124:5",
													"nodeType": "YulBlock",
													"src": "1916:124:5",
													"statements": [
														{
															"nativeSrc": "1926:26:5",
															"nodeType": "YulAssignment",
															"src": "1926:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1938:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1938:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1934:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1934:3:5"
																},
																"nativeSrc": "1934:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1934:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1926:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1926:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2006:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2006:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2019:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2019:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2030:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2030:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:5"
																		},
																		"nativeSrc": "2015:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1962:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1962:43:5"
																},
																"nativeSrc": "1962:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1962:71:5"
															},
															"nativeSrc": "1962:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1962:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1818:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1888:9:5",
														"nodeType": "YulTypedName",
														"src": "1888:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1900:6:5",
														"nodeType": "YulTypedName",
														"src": "1900:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1911:4:5",
														"nodeType": "YulTypedName",
														"src": "1911:4:5",
														"type": ""
													}
												],
												"src": "1818:222:5"
											},
											{
												"body": {
													"nativeSrc": "2101:53:5",
													"nodeType": "YulBlock",
													"src": "2101:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2118:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2118:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2141:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2141:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2123:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2123:17:5"
																		},
																		"nativeSrc": "2123:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2111:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2111:6:5"
																},
																"nativeSrc": "2111:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2111:37:5"
															},
															"nativeSrc": "2111:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2111:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2046:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2089:5:5",
														"nodeType": "YulTypedName",
														"src": "2089:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2096:3:5",
														"nodeType": "YulTypedName",
														"src": "2096:3:5",
														"type": ""
													}
												],
												"src": "2046:108:5"
											},
											{
												"body": {
													"nativeSrc": "2215:53:5",
													"nodeType": "YulBlock",
													"src": "2215:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2232:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2232:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2255:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2255:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2237:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2237:17:5"
																		},
																		"nativeSrc": "2237:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2237:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2225:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:5"
																},
																"nativeSrc": "2225:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2225:37:5"
															},
															"nativeSrc": "2225:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2225:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2160:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2203:5:5",
														"nodeType": "YulTypedName",
														"src": "2203:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2210:3:5",
														"nodeType": "YulTypedName",
														"src": "2210:3:5",
														"type": ""
													}
												],
												"src": "2160:108:5"
											},
											{
												"body": {
													"nativeSrc": "2468:751:5",
													"nodeType": "YulBlock",
													"src": "2468:751:5",
													"statements": [
														{
															"nativeSrc": "2478:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2478:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2499:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2499:4:5",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:5"
																},
																"nativeSrc": "2490:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2490:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2482:4:5",
																	"nodeType": "YulTypedName",
																	"src": "2482:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2514:165:5",
															"nodeType": "YulBlock",
															"src": "2514:165:5",
															"statements": [
																{
																	"nativeSrc": "2550:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2550:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2580:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2580:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2587:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2587:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2576:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2576:3:5"
																				},
																				"nativeSrc": "2576:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2576:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2570:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "2570:5:5"
																		},
																		"nativeSrc": "2570:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2570:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2554:12:5",
																			"nodeType": "YulTypedName",
																			"src": "2554:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2640:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "2640:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2658:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2658:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2663:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2663:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2654:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:5"
																				},
																				"nativeSrc": "2654:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2654:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "2606:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "2606:33:5"
																		},
																		"nativeSrc": "2606:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2606:63:5"
																	},
																	"nativeSrc": "2606:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "2606:63:5"
																}
															]
														},
														{
															"nativeSrc": "2689:167:5",
															"nodeType": "YulBlock",
															"src": "2689:167:5",
															"statements": [
																{
																	"nativeSrc": "2727:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2727:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2757:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2757:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2764:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2764:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2753:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2753:3:5"
																				},
																				"nativeSrc": "2753:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2753:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2747:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "2747:5:5"
																		},
																		"nativeSrc": "2747:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2747:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2731:12:5",
																			"nodeType": "YulTypedName",
																			"src": "2731:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2817:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "2817:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2835:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2835:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2840:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2840:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2831:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:5"
																				},
																				"nativeSrc": "2831:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2783:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "2783:33:5"
																		},
																		"nativeSrc": "2783:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:63:5"
																	},
																	"nativeSrc": "2783:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "2783:63:5"
																}
															]
														},
														{
															"nativeSrc": "2866:168:5",
															"nodeType": "YulBlock",
															"src": "2866:168:5",
															"statements": [
																{
																	"nativeSrc": "2905:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2935:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2935:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2942:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2942:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2931:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2931:3:5"
																				},
																				"nativeSrc": "2931:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2931:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2925:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "2925:5:5"
																		},
																		"nativeSrc": "2925:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2925:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2909:12:5",
																			"nodeType": "YulTypedName",
																			"src": "2909:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2995:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "2995:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3013:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3013:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3018:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3018:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3009:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3009:3:5"
																				},
																				"nativeSrc": "3009:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3009:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2961:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "2961:33:5"
																		},
																		"nativeSrc": "2961:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:63:5"
																	},
																	"nativeSrc": "2961:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "2961:63:5"
																}
															]
														},
														{
															"nativeSrc": "3044:168:5",
															"nodeType": "YulBlock",
															"src": "3044:168:5",
															"statements": [
																{
																	"nativeSrc": "3083:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3083:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3113:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3113:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3120:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3120:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3109:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3109:3:5"
																				},
																				"nativeSrc": "3109:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3109:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3103:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3103:5:5"
																		},
																		"nativeSrc": "3103:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3103:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3087:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3087:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3173:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3173:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3191:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3191:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3196:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3196:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3187:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3187:3:5"
																				},
																				"nativeSrc": "3187:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3187:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3139:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "3139:33:5"
																		},
																		"nativeSrc": "3139:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:63:5"
																	},
																	"nativeSrc": "3139:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3139:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakeInfo_$288_memory_ptr_to_t_struct$_StakeInfo_$288_memory_ptr_fromStack",
												"nativeSrc": "2350:869:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2455:5:5",
														"nodeType": "YulTypedName",
														"src": "2455:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2462:3:5",
														"nodeType": "YulTypedName",
														"src": "2462:3:5",
														"type": ""
													}
												],
												"src": "2350:869:5"
											},
											{
												"body": {
													"nativeSrc": "3375:177:5",
													"nodeType": "YulBlock",
													"src": "3375:177:5",
													"statements": [
														{
															"nativeSrc": "3385:27:5",
															"nodeType": "YulAssignment",
															"src": "3385:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3397:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3397:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3408:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3408:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3393:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:5"
																},
																"nativeSrc": "3393:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3393:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3385:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3385:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3518:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3518:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3531:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3531:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3542:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3542:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3527:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3527:3:5"
																		},
																		"nativeSrc": "3527:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3527:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakeInfo_$288_memory_ptr_to_t_struct$_StakeInfo_$288_memory_ptr_fromStack",
																	"nativeSrc": "3422:95:5",
																	"nodeType": "YulIdentifier",
																	"src": "3422:95:5"
																},
																"nativeSrc": "3422:123:5",
																"nodeType": "YulFunctionCall",
																"src": "3422:123:5"
															},
															"nativeSrc": "3422:123:5",
															"nodeType": "YulExpressionStatement",
															"src": "3422:123:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakeInfo_$288_memory_ptr__to_t_struct$_StakeInfo_$288_memory_ptr__fromStack_reversed",
												"nativeSrc": "3225:327:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3347:9:5",
														"nodeType": "YulTypedName",
														"src": "3347:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3359:6:5",
														"nodeType": "YulTypedName",
														"src": "3359:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3370:4:5",
														"nodeType": "YulTypedName",
														"src": "3370:4:5",
														"type": ""
													}
												],
												"src": "3225:327:5"
											},
											{
												"body": {
													"nativeSrc": "3740:371:5",
													"nodeType": "YulBlock",
													"src": "3740:371:5",
													"statements": [
														{
															"nativeSrc": "3750:27:5",
															"nodeType": "YulAssignment",
															"src": "3750:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3762:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3762:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3773:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3773:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3758:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3758:3:5"
																},
																"nativeSrc": "3758:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3758:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3750:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3750:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3831:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3831:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3844:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3844:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3855:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3855:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3840:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3840:3:5"
																		},
																		"nativeSrc": "3840:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3840:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3787:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3787:43:5"
																},
																"nativeSrc": "3787:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3787:71:5"
															},
															"nativeSrc": "3787:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3787:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3912:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3912:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3925:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3925:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3936:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3936:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3921:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3921:3:5"
																		},
																		"nativeSrc": "3921:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3921:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3868:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3868:43:5"
																},
																"nativeSrc": "3868:72:5",
																"nodeType": "YulFunctionCall",
																"src": "3868:72:5"
															},
															"nativeSrc": "3868:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "3868:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3994:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3994:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4007:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4007:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4018:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4018:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4003:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:5"
																		},
																		"nativeSrc": "4003:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4003:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3950:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3950:43:5"
																},
																"nativeSrc": "3950:72:5",
																"nodeType": "YulFunctionCall",
																"src": "3950:72:5"
															},
															"nativeSrc": "3950:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "3950:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4076:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4076:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4089:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4089:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4100:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4100:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4085:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4085:3:5"
																		},
																		"nativeSrc": "4085:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4085:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4032:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4032:43:5"
																},
																"nativeSrc": "4032:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4032:72:5"
															},
															"nativeSrc": "4032:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4032:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3558:553:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3688:9:5",
														"nodeType": "YulTypedName",
														"src": "3688:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3700:6:5",
														"nodeType": "YulTypedName",
														"src": "3700:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3708:6:5",
														"nodeType": "YulTypedName",
														"src": "3708:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3716:6:5",
														"nodeType": "YulTypedName",
														"src": "3716:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3724:6:5",
														"nodeType": "YulTypedName",
														"src": "3724:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3735:4:5",
														"nodeType": "YulTypedName",
														"src": "3735:4:5",
														"type": ""
													}
												],
												"src": "3558:553:5"
											},
											{
												"body": {
													"nativeSrc": "4160:79:5",
													"nodeType": "YulBlock",
													"src": "4160:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4217:16:5",
																"nodeType": "YulBlock",
																"src": "4217:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4226:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4226:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4229:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4229:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4219:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4219:6:5"
																			},
																			"nativeSrc": "4219:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4219:12:5"
																		},
																		"nativeSrc": "4219:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4219:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4183:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4183:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4208:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4208:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4190:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "4190:17:5"
																				},
																				"nativeSrc": "4190:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4190:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4180:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4180:2:5"
																		},
																		"nativeSrc": "4180:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4173:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:5"
																},
																"nativeSrc": "4173:43:5",
																"nodeType": "YulFunctionCall",
																"src": "4173:43:5"
															},
															"nativeSrc": "4170:63:5",
															"nodeType": "YulIf",
															"src": "4170:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4117:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4153:5:5",
														"nodeType": "YulTypedName",
														"src": "4153:5:5",
														"type": ""
													}
												],
												"src": "4117:122:5"
											},
											{
												"body": {
													"nativeSrc": "4297:87:5",
													"nodeType": "YulBlock",
													"src": "4297:87:5",
													"statements": [
														{
															"nativeSrc": "4307:29:5",
															"nodeType": "YulAssignment",
															"src": "4307:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4329:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4329:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4316:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4316:12:5"
																},
																"nativeSrc": "4316:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4316:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4307:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4307:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4372:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4372:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4345:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4345:26:5"
																},
																"nativeSrc": "4345:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4345:33:5"
															},
															"nativeSrc": "4345:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4345:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4245:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4275:6:5",
														"nodeType": "YulTypedName",
														"src": "4275:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4283:3:5",
														"nodeType": "YulTypedName",
														"src": "4283:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4291:5:5",
														"nodeType": "YulTypedName",
														"src": "4291:5:5",
														"type": ""
													}
												],
												"src": "4245:139:5"
											},
											{
												"body": {
													"nativeSrc": "4456:263:5",
													"nodeType": "YulBlock",
													"src": "4456:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4502:83:5",
																"nodeType": "YulBlock",
																"src": "4502:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4504:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4504:77:5"
																			},
																			"nativeSrc": "4504:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4504:79:5"
																		},
																		"nativeSrc": "4504:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4504:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4477:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4477:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4486:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4486:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4473:3:5"
																		},
																		"nativeSrc": "4473:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4473:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4498:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4469:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4469:3:5"
																},
																"nativeSrc": "4469:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4469:32:5"
															},
															"nativeSrc": "4466:119:5",
															"nodeType": "YulIf",
															"src": "4466:119:5"
														},
														{
															"nativeSrc": "4595:117:5",
															"nodeType": "YulBlock",
															"src": "4595:117:5",
															"statements": [
																{
																	"nativeSrc": "4610:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4610:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4624:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4624:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4614:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4614:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4639:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4639:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4674:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4674:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4685:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4685:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4670:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4670:3:5"
																				},
																				"nativeSrc": "4670:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4670:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4694:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4694:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4649:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4649:20:5"
																		},
																		"nativeSrc": "4649:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4649:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4639:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4639:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4390:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4426:9:5",
														"nodeType": "YulTypedName",
														"src": "4426:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4437:7:5",
														"nodeType": "YulTypedName",
														"src": "4437:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4449:6:5",
														"nodeType": "YulTypedName",
														"src": "4449:6:5",
														"type": ""
													}
												],
												"src": "4390:329:5"
											},
											{
												"body": {
													"nativeSrc": "4768:79:5",
													"nodeType": "YulBlock",
													"src": "4768:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4825:16:5",
																"nodeType": "YulBlock",
																"src": "4825:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4834:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4834:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4837:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4837:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4827:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4827:6:5"
																			},
																			"nativeSrc": "4827:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4827:12:5"
																		},
																		"nativeSrc": "4827:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4827:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4791:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4791:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4816:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4816:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4798:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "4798:17:5"
																				},
																				"nativeSrc": "4798:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4798:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4788:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4788:2:5"
																		},
																		"nativeSrc": "4788:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4788:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4781:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4781:6:5"
																},
																"nativeSrc": "4781:43:5",
																"nodeType": "YulFunctionCall",
																"src": "4781:43:5"
															},
															"nativeSrc": "4778:63:5",
															"nodeType": "YulIf",
															"src": "4778:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4725:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4761:5:5",
														"nodeType": "YulTypedName",
														"src": "4761:5:5",
														"type": ""
													}
												],
												"src": "4725:122:5"
											},
											{
												"body": {
													"nativeSrc": "4905:87:5",
													"nodeType": "YulBlock",
													"src": "4905:87:5",
													"statements": [
														{
															"nativeSrc": "4915:29:5",
															"nodeType": "YulAssignment",
															"src": "4915:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4937:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4937:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4924:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4924:12:5"
																},
																"nativeSrc": "4924:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4924:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4915:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4915:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4980:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4980:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4953:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4953:26:5"
																},
																"nativeSrc": "4953:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4953:33:5"
															},
															"nativeSrc": "4953:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4953:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4853:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4883:6:5",
														"nodeType": "YulTypedName",
														"src": "4883:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4891:3:5",
														"nodeType": "YulTypedName",
														"src": "4891:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4899:5:5",
														"nodeType": "YulTypedName",
														"src": "4899:5:5",
														"type": ""
													}
												],
												"src": "4853:139:5"
											},
											{
												"body": {
													"nativeSrc": "5064:263:5",
													"nodeType": "YulBlock",
													"src": "5064:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5110:83:5",
																"nodeType": "YulBlock",
																"src": "5110:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5112:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5112:77:5"
																			},
																			"nativeSrc": "5112:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5112:79:5"
																		},
																		"nativeSrc": "5112:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5112:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5085:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5085:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5094:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5094:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5081:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:5"
																		},
																		"nativeSrc": "5081:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5106:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5106:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5077:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:5"
																},
																"nativeSrc": "5077:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5077:32:5"
															},
															"nativeSrc": "5074:119:5",
															"nodeType": "YulIf",
															"src": "5074:119:5"
														},
														{
															"nativeSrc": "5203:117:5",
															"nodeType": "YulBlock",
															"src": "5203:117:5",
															"statements": [
																{
																	"nativeSrc": "5218:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5218:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5232:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5232:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5222:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5222:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5247:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5247:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5282:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5282:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5293:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5293:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5278:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5278:3:5"
																				},
																				"nativeSrc": "5278:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5278:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5302:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5302:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5257:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5257:20:5"
																		},
																		"nativeSrc": "5257:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5247:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5247:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4998:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5034:9:5",
														"nodeType": "YulTypedName",
														"src": "5034:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5045:7:5",
														"nodeType": "YulTypedName",
														"src": "5045:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5057:6:5",
														"nodeType": "YulTypedName",
														"src": "5057:6:5",
														"type": ""
													}
												],
												"src": "4998:329:5"
											},
											{
												"body": {
													"nativeSrc": "5365:28:5",
													"nodeType": "YulBlock",
													"src": "5365:28:5",
													"statements": [
														{
															"nativeSrc": "5375:12:5",
															"nodeType": "YulAssignment",
															"src": "5375:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "5382:5:5",
																"nodeType": "YulIdentifier",
																"src": "5382:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5375:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5375:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5333:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5351:5:5",
														"nodeType": "YulTypedName",
														"src": "5351:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5361:3:5",
														"nodeType": "YulTypedName",
														"src": "5361:3:5",
														"type": ""
													}
												],
												"src": "5333:60:5"
											},
											{
												"body": {
													"nativeSrc": "5459:82:5",
													"nodeType": "YulBlock",
													"src": "5459:82:5",
													"statements": [
														{
															"nativeSrc": "5469:66:5",
															"nodeType": "YulAssignment",
															"src": "5469:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5527:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5527:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5509:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "5509:17:5"
																				},
																				"nativeSrc": "5509:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5509:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5500:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "5500:8:5"
																		},
																		"nativeSrc": "5500:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5500:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5482:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5482:17:5"
																},
																"nativeSrc": "5482:53:5",
																"nodeType": "YulFunctionCall",
																"src": "5482:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5469:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "5469:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5399:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5439:5:5",
														"nodeType": "YulTypedName",
														"src": "5439:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5449:9:5",
														"nodeType": "YulTypedName",
														"src": "5449:9:5",
														"type": ""
													}
												],
												"src": "5399:142:5"
											},
											{
												"body": {
													"nativeSrc": "5607:66:5",
													"nodeType": "YulBlock",
													"src": "5607:66:5",
													"statements": [
														{
															"nativeSrc": "5617:50:5",
															"nodeType": "YulAssignment",
															"src": "5617:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5661:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5661:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5630:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "5630:30:5"
																},
																"nativeSrc": "5630:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5630:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5617:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "5617:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5547:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5587:5:5",
														"nodeType": "YulTypedName",
														"src": "5587:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5597:9:5",
														"nodeType": "YulTypedName",
														"src": "5597:9:5",
														"type": ""
													}
												],
												"src": "5547:126:5"
											},
											{
												"body": {
													"nativeSrc": "5754:66:5",
													"nodeType": "YulBlock",
													"src": "5754:66:5",
													"statements": [
														{
															"nativeSrc": "5764:50:5",
															"nodeType": "YulAssignment",
															"src": "5764:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5808:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5808:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5777:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "5777:30:5"
																},
																"nativeSrc": "5777:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5777:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5764:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "5764:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$228_to_t_address",
												"nativeSrc": "5679:141:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5734:5:5",
														"nodeType": "YulTypedName",
														"src": "5734:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5744:9:5",
														"nodeType": "YulTypedName",
														"src": "5744:9:5",
														"type": ""
													}
												],
												"src": "5679:141:5"
											},
											{
												"body": {
													"nativeSrc": "5906:81:5",
													"nodeType": "YulBlock",
													"src": "5906:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5923:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5923:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5974:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5974:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$228_to_t_address",
																			"nativeSrc": "5928:45:5",
																			"nodeType": "YulIdentifier",
																			"src": "5928:45:5"
																		},
																		"nativeSrc": "5928:52:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5916:6:5"
																},
																"nativeSrc": "5916:65:5",
																"nodeType": "YulFunctionCall",
																"src": "5916:65:5"
															},
															"nativeSrc": "5916:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "5916:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack",
												"nativeSrc": "5826:161:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5894:5:5",
														"nodeType": "YulTypedName",
														"src": "5894:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5901:3:5",
														"nodeType": "YulTypedName",
														"src": "5901:3:5",
														"type": ""
													}
												],
												"src": "5826:161:5"
											},
											{
												"body": {
													"nativeSrc": "6106:139:5",
													"nodeType": "YulBlock",
													"src": "6106:139:5",
													"statements": [
														{
															"nativeSrc": "6116:26:5",
															"nodeType": "YulAssignment",
															"src": "6116:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6128:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6128:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6139:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6139:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6124:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6124:3:5"
																},
																"nativeSrc": "6124:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6124:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6116:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6116:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6211:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6211:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6224:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6224:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6235:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6235:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6220:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6220:3:5"
																		},
																		"nativeSrc": "6220:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6220:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack",
																	"nativeSrc": "6152:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6152:58:5"
																},
																"nativeSrc": "6152:86:5",
																"nodeType": "YulFunctionCall",
																"src": "6152:86:5"
															},
															"nativeSrc": "6152:86:5",
															"nodeType": "YulExpressionStatement",
															"src": "6152:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed",
												"nativeSrc": "5993:252:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6078:9:5",
														"nodeType": "YulTypedName",
														"src": "6078:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6090:6:5",
														"nodeType": "YulTypedName",
														"src": "6090:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6101:4:5",
														"nodeType": "YulTypedName",
														"src": "6101:4:5",
														"type": ""
													}
												],
												"src": "5993:252:5"
											},
											{
												"body": {
													"nativeSrc": "6347:73:5",
													"nodeType": "YulBlock",
													"src": "6347:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6364:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6364:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6369:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6369:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6357:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6357:6:5"
																},
																"nativeSrc": "6357:19:5",
																"nodeType": "YulFunctionCall",
																"src": "6357:19:5"
															},
															"nativeSrc": "6357:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "6357:19:5"
														},
														{
															"nativeSrc": "6385:29:5",
															"nodeType": "YulAssignment",
															"src": "6385:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6404:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6404:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6409:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6409:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:5"
																},
																"nativeSrc": "6400:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6400:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6385:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6385:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6251:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6319:3:5",
														"nodeType": "YulTypedName",
														"src": "6319:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6324:6:5",
														"nodeType": "YulTypedName",
														"src": "6324:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6335:11:5",
														"nodeType": "YulTypedName",
														"src": "6335:11:5",
														"type": ""
													}
												],
												"src": "6251:169:5"
											},
											{
												"body": {
													"nativeSrc": "6532:64:5",
													"nodeType": "YulBlock",
													"src": "6532:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6554:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6554:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6562:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6562:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6550:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6550:3:5"
																		},
																		"nativeSrc": "6550:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6550:14:5"
																	},
																	{
																		"hexValue": "446561646c696e65206e6f742072656163686564",
																		"kind": "string",
																		"nativeSrc": "6566:22:5",
																		"nodeType": "YulLiteral",
																		"src": "6566:22:5",
																		"type": "",
																		"value": "Deadline not reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6543:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6543:6:5"
																},
																"nativeSrc": "6543:46:5",
																"nodeType": "YulFunctionCall",
																"src": "6543:46:5"
															},
															"nativeSrc": "6543:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "6543:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013",
												"nativeSrc": "6426:170:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6524:6:5",
														"nodeType": "YulTypedName",
														"src": "6524:6:5",
														"type": ""
													}
												],
												"src": "6426:170:5"
											},
											{
												"body": {
													"nativeSrc": "6748:220:5",
													"nodeType": "YulBlock",
													"src": "6748:220:5",
													"statements": [
														{
															"nativeSrc": "6758:74:5",
															"nodeType": "YulAssignment",
															"src": "6758:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6824:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6824:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6765:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6765:58:5"
																},
																"nativeSrc": "6765:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6765:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6758:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6758:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6930:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6930:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013",
																	"nativeSrc": "6841:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6841:88:5"
																},
																"nativeSrc": "6841:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6841:93:5"
															},
															"nativeSrc": "6841:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6841:93:5"
														},
														{
															"nativeSrc": "6943:19:5",
															"nodeType": "YulAssignment",
															"src": "6943:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6954:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6954:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6959:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6959:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6950:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6950:3:5"
																},
																"nativeSrc": "6950:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6950:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6943:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6943:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6602:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6736:3:5",
														"nodeType": "YulTypedName",
														"src": "6736:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6744:3:5",
														"nodeType": "YulTypedName",
														"src": "6744:3:5",
														"type": ""
													}
												],
												"src": "6602:366:5"
											},
											{
												"body": {
													"nativeSrc": "7145:248:5",
													"nodeType": "YulBlock",
													"src": "7145:248:5",
													"statements": [
														{
															"nativeSrc": "7155:26:5",
															"nodeType": "YulAssignment",
															"src": "7155:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7167:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7167:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7178:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7178:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7163:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7163:3:5"
																},
																"nativeSrc": "7163:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7163:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7155:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7155:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7202:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7202:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7213:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7213:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7198:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7198:3:5"
																		},
																		"nativeSrc": "7198:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7198:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7221:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7221:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7227:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7227:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7217:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7217:3:5"
																		},
																		"nativeSrc": "7217:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7217:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7191:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7191:6:5"
																},
																"nativeSrc": "7191:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7191:47:5"
															},
															"nativeSrc": "7191:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7191:47:5"
														},
														{
															"nativeSrc": "7247:139:5",
															"nodeType": "YulAssignment",
															"src": "7247:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7381:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7381:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7255:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7255:124:5"
																},
																"nativeSrc": "7255:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7255:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7247:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7247:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6974:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7125:9:5",
														"nodeType": "YulTypedName",
														"src": "7125:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7140:4:5",
														"nodeType": "YulTypedName",
														"src": "7140:4:5",
														"type": ""
													}
												],
												"src": "6974:419:5"
											},
											{
												"body": {
													"nativeSrc": "7505:57:5",
													"nodeType": "YulBlock",
													"src": "7505:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7527:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7527:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7535:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7535:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7523:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7523:3:5"
																		},
																		"nativeSrc": "7523:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7523:14:5"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b65",
																		"kind": "string",
																		"nativeSrc": "7539:15:5",
																		"nodeType": "YulLiteral",
																		"src": "7539:15:5",
																		"type": "",
																		"value": "Invalid stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7516:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7516:6:5"
																},
																"nativeSrc": "7516:39:5",
																"nodeType": "YulFunctionCall",
																"src": "7516:39:5"
															},
															"nativeSrc": "7516:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "7516:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc",
												"nativeSrc": "7399:163:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7497:6:5",
														"nodeType": "YulTypedName",
														"src": "7497:6:5",
														"type": ""
													}
												],
												"src": "7399:163:5"
											},
											{
												"body": {
													"nativeSrc": "7714:220:5",
													"nodeType": "YulBlock",
													"src": "7714:220:5",
													"statements": [
														{
															"nativeSrc": "7724:74:5",
															"nodeType": "YulAssignment",
															"src": "7724:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7790:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7790:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7795:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7795:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7731:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "7731:58:5"
																},
																"nativeSrc": "7731:67:5",
																"nodeType": "YulFunctionCall",
																"src": "7731:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7724:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7724:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7896:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7896:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc",
																	"nativeSrc": "7807:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "7807:88:5"
																},
																"nativeSrc": "7807:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7807:93:5"
															},
															"nativeSrc": "7807:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "7807:93:5"
														},
														{
															"nativeSrc": "7909:19:5",
															"nodeType": "YulAssignment",
															"src": "7909:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7920:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7920:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7925:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7925:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7916:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:5"
																},
																"nativeSrc": "7916:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7916:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7909:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7909:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7568:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7702:3:5",
														"nodeType": "YulTypedName",
														"src": "7702:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7710:3:5",
														"nodeType": "YulTypedName",
														"src": "7710:3:5",
														"type": ""
													}
												],
												"src": "7568:366:5"
											},
											{
												"body": {
													"nativeSrc": "8111:248:5",
													"nodeType": "YulBlock",
													"src": "8111:248:5",
													"statements": [
														{
															"nativeSrc": "8121:26:5",
															"nodeType": "YulAssignment",
															"src": "8121:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8133:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8133:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8144:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8144:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8129:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8129:3:5"
																},
																"nativeSrc": "8129:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8129:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8121:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8121:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8168:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8168:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8179:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8179:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8164:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:5"
																		},
																		"nativeSrc": "8164:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8164:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8187:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8187:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8193:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8193:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8183:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:5"
																		},
																		"nativeSrc": "8183:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8183:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8157:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8157:6:5"
																},
																"nativeSrc": "8157:47:5",
																"nodeType": "YulFunctionCall",
																"src": "8157:47:5"
															},
															"nativeSrc": "8157:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "8157:47:5"
														},
														{
															"nativeSrc": "8213:139:5",
															"nodeType": "YulAssignment",
															"src": "8213:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8347:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8347:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8221:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "8221:124:5"
																},
																"nativeSrc": "8221:131:5",
																"nodeType": "YulFunctionCall",
																"src": "8221:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8213:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8213:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7940:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8091:9:5",
														"nodeType": "YulTypedName",
														"src": "8091:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8106:4:5",
														"nodeType": "YulTypedName",
														"src": "8106:4:5",
														"type": ""
													}
												],
												"src": "7940:419:5"
											},
											{
												"body": {
													"nativeSrc": "8519:288:5",
													"nodeType": "YulBlock",
													"src": "8519:288:5",
													"statements": [
														{
															"nativeSrc": "8529:26:5",
															"nodeType": "YulAssignment",
															"src": "8529:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8541:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8541:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8552:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8552:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8537:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8537:3:5"
																},
																"nativeSrc": "8537:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8537:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8529:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8529:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8609:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8609:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8622:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8622:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8633:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8633:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8618:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8618:3:5"
																		},
																		"nativeSrc": "8618:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8618:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8565:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8565:43:5"
																},
																"nativeSrc": "8565:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8565:71:5"
															},
															"nativeSrc": "8565:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8565:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8690:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8690:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8703:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8703:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8714:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8714:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8699:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:5"
																		},
																		"nativeSrc": "8699:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8699:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8646:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8646:43:5"
																},
																"nativeSrc": "8646:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8646:72:5"
															},
															"nativeSrc": "8646:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8646:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8772:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8772:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8785:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8785:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8796:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8796:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8781:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8781:3:5"
																		},
																		"nativeSrc": "8781:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8781:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8728:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8728:43:5"
																},
																"nativeSrc": "8728:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8728:72:5"
															},
															"nativeSrc": "8728:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8728:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8365:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8475:9:5",
														"nodeType": "YulTypedName",
														"src": "8475:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8487:6:5",
														"nodeType": "YulTypedName",
														"src": "8487:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8495:6:5",
														"nodeType": "YulTypedName",
														"src": "8495:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8503:6:5",
														"nodeType": "YulTypedName",
														"src": "8503:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8514:4:5",
														"nodeType": "YulTypedName",
														"src": "8514:4:5",
														"type": ""
													}
												],
												"src": "8365:442:5"
											},
											{
												"body": {
													"nativeSrc": "8876:80:5",
													"nodeType": "YulBlock",
													"src": "8876:80:5",
													"statements": [
														{
															"nativeSrc": "8886:22:5",
															"nodeType": "YulAssignment",
															"src": "8886:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8901:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8901:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8895:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:5:5"
																},
																"nativeSrc": "8895:13:5",
																"nodeType": "YulFunctionCall",
																"src": "8895:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8886:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8886:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8944:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8944:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "8917:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "8917:26:5"
																},
																"nativeSrc": "8917:33:5",
																"nodeType": "YulFunctionCall",
																"src": "8917:33:5"
															},
															"nativeSrc": "8917:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "8917:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "8813:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8854:6:5",
														"nodeType": "YulTypedName",
														"src": "8854:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8862:3:5",
														"nodeType": "YulTypedName",
														"src": "8862:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8870:5:5",
														"nodeType": "YulTypedName",
														"src": "8870:5:5",
														"type": ""
													}
												],
												"src": "8813:143:5"
											},
											{
												"body": {
													"nativeSrc": "9039:274:5",
													"nodeType": "YulBlock",
													"src": "9039:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9085:83:5",
																"nodeType": "YulBlock",
																"src": "9085:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9087:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "9087:77:5"
																			},
																			"nativeSrc": "9087:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9087:79:5"
																		},
																		"nativeSrc": "9087:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9087:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9060:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9060:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9069:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9069:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9056:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9056:3:5"
																		},
																		"nativeSrc": "9056:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9056:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9081:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9081:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9052:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9052:3:5"
																},
																"nativeSrc": "9052:32:5",
																"nodeType": "YulFunctionCall",
																"src": "9052:32:5"
															},
															"nativeSrc": "9049:119:5",
															"nodeType": "YulIf",
															"src": "9049:119:5"
														},
														{
															"nativeSrc": "9178:128:5",
															"nodeType": "YulBlock",
															"src": "9178:128:5",
															"statements": [
																{
																	"nativeSrc": "9193:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9193:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9207:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9197:6:5",
																			"nodeType": "YulTypedName",
																			"src": "9197:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9222:74:5",
																	"nodeType": "YulAssignment",
																	"src": "9222:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9268:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "9268:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9279:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "9279:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9264:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9264:3:5"
																				},
																				"nativeSrc": "9264:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9264:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9288:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9288:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "9232:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "9232:31:5"
																		},
																		"nativeSrc": "9232:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9232:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9222:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9222:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8962:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:5",
														"nodeType": "YulTypedName",
														"src": "9009:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:5",
														"nodeType": "YulTypedName",
														"src": "9020:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:5",
														"nodeType": "YulTypedName",
														"src": "9032:6:5",
														"type": ""
													}
												],
												"src": "8962:351:5"
											},
											{
												"body": {
													"nativeSrc": "9425:114:5",
													"nodeType": "YulBlock",
													"src": "9425:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9447:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9447:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9455:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9455:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9443:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9443:3:5"
																		},
																		"nativeSrc": "9443:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9443:14:5"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e46",
																		"kind": "string",
																		"nativeSrc": "9459:34:5",
																		"nodeType": "YulLiteral",
																		"src": "9459:34:5",
																		"type": "",
																		"value": "You are not the owner of this NF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9436:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9436:6:5"
																},
																"nativeSrc": "9436:58:5",
																"nodeType": "YulFunctionCall",
																"src": "9436:58:5"
															},
															"nativeSrc": "9436:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "9436:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9515:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9515:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9523:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9523:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9511:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9511:3:5"
																		},
																		"nativeSrc": "9511:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9511:15:5"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nativeSrc": "9528:3:5",
																		"nodeType": "YulLiteral",
																		"src": "9528:3:5",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9504:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9504:6:5"
																},
																"nativeSrc": "9504:28:5",
																"nodeType": "YulFunctionCall",
																"src": "9504:28:5"
															},
															"nativeSrc": "9504:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "9504:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
												"nativeSrc": "9319:220:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9417:6:5",
														"nodeType": "YulTypedName",
														"src": "9417:6:5",
														"type": ""
													}
												],
												"src": "9319:220:5"
											},
											{
												"body": {
													"nativeSrc": "9691:220:5",
													"nodeType": "YulBlock",
													"src": "9691:220:5",
													"statements": [
														{
															"nativeSrc": "9701:74:5",
															"nodeType": "YulAssignment",
															"src": "9701:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9767:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9767:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9772:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9772:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9708:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "9708:58:5"
																},
																"nativeSrc": "9708:67:5",
																"nodeType": "YulFunctionCall",
																"src": "9708:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9701:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9701:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9873:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9873:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																	"nativeSrc": "9784:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "9784:88:5"
																},
																"nativeSrc": "9784:93:5",
																"nodeType": "YulFunctionCall",
																"src": "9784:93:5"
															},
															"nativeSrc": "9784:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "9784:93:5"
														},
														{
															"nativeSrc": "9886:19:5",
															"nodeType": "YulAssignment",
															"src": "9886:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9897:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9897:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9902:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9902:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9893:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:3:5"
																},
																"nativeSrc": "9893:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9893:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9886:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9886:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9545:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9679:3:5",
														"nodeType": "YulTypedName",
														"src": "9679:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9687:3:5",
														"nodeType": "YulTypedName",
														"src": "9687:3:5",
														"type": ""
													}
												],
												"src": "9545:366:5"
											},
											{
												"body": {
													"nativeSrc": "10088:248:5",
													"nodeType": "YulBlock",
													"src": "10088:248:5",
													"statements": [
														{
															"nativeSrc": "10098:26:5",
															"nodeType": "YulAssignment",
															"src": "10098:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10110:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10110:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10121:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10121:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10106:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10106:3:5"
																},
																"nativeSrc": "10106:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10106:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10098:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10098:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10145:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10145:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10156:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10156:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10141:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10141:3:5"
																		},
																		"nativeSrc": "10141:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10141:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10164:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10164:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10170:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10170:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10160:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10160:3:5"
																		},
																		"nativeSrc": "10160:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10160:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10134:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10134:6:5"
																},
																"nativeSrc": "10134:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10134:47:5"
															},
															"nativeSrc": "10134:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10134:47:5"
														},
														{
															"nativeSrc": "10190:139:5",
															"nodeType": "YulAssignment",
															"src": "10190:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10324:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10324:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10198:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10198:124:5"
																},
																"nativeSrc": "10198:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10198:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10190:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10190:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9917:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10068:9:5",
														"nodeType": "YulTypedName",
														"src": "10068:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10083:4:5",
														"nodeType": "YulTypedName",
														"src": "10083:4:5",
														"type": ""
													}
												],
												"src": "9917:419:5"
											},
											{
												"body": {
													"nativeSrc": "10389:32:5",
													"nodeType": "YulBlock",
													"src": "10389:32:5",
													"statements": [
														{
															"nativeSrc": "10399:16:5",
															"nodeType": "YulAssignment",
															"src": "10399:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "10410:5:5",
																"nodeType": "YulIdentifier",
																"src": "10410:5:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "10399:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "10399:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "10342:79:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10371:5:5",
														"nodeType": "YulTypedName",
														"src": "10371:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "10381:7:5",
														"nodeType": "YulTypedName",
														"src": "10381:7:5",
														"type": ""
													}
												],
												"src": "10342:79:5"
											},
											{
												"body": {
													"nativeSrc": "10510:74:5",
													"nodeType": "YulBlock",
													"src": "10510:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10527:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10527:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10570:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "10570:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "10552:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "10552:17:5"
																				},
																				"nativeSrc": "10552:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10552:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "10532:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "10532:19:5"
																		},
																		"nativeSrc": "10532:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10532:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10520:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10520:6:5"
																},
																"nativeSrc": "10520:58:5",
																"nodeType": "YulFunctionCall",
																"src": "10520:58:5"
															},
															"nativeSrc": "10520:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "10520:58:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "10427:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10498:5:5",
														"nodeType": "YulTypedName",
														"src": "10498:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10505:3:5",
														"nodeType": "YulTypedName",
														"src": "10505:3:5",
														"type": ""
													}
												],
												"src": "10427:157:5"
											},
											{
												"body": {
													"nativeSrc": "10632:52:5",
													"nodeType": "YulBlock",
													"src": "10632:52:5",
													"statements": [
														{
															"nativeSrc": "10642:35:5",
															"nodeType": "YulAssignment",
															"src": "10642:35:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10667:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10667:2:5",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10671:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10671:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "10663:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10663:3:5"
																},
																"nativeSrc": "10663:14:5",
																"nodeType": "YulFunctionCall",
																"src": "10663:14:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10642:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "10642:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "10590:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10613:5:5",
														"nodeType": "YulTypedName",
														"src": "10613:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10623:8:5",
														"nodeType": "YulTypedName",
														"src": "10623:8:5",
														"type": ""
													}
												],
												"src": "10590:94:5"
											},
											{
												"body": {
													"nativeSrc": "10737:47:5",
													"nodeType": "YulBlock",
													"src": "10737:47:5",
													"statements": [
														{
															"nativeSrc": "10747:31:5",
															"nodeType": "YulAssignment",
															"src": "10747:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10772:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10772:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "10758:13:5",
																	"nodeType": "YulIdentifier",
																	"src": "10758:13:5"
																},
																"nativeSrc": "10758:20:5",
																"nodeType": "YulFunctionCall",
																"src": "10758:20:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "10747:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "10747:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "10690:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10719:5:5",
														"nodeType": "YulTypedName",
														"src": "10719:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "10729:7:5",
														"nodeType": "YulTypedName",
														"src": "10729:7:5",
														"type": ""
													}
												],
												"src": "10690:94:5"
											},
											{
												"body": {
													"nativeSrc": "10837:53:5",
													"nodeType": "YulBlock",
													"src": "10837:53:5",
													"statements": [
														{
															"nativeSrc": "10847:37:5",
															"nodeType": "YulAssignment",
															"src": "10847:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10878:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10878:5:5"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "10858:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "10858:19:5"
																},
																"nativeSrc": "10858:26:5",
																"nodeType": "YulFunctionCall",
																"src": "10858:26:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "10847:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "10847:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "10790:100:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10819:5:5",
														"nodeType": "YulTypedName",
														"src": "10819:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "10829:7:5",
														"nodeType": "YulTypedName",
														"src": "10829:7:5",
														"type": ""
													}
												],
												"src": "10790:100:5"
											},
											{
												"body": {
													"nativeSrc": "10979:74:5",
													"nodeType": "YulBlock",
													"src": "10979:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10996:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10996:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11039:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "11039:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "11021:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "11021:17:5"
																				},
																				"nativeSrc": "11021:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11021:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "11001:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "11001:19:5"
																		},
																		"nativeSrc": "11001:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11001:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10989:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10989:6:5"
																},
																"nativeSrc": "10989:58:5",
																"nodeType": "YulFunctionCall",
																"src": "10989:58:5"
															},
															"nativeSrc": "10989:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "10989:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "10896:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10967:5:5",
														"nodeType": "YulTypedName",
														"src": "10967:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10974:3:5",
														"nodeType": "YulTypedName",
														"src": "10974:3:5",
														"type": ""
													}
												],
												"src": "10896:157:5"
											},
											{
												"body": {
													"nativeSrc": "11231:366:5",
													"nodeType": "YulBlock",
													"src": "11231:366:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11304:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11304:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11313:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11313:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "11242:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "11242:61:5"
																},
																"nativeSrc": "11242:75:5",
																"nodeType": "YulFunctionCall",
																"src": "11242:75:5"
															},
															"nativeSrc": "11242:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "11242:75:5"
														},
														{
															"nativeSrc": "11326:19:5",
															"nodeType": "YulAssignment",
															"src": "11326:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11337:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11337:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11342:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11342:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11333:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11333:3:5"
																},
																"nativeSrc": "11333:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11333:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11326:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11326:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11417:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11417:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11426:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11426:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "11355:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "11355:61:5"
																},
																"nativeSrc": "11355:75:5",
																"nodeType": "YulFunctionCall",
																"src": "11355:75:5"
															},
															"nativeSrc": "11355:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "11355:75:5"
														},
														{
															"nativeSrc": "11439:19:5",
															"nodeType": "YulAssignment",
															"src": "11439:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11450:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11450:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11455:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11455:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11446:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11446:3:5"
																},
																"nativeSrc": "11446:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11446:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11439:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11439:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11530:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11530:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11539:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "11468:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "11468:61:5"
																},
																"nativeSrc": "11468:75:5",
																"nodeType": "YulFunctionCall",
																"src": "11468:75:5"
															},
															"nativeSrc": "11468:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "11468:75:5"
														},
														{
															"nativeSrc": "11552:19:5",
															"nodeType": "YulAssignment",
															"src": "11552:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11563:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11563:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11568:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11568:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11559:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11559:3:5"
																},
																"nativeSrc": "11559:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11559:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11552:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11552:3:5"
																}
															]
														},
														{
															"nativeSrc": "11581:10:5",
															"nodeType": "YulAssignment",
															"src": "11581:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "11588:3:5",
																"nodeType": "YulIdentifier",
																"src": "11588:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11581:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11581:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11059:538:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11194:3:5",
														"nodeType": "YulTypedName",
														"src": "11194:3:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11200:6:5",
														"nodeType": "YulTypedName",
														"src": "11200:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11208:6:5",
														"nodeType": "YulTypedName",
														"src": "11208:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11216:6:5",
														"nodeType": "YulTypedName",
														"src": "11216:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11227:3:5",
														"nodeType": "YulTypedName",
														"src": "11227:3:5",
														"type": ""
													}
												],
												"src": "11059:538:5"
											},
											{
												"body": {
													"nativeSrc": "11631:152:5",
													"nodeType": "YulBlock",
													"src": "11631:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11648:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11648:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11651:77:5",
																		"nodeType": "YulLiteral",
																		"src": "11651:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11641:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11641:6:5"
																},
																"nativeSrc": "11641:88:5",
																"nodeType": "YulFunctionCall",
																"src": "11641:88:5"
															},
															"nativeSrc": "11641:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "11641:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11745:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11745:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11748:4:5",
																		"nodeType": "YulLiteral",
																		"src": "11748:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11738:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11738:6:5"
																},
																"nativeSrc": "11738:15:5",
																"nodeType": "YulFunctionCall",
																"src": "11738:15:5"
															},
															"nativeSrc": "11738:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "11738:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11769:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11769:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11772:4:5",
																		"nodeType": "YulLiteral",
																		"src": "11772:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11762:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11762:6:5"
																},
																"nativeSrc": "11762:15:5",
																"nodeType": "YulFunctionCall",
																"src": "11762:15:5"
															},
															"nativeSrc": "11762:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "11762:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11603:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "11603:180:5"
											},
											{
												"body": {
													"nativeSrc": "11833:147:5",
													"nodeType": "YulBlock",
													"src": "11833:147:5",
													"statements": [
														{
															"nativeSrc": "11843:25:5",
															"nodeType": "YulAssignment",
															"src": "11843:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11866:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "11866:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11848:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "11848:17:5"
																},
																"nativeSrc": "11848:20:5",
																"nodeType": "YulFunctionCall",
																"src": "11848:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11843:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "11843:1:5"
																}
															]
														},
														{
															"nativeSrc": "11877:25:5",
															"nodeType": "YulAssignment",
															"src": "11877:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11900:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "11900:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11882:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "11882:17:5"
																},
																"nativeSrc": "11882:20:5",
																"nodeType": "YulFunctionCall",
																"src": "11882:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11877:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "11877:1:5"
																}
															]
														},
														{
															"nativeSrc": "11911:16:5",
															"nodeType": "YulAssignment",
															"src": "11911:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11922:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "11922:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11925:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "11925:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11918:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11918:3:5"
																},
																"nativeSrc": "11918:9:5",
																"nodeType": "YulFunctionCall",
																"src": "11918:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11911:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11911:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11951:22:5",
																"nodeType": "YulBlock",
																"src": "11951:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11953:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "11953:16:5"
																			},
																			"nativeSrc": "11953:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "11953:18:5"
																		},
																		"nativeSrc": "11953:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "11953:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11943:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "11943:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11946:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11946:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11940:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "11940:2:5"
																},
																"nativeSrc": "11940:10:5",
																"nodeType": "YulFunctionCall",
																"src": "11940:10:5"
															},
															"nativeSrc": "11937:36:5",
															"nodeType": "YulIf",
															"src": "11937:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11789:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11820:1:5",
														"nodeType": "YulTypedName",
														"src": "11820:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11823:1:5",
														"nodeType": "YulTypedName",
														"src": "11823:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11829:3:5",
														"nodeType": "YulTypedName",
														"src": "11829:3:5",
														"type": ""
													}
												],
												"src": "11789:191:5"
											},
											{
												"body": {
													"nativeSrc": "12051:53:5",
													"nodeType": "YulBlock",
													"src": "12051:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12068:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12068:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12091:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12091:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "12073:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "12073:17:5"
																		},
																		"nativeSrc": "12073:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12073:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12061:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12061:6:5"
																},
																"nativeSrc": "12061:37:5",
																"nodeType": "YulFunctionCall",
																"src": "12061:37:5"
															},
															"nativeSrc": "12061:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "12061:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "11986:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12039:5:5",
														"nodeType": "YulTypedName",
														"src": "12039:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12046:3:5",
														"nodeType": "YulTypedName",
														"src": "12046:3:5",
														"type": ""
													}
												],
												"src": "11986:118:5"
											},
											{
												"body": {
													"nativeSrc": "12292:371:5",
													"nodeType": "YulBlock",
													"src": "12292:371:5",
													"statements": [
														{
															"nativeSrc": "12302:27:5",
															"nodeType": "YulAssignment",
															"src": "12302:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12314:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "12314:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12325:3:5",
																		"nodeType": "YulLiteral",
																		"src": "12325:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12310:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12310:3:5"
																},
																"nativeSrc": "12310:19:5",
																"nodeType": "YulFunctionCall",
																"src": "12310:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12302:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "12302:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12383:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12383:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12396:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12396:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12407:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12407:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12392:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12392:3:5"
																		},
																		"nativeSrc": "12392:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12392:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12339:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12339:43:5"
																},
																"nativeSrc": "12339:71:5",
																"nodeType": "YulFunctionCall",
																"src": "12339:71:5"
															},
															"nativeSrc": "12339:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "12339:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12464:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12464:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12477:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12488:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12488:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:5"
																		},
																		"nativeSrc": "12473:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12473:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12420:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12420:43:5"
																},
																"nativeSrc": "12420:72:5",
																"nodeType": "YulFunctionCall",
																"src": "12420:72:5"
															},
															"nativeSrc": "12420:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "12420:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12546:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12546:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12559:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12559:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12570:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12570:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12555:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12555:3:5"
																		},
																		"nativeSrc": "12555:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12555:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12502:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12502:43:5"
																},
																"nativeSrc": "12502:72:5",
																"nodeType": "YulFunctionCall",
																"src": "12502:72:5"
															},
															"nativeSrc": "12502:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "12502:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12628:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12628:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12641:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "12641:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12652:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12652:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12637:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12637:3:5"
																		},
																		"nativeSrc": "12637:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12637:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12584:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "12584:43:5"
																},
																"nativeSrc": "12584:72:5",
																"nodeType": "YulFunctionCall",
																"src": "12584:72:5"
															},
															"nativeSrc": "12584:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "12584:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12110:553:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12240:9:5",
														"nodeType": "YulTypedName",
														"src": "12240:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12252:6:5",
														"nodeType": "YulTypedName",
														"src": "12252:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12260:6:5",
														"nodeType": "YulTypedName",
														"src": "12260:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12268:6:5",
														"nodeType": "YulTypedName",
														"src": "12268:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12276:6:5",
														"nodeType": "YulTypedName",
														"src": "12276:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12287:4:5",
														"nodeType": "YulTypedName",
														"src": "12287:4:5",
														"type": ""
													}
												],
												"src": "12110:553:5"
											},
											{
												"body": {
													"nativeSrc": "12775:119:5",
													"nodeType": "YulBlock",
													"src": "12775:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12797:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12797:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12805:1:5",
																				"nodeType": "YulLiteral",
																				"src": "12805:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12793:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12793:3:5"
																		},
																		"nativeSrc": "12793:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12793:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "12809:34:5",
																		"nodeType": "YulLiteral",
																		"src": "12809:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12786:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12786:6:5"
																},
																"nativeSrc": "12786:58:5",
																"nodeType": "YulFunctionCall",
																"src": "12786:58:5"
															},
															"nativeSrc": "12786:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "12786:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12865:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12865:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12873:2:5",
																				"nodeType": "YulLiteral",
																				"src": "12873:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12861:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12861:3:5"
																		},
																		"nativeSrc": "12861:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12861:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "12878:8:5",
																		"nodeType": "YulLiteral",
																		"src": "12878:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12854:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12854:6:5"
																},
																"nativeSrc": "12854:33:5",
																"nodeType": "YulFunctionCall",
																"src": "12854:33:5"
															},
															"nativeSrc": "12854:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "12854:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "12669:225:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12767:6:5",
														"nodeType": "YulTypedName",
														"src": "12767:6:5",
														"type": ""
													}
												],
												"src": "12669:225:5"
											},
											{
												"body": {
													"nativeSrc": "13046:220:5",
													"nodeType": "YulBlock",
													"src": "13046:220:5",
													"statements": [
														{
															"nativeSrc": "13056:74:5",
															"nodeType": "YulAssignment",
															"src": "13056:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13122:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13122:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13127:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13127:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13063:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "13063:58:5"
																},
																"nativeSrc": "13063:67:5",
																"nodeType": "YulFunctionCall",
																"src": "13063:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13056:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13056:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13228:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13228:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "13139:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "13139:88:5"
																},
																"nativeSrc": "13139:93:5",
																"nodeType": "YulFunctionCall",
																"src": "13139:93:5"
															},
															"nativeSrc": "13139:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "13139:93:5"
														},
														{
															"nativeSrc": "13241:19:5",
															"nodeType": "YulAssignment",
															"src": "13241:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13252:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13252:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13257:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13257:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13248:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13248:3:5"
																},
																"nativeSrc": "13248:12:5",
																"nodeType": "YulFunctionCall",
																"src": "13248:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13241:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13241:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12900:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13034:3:5",
														"nodeType": "YulTypedName",
														"src": "13034:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13042:3:5",
														"nodeType": "YulTypedName",
														"src": "13042:3:5",
														"type": ""
													}
												],
												"src": "12900:366:5"
											},
											{
												"body": {
													"nativeSrc": "13443:248:5",
													"nodeType": "YulBlock",
													"src": "13443:248:5",
													"statements": [
														{
															"nativeSrc": "13453:26:5",
															"nodeType": "YulAssignment",
															"src": "13453:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13465:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "13465:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13476:2:5",
																		"nodeType": "YulLiteral",
																		"src": "13476:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13461:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13461:3:5"
																},
																"nativeSrc": "13461:18:5",
																"nodeType": "YulFunctionCall",
																"src": "13461:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13453:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13453:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13500:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13500:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13511:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13511:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13496:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13496:3:5"
																		},
																		"nativeSrc": "13496:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13496:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13519:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "13519:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13525:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "13525:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13515:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13515:3:5"
																		},
																		"nativeSrc": "13515:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13515:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13489:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13489:6:5"
																},
																"nativeSrc": "13489:47:5",
																"nodeType": "YulFunctionCall",
																"src": "13489:47:5"
															},
															"nativeSrc": "13489:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "13489:47:5"
														},
														{
															"nativeSrc": "13545:139:5",
															"nodeType": "YulAssignment",
															"src": "13545:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13679:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "13679:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13553:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "13553:124:5"
																},
																"nativeSrc": "13553:131:5",
																"nodeType": "YulFunctionCall",
																"src": "13553:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13545:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13545:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13272:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13423:9:5",
														"nodeType": "YulTypedName",
														"src": "13423:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13438:4:5",
														"nodeType": "YulTypedName",
														"src": "13438:4:5",
														"type": ""
													}
												],
												"src": "13272:419:5"
											},
											{
												"body": {
													"nativeSrc": "13803:76:5",
													"nodeType": "YulBlock",
													"src": "13803:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13825:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "13825:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13833:1:5",
																				"nodeType": "YulLiteral",
																				"src": "13833:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13821:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "13821:3:5"
																		},
																		"nativeSrc": "13821:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "13821:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "13837:34:5",
																		"nodeType": "YulLiteral",
																		"src": "13837:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13814:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13814:6:5"
																},
																"nativeSrc": "13814:58:5",
																"nodeType": "YulFunctionCall",
																"src": "13814:58:5"
															},
															"nativeSrc": "13814:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "13814:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "13697:182:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13795:6:5",
														"nodeType": "YulTypedName",
														"src": "13795:6:5",
														"type": ""
													}
												],
												"src": "13697:182:5"
											},
											{
												"body": {
													"nativeSrc": "14031:220:5",
													"nodeType": "YulBlock",
													"src": "14031:220:5",
													"statements": [
														{
															"nativeSrc": "14041:74:5",
															"nodeType": "YulAssignment",
															"src": "14041:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14107:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14107:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14112:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14112:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14048:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "14048:58:5"
																},
																"nativeSrc": "14048:67:5",
																"nodeType": "YulFunctionCall",
																"src": "14048:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14041:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14041:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14213:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14213:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "14124:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "14124:88:5"
																},
																"nativeSrc": "14124:93:5",
																"nodeType": "YulFunctionCall",
																"src": "14124:93:5"
															},
															"nativeSrc": "14124:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "14124:93:5"
														},
														{
															"nativeSrc": "14226:19:5",
															"nodeType": "YulAssignment",
															"src": "14226:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14237:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "14237:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14242:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14242:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14233:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14233:3:5"
																},
																"nativeSrc": "14233:12:5",
																"nodeType": "YulFunctionCall",
																"src": "14233:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14226:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14226:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13885:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14019:3:5",
														"nodeType": "YulTypedName",
														"src": "14019:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14027:3:5",
														"nodeType": "YulTypedName",
														"src": "14027:3:5",
														"type": ""
													}
												],
												"src": "13885:366:5"
											},
											{
												"body": {
													"nativeSrc": "14428:248:5",
													"nodeType": "YulBlock",
													"src": "14428:248:5",
													"statements": [
														{
															"nativeSrc": "14438:26:5",
															"nodeType": "YulAssignment",
															"src": "14438:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14450:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "14450:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14461:2:5",
																		"nodeType": "YulLiteral",
																		"src": "14461:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14446:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14446:3:5"
																},
																"nativeSrc": "14446:18:5",
																"nodeType": "YulFunctionCall",
																"src": "14446:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14438:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14438:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14485:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14485:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14496:1:5",
																				"nodeType": "YulLiteral",
																				"src": "14496:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14481:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14481:3:5"
																		},
																		"nativeSrc": "14481:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14481:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14504:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "14504:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14510:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "14510:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14500:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14500:3:5"
																		},
																		"nativeSrc": "14500:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14500:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14474:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14474:6:5"
																},
																"nativeSrc": "14474:47:5",
																"nodeType": "YulFunctionCall",
																"src": "14474:47:5"
															},
															"nativeSrc": "14474:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "14474:47:5"
														},
														{
															"nativeSrc": "14530:139:5",
															"nodeType": "YulAssignment",
															"src": "14530:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14664:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "14664:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14538:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "14538:124:5"
																},
																"nativeSrc": "14538:131:5",
																"nodeType": "YulFunctionCall",
																"src": "14538:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14530:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "14530:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14257:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14408:9:5",
														"nodeType": "YulTypedName",
														"src": "14408:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14423:4:5",
														"nodeType": "YulTypedName",
														"src": "14423:4:5",
														"type": ""
													}
												],
												"src": "14257:419:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct StakingContract.StakeInfo -> struct StakingContract.StakeInfo\n    function abi_encode_t_struct$_StakeInfo_$288_memory_ptr_to_t_struct$_StakeInfo_$288_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // lockTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_StakeInfo_$288_memory_ptr__to_t_struct$_StakeInfo_$288_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_StakeInfo_$288_memory_ptr_to_t_struct$_StakeInfo_$288_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$228_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$228_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deadline not reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner of this NF\")\n\n        mstore(add(memPtr, 32), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80638da5cb5b1161006f5780638da5cb5b146101665780638fee640714610184578063dd467064146101b7578063ea768123146101d3578063f2fde38b146101f1578063f9be04ca1461020d576100b2565b806308a1eee1146100b6578063568b962a146100d2578063715018a6146100f05780637d515a10146100fa5780637e8d094c1461011857806383a811bf14610148575b5f80fd5b6100d060048036038101906100cb9190610af0565b61022b565b005b6100da61045b565b6040516100e79190610b33565b60405180910390f35b6100f8610461565b005b610102610474565b60405161010f9190610b8b565b60405180910390f35b610132600480360381019061012d9190610af0565b610499565b60405161013f9190610c15565b60405180910390f35b610150610536565b60405161015d9190610b33565b60405180910390f35b61016e61053c565b60405161017b9190610b8b565b60405180910390f35b61019e60048036038101906101999190610af0565b610563565b6040516101ae9493929190610c2e565b60405180910390f35b6101d160048036038101906101cc9190610c9b565b6105ae565b005b6101db61088c565b6040516101e89190610b33565b60405180910390f35b61020b60048036038101906102069190610cf0565b610892565b005b610215610914565b6040516102229190610d76565b60405180910390f35b610233610939565b5f60065f8381526020019081526020015f209050428160030154111561028e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028590610de9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610e51565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b81526004016103a193929190610e6f565b5f604051808303815f87803b1580156103b8575f80fd5b505af11580156103ca573d5f803e3d5ffd5b5050505060065f8381526020019081526020015f205f8082015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182015f9055600282015f9055600382015f905550507fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e816001015460405161044f9190610b33565b60405180910390a15050565b60035481565b610469610939565b6104725f6109b7565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104a1610a7f565b60065f8381526020019081526020015f206040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815250509050919050565b60055481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161061f9190610b33565b602060405180830381865afa15801561063a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065e9190610eb8565b73ffffffffffffffffffffffffffffffffffffffff16146106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90610f53565b60405180910390fd5b5f8133426040516020016106ca93929190610fd6565b6040516020818303038152906040528051906020012090505f4290505f600554600454600354846106fb919061103f565b610705919061103f565b61070f919061103f565b905060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018381526020018281525060065f8581526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015590505060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161081c93929190610e6f565b5f604051808303815f87803b158015610833575f80fd5b505af1158015610845573d5f803e3d5ffd5b505050507fe42732012f91412364b2848d4c8c3d8dd5508e0a5a0f60d6e1de7843145ea5c08333868460405161087e9493929190611081565b60405180910390a150505050565b60045481565b61089a610939565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611134565b60405180910390fd5b610911816109b7565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610941610a78565b73ffffffffffffffffffffffffffffffffffffffff1661095f61053c565b73ffffffffffffffffffffffffffffffffffffffff16146109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac9061119c565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b60405180608001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81525090565b5f80fd5b5f819050919050565b610acf81610abd565b8114610ad9575f80fd5b50565b5f81359050610aea81610ac6565b92915050565b5f60208284031215610b0557610b04610ab9565b5b5f610b1284828501610adc565b91505092915050565b5f819050919050565b610b2d81610b1b565b82525050565b5f602082019050610b465f830184610b24565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7582610b4c565b9050919050565b610b8581610b6b565b82525050565b5f602082019050610b9e5f830184610b7c565b92915050565b610bad81610b6b565b82525050565b610bbc81610b1b565b82525050565b608082015f820151610bd65f850182610ba4565b506020820151610be96020850182610bb3565b506040820151610bfc6040850182610bb3565b506060820151610c0f6060850182610bb3565b50505050565b5f608082019050610c285f830184610bc2565b92915050565b5f608082019050610c415f830187610b7c565b610c4e6020830186610b24565b610c5b6040830185610b24565b610c686060830184610b24565b95945050505050565b610c7a81610b1b565b8114610c84575f80fd5b50565b5f81359050610c9581610c71565b92915050565b5f60208284031215610cb057610caf610ab9565b5b5f610cbd84828501610c87565b91505092915050565b610ccf81610b6b565b8114610cd9575f80fd5b50565b5f81359050610cea81610cc6565b92915050565b5f60208284031215610d0557610d04610ab9565b5b5f610d1284828501610cdc565b91505092915050565b5f819050919050565b5f610d3e610d39610d3484610b4c565b610d1b565b610b4c565b9050919050565b5f610d4f82610d24565b9050919050565b5f610d6082610d45565b9050919050565b610d7081610d56565b82525050565b5f602082019050610d895f830184610d67565b92915050565b5f82825260208201905092915050565b7f446561646c696e65206e6f7420726561636865640000000000000000000000005f82015250565b5f610dd3601483610d8f565b9150610dde82610d9f565b602082019050919050565b5f6020820190508181035f830152610e0081610dc7565b9050919050565b7f496e76616c6964207374616b65000000000000000000000000000000000000005f82015250565b5f610e3b600d83610d8f565b9150610e4682610e07565b602082019050919050565b5f6020820190508181035f830152610e6881610e2f565b9050919050565b5f606082019050610e825f830186610b7c565b610e8f6020830185610b7c565b610e9c6040830184610b24565b949350505050565b5f81519050610eb281610cc6565b92915050565b5f60208284031215610ecd57610ecc610ab9565b5b5f610eda84828501610ea4565b91505092915050565b7f596f7520617265206e6f7420746865206f776e6572206f662074686973204e465f8201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f3d602183610d8f565b9150610f4882610ee3565b604082019050919050565b5f6020820190508181035f830152610f6a81610f31565b9050919050565b5f819050919050565b610f8b610f8682610b1b565b610f71565b82525050565b5f8160601b9050919050565b5f610fa782610f91565b9050919050565b5f610fb882610f9d565b9050919050565b610fd0610fcb82610b6b565b610fae565b82525050565b5f610fe18286610f7a565b602082019150610ff18285610fbf565b6014820191506110018284610f7a565b602082019150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61104982610b1b565b915061105483610b1b565b925082820190508082111561106c5761106b611012565b5b92915050565b61107b81610abd565b82525050565b5f6080820190506110945f830187611072565b6110a16020830186610b7c565b6110ae6040830185610b24565b6110bb6060830184610b24565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61111e602683610d8f565b9150611129826110c4565b604082019050919050565b5f6020820190508181035f83015261114b81611112565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f611186602083610d8f565b915061119182611152565b602082019050919050565b5f6020820190508181035f8301526111b38161117a565b905091905056fea2646970667358221220ac5d46b1aad220b38f1f11e6c10abf2c26213ad0375e46ce96740952435a0b9864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x8FEE6407 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xDD467064 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xEA768123 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xF9BE04CA EQ PUSH2 0x20D JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x8A1EEE1 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x568B962A EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x7D515A10 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7E8D094C EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x83A811BF EQ PUSH2 0x148 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x461 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x939 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP TIMESTAMP DUP2 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x28E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP PUSH32 0xD83C63197E8E676D80AB0122BEBA9A9D20F3828839E9A1D6FE81D242E9CD7E6E DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x469 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x472 PUSH0 PUSH2 0x9B7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4A1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP1 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 CALLER TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE6F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x833 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x845 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0xE42732012F91412364B2848D4C8C3D8DD5508E0A5A0F60D6E1DE7843145EA5C0 DUP4 CALLER DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x87E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x89A PUSH2 0x939 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FF SWAP1 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x911 DUP2 PUSH2 0x9B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x941 PUSH2 0xA78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x95F PUSH2 0x53C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AC SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xACF DUP2 PUSH2 0xABD JUMP JUMPDEST DUP2 EQ PUSH2 0xAD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAEA DUP2 PUSH2 0xAC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB12 DUP5 DUP3 DUP6 ADD PUSH2 0xADC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2D DUP2 PUSH2 0xB1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB46 PUSH0 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB75 DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH0 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBBC DUP2 PUSH2 0xB1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xBD6 PUSH0 DUP6 ADD DUP3 PUSH2 0xBA4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xBE9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xBB3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xBFC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xBB3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC0F PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xBB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC28 PUSH0 DUP4 ADD DUP5 PUSH2 0xBC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC41 PUSH0 DUP4 ADD DUP8 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xC4E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xC5B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xC68 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0xB1B JUMP JUMPDEST DUP2 EQ PUSH2 0xC84 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC95 DUP2 PUSH2 0xC71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB0 JUMPI PUSH2 0xCAF PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCBD DUP5 DUP3 DUP6 ADD PUSH2 0xC87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCCF DUP2 PUSH2 0xB6B JUMP JUMPDEST DUP2 EQ PUSH2 0xCD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCEA DUP2 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD12 DUP5 DUP3 DUP6 ADD PUSH2 0xCDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD3E PUSH2 0xD39 PUSH2 0xD34 DUP5 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD4F DUP3 PUSH2 0xD24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD60 DUP3 PUSH2 0xD45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD70 DUP2 PUSH2 0xD56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD89 PUSH0 DUP4 ADD DUP5 PUSH2 0xD67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446561646C696E65206E6F742072656163686564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDD3 PUSH1 0x14 DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0xDDE DUP3 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE00 DUP2 PUSH2 0xDC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE3B PUSH1 0xD DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0xE46 DUP3 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE68 DUP2 PUSH2 0xE2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE82 PUSH0 DUP4 ADD DUP7 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xE8F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xE9C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEB2 DUP2 PUSH2 0xCC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECD JUMPI PUSH2 0xECC PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEDA DUP5 DUP3 DUP6 ADD PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973204E46 PUSH0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF3D PUSH1 0x21 DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0xF48 DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF6A DUP2 PUSH2 0xF31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B PUSH2 0xF86 DUP3 PUSH2 0xB1B JUMP JUMPDEST PUSH2 0xF71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA7 DUP3 PUSH2 0xF91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB8 DUP3 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD0 PUSH2 0xFCB DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0xFAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFE1 DUP3 DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xFF1 DUP3 DUP6 PUSH2 0xFBF JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1001 DUP3 DUP5 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1049 DUP3 PUSH2 0xB1B JUMP JUMPDEST SWAP2 POP PUSH2 0x1054 DUP4 PUSH2 0xB1B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x106C JUMPI PUSH2 0x106B PUSH2 0x1012 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x107B DUP2 PUSH2 0xABD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1094 PUSH0 DUP4 ADD DUP8 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x10A1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x10AE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x10BB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x111E PUSH1 0x26 DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1129 DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x114B DUP2 PUSH2 0x1112 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1186 PUSH1 0x20 DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP2 POP PUSH2 0x1191 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11B3 DUP2 PUSH2 0x117A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC TSTORE CHAINID 0xB1 0xAA 0xD2 KECCAK256 0xB3 DUP16 0x1F GT 0xE6 0xC1 EXP 0xBF 0x2C 0x26 0x21 GASPRICE 0xD0 CALLDATACOPY MCOPY CHAINID 0xCE SWAP7 PUSH21 0x952435A0B9864736F6C634300081A003300000000 ",
							"sourceMap": "170:1972:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1612:403;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;286:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;249:31:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2021:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;340:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:43:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1032:574;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;313:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;212:31:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1612:403;1094:13:0;:11;:13::i;:::-;1672:23:4::1;1698:6;:15;1705:7;1698:15;;;;;;;;;;;1672:41;;1749:15;1731:5;:14;;;:33;;1723:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1830:1;1807:25;;:5;:11;;;;;;;;;;;;:25;;::::0;1799:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:16;;;;;;;;;;;:29;;;1899:4;1906:16;;;;;;;;;;;1924:5;:13;;;1861:77;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1956:6;:15;1963:7;1956:15;;;;;;;;;;;;1949:22:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:21;1994:5;:13;;;1987:21;;;;;;:::i;:::-;;;;;;;;1662:353;1612:403:::0;:::o;286:21::-;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;249:31:4:-;;;;;;;;;;;;;:::o;2021:119::-;2083:16;;:::i;:::-;2118:6;:15;2125:7;2118:15;;;;;;;;;;;2111:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:119;;;:::o;340:21::-;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;498:43:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1032:574::-;1127:10;1090:47;;:16;;;;;;;;;;;:24;;;1115:7;1090:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;1082:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1186:15;1231:7;1240:10;1252:15;1214:54;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1204:65;;;;;;1186:83;;1279:16;1298:15;1279:34;;1323:16;1371:6;;1362;;1353;;1342:8;:17;;;;:::i;:::-;:26;;;;:::i;:::-;:35;;;;:::i;:::-;1323:54;;1406:50;;;;;;;;1416:10;1406:50;;;;;;1428:7;1406:50;;;;1437:8;1406:50;;;;1447:8;1406:50;;;1388:6;:15;1395:7;1388:15;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1467:16;;;;;;;;;;;:29;;;1497:10;1517:4;1524:7;1467:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1548:51;1560:7;1569:10;1581:7;1590:8;1548:51;;;;;;;;;:::i;:::-;;;;;;;;1072:534;;;1032:574;:::o;313:21::-;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;212:31:4:-;;;;;;;;;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:118::-;1195:24;1213:5;1195:24;:::i;:::-;1190:3;1183:37;1108:118;;:::o;1232:222::-;1325:4;1363:2;1352:9;1348:18;1340:26;;1376:71;1444:1;1433:9;1429:17;1420:6;1376:71;:::i;:::-;1232:222;;;;:::o;1460:126::-;1497:7;1537:42;1530:5;1526:54;1515:65;;1460:126;;;:::o;1592:96::-;1629:7;1658:24;1676:5;1658:24;:::i;:::-;1647:35;;1592:96;;;:::o;1694:118::-;1781:24;1799:5;1781:24;:::i;:::-;1776:3;1769:37;1694:118;;:::o;1818:222::-;1911:4;1949:2;1938:9;1934:18;1926:26;;1962:71;2030:1;2019:9;2015:17;2006:6;1962:71;:::i;:::-;1818:222;;;;:::o;2046:108::-;2123:24;2141:5;2123:24;:::i;:::-;2118:3;2111:37;2046:108;;:::o;2160:::-;2237:24;2255:5;2237:24;:::i;:::-;2232:3;2225:37;2160:108;;:::o;2350:869::-;2499:4;2494:3;2490:14;2587:4;2580:5;2576:16;2570:23;2606:63;2663:4;2658:3;2654:14;2640:12;2606:63;:::i;:::-;2514:165;2764:4;2757:5;2753:16;2747:23;2783:63;2840:4;2835:3;2831:14;2817:12;2783:63;:::i;:::-;2689:167;2942:4;2935:5;2931:16;2925:23;2961:63;3018:4;3013:3;3009:14;2995:12;2961:63;:::i;:::-;2866:168;3120:4;3113:5;3109:16;3103:23;3139:63;3196:4;3191:3;3187:14;3173:12;3139:63;:::i;:::-;3044:168;2468:751;2350:869;;:::o;3225:327::-;3370:4;3408:3;3397:9;3393:19;3385:27;;3422:123;3542:1;3531:9;3527:17;3518:6;3422:123;:::i;:::-;3225:327;;;;:::o;3558:553::-;3735:4;3773:3;3762:9;3758:19;3750:27;;3787:71;3855:1;3844:9;3840:17;3831:6;3787:71;:::i;:::-;3868:72;3936:2;3925:9;3921:18;3912:6;3868:72;:::i;:::-;3950;4018:2;4007:9;4003:18;3994:6;3950:72;:::i;:::-;4032;4100:2;4089:9;4085:18;4076:6;4032:72;:::i;:::-;3558:553;;;;;;;:::o;4117:122::-;4190:24;4208:5;4190:24;:::i;:::-;4183:5;4180:35;4170:63;;4229:1;4226;4219:12;4170:63;4117:122;:::o;4245:139::-;4291:5;4329:6;4316:20;4307:29;;4345:33;4372:5;4345:33;:::i;:::-;4245:139;;;;:::o;4390:329::-;4449:6;4498:2;4486:9;4477:7;4473:23;4469:32;4466:119;;;4504:79;;:::i;:::-;4466:119;4624:1;4649:53;4694:7;4685:6;4674:9;4670:22;4649:53;:::i;:::-;4639:63;;4595:117;4390:329;;;;:::o;4725:122::-;4798:24;4816:5;4798:24;:::i;:::-;4791:5;4788:35;4778:63;;4837:1;4834;4827:12;4778:63;4725:122;:::o;4853:139::-;4899:5;4937:6;4924:20;4915:29;;4953:33;4980:5;4953:33;:::i;:::-;4853:139;;;;:::o;4998:329::-;5057:6;5106:2;5094:9;5085:7;5081:23;5077:32;5074:119;;;5112:79;;:::i;:::-;5074:119;5232:1;5257:53;5302:7;5293:6;5282:9;5278:22;5257:53;:::i;:::-;5247:63;;5203:117;4998:329;;;;:::o;5333:60::-;5361:3;5382:5;5375:12;;5333:60;;;:::o;5399:142::-;5449:9;5482:53;5500:34;5509:24;5527:5;5509:24;:::i;:::-;5500:34;:::i;:::-;5482:53;:::i;:::-;5469:66;;5399:142;;;:::o;5547:126::-;5597:9;5630:37;5661:5;5630:37;:::i;:::-;5617:50;;5547:126;;;:::o;5679:141::-;5744:9;5777:37;5808:5;5777:37;:::i;:::-;5764:50;;5679:141;;;:::o;5826:161::-;5928:52;5974:5;5928:52;:::i;:::-;5923:3;5916:65;5826:161;;:::o;5993:252::-;6101:4;6139:2;6128:9;6124:18;6116:26;;6152:86;6235:1;6224:9;6220:17;6211:6;6152:86;:::i;:::-;5993:252;;;;:::o;6251:169::-;6335:11;6369:6;6364:3;6357:19;6409:4;6404:3;6400:14;6385:29;;6251:169;;;;:::o;6426:170::-;6566:22;6562:1;6554:6;6550:14;6543:46;6426:170;:::o;6602:366::-;6744:3;6765:67;6829:2;6824:3;6765:67;:::i;:::-;6758:74;;6841:93;6930:3;6841:93;:::i;:::-;6959:2;6954:3;6950:12;6943:19;;6602:366;;;:::o;6974:419::-;7140:4;7178:2;7167:9;7163:18;7155:26;;7227:9;7221:4;7217:20;7213:1;7202:9;7198:17;7191:47;7255:131;7381:4;7255:131;:::i;:::-;7247:139;;6974:419;;;:::o;7399:163::-;7539:15;7535:1;7527:6;7523:14;7516:39;7399:163;:::o;7568:366::-;7710:3;7731:67;7795:2;7790:3;7731:67;:::i;:::-;7724:74;;7807:93;7896:3;7807:93;:::i;:::-;7925:2;7920:3;7916:12;7909:19;;7568:366;;;:::o;7940:419::-;8106:4;8144:2;8133:9;8129:18;8121:26;;8193:9;8187:4;8183:20;8179:1;8168:9;8164:17;8157:47;8221:131;8347:4;8221:131;:::i;:::-;8213:139;;7940:419;;;:::o;8365:442::-;8514:4;8552:2;8541:9;8537:18;8529:26;;8565:71;8633:1;8622:9;8618:17;8609:6;8565:71;:::i;:::-;8646:72;8714:2;8703:9;8699:18;8690:6;8646:72;:::i;:::-;8728;8796:2;8785:9;8781:18;8772:6;8728:72;:::i;:::-;8365:442;;;;;;:::o;8813:143::-;8870:5;8901:6;8895:13;8886:22;;8917:33;8944:5;8917:33;:::i;:::-;8813:143;;;;:::o;8962:351::-;9032:6;9081:2;9069:9;9060:7;9056:23;9052:32;9049:119;;;9087:79;;:::i;:::-;9049:119;9207:1;9232:64;9288:7;9279:6;9268:9;9264:22;9232:64;:::i;:::-;9222:74;;9178:128;8962:351;;;;:::o;9319:220::-;9459:34;9455:1;9447:6;9443:14;9436:58;9528:3;9523:2;9515:6;9511:15;9504:28;9319:220;:::o;9545:366::-;9687:3;9708:67;9772:2;9767:3;9708:67;:::i;:::-;9701:74;;9784:93;9873:3;9784:93;:::i;:::-;9902:2;9897:3;9893:12;9886:19;;9545:366;;;:::o;9917:419::-;10083:4;10121:2;10110:9;10106:18;10098:26;;10170:9;10164:4;10160:20;10156:1;10145:9;10141:17;10134:47;10198:131;10324:4;10198:131;:::i;:::-;10190:139;;9917:419;;;:::o;10342:79::-;10381:7;10410:5;10399:16;;10342:79;;;:::o;10427:157::-;10532:45;10552:24;10570:5;10552:24;:::i;:::-;10532:45;:::i;:::-;10527:3;10520:58;10427:157;;:::o;10590:94::-;10623:8;10671:5;10667:2;10663:14;10642:35;;10590:94;;;:::o;10690:::-;10729:7;10758:20;10772:5;10758:20;:::i;:::-;10747:31;;10690:94;;;:::o;10790:100::-;10829:7;10858:26;10878:5;10858:26;:::i;:::-;10847:37;;10790:100;;;:::o;10896:157::-;11001:45;11021:24;11039:5;11021:24;:::i;:::-;11001:45;:::i;:::-;10996:3;10989:58;10896:157;;:::o;11059:538::-;11227:3;11242:75;11313:3;11304:6;11242:75;:::i;:::-;11342:2;11337:3;11333:12;11326:19;;11355:75;11426:3;11417:6;11355:75;:::i;:::-;11455:2;11450:3;11446:12;11439:19;;11468:75;11539:3;11530:6;11468:75;:::i;:::-;11568:2;11563:3;11559:12;11552:19;;11588:3;11581:10;;11059:538;;;;;;:::o;11603:180::-;11651:77;11648:1;11641:88;11748:4;11745:1;11738:15;11772:4;11769:1;11762:15;11789:191;11829:3;11848:20;11866:1;11848:20;:::i;:::-;11843:25;;11882:20;11900:1;11882:20;:::i;:::-;11877:25;;11925:1;11922;11918:9;11911:16;;11946:3;11943:1;11940:10;11937:36;;;11953:18;;:::i;:::-;11937:36;11789:191;;;;:::o;11986:118::-;12073:24;12091:5;12073:24;:::i;:::-;12068:3;12061:37;11986:118;;:::o;12110:553::-;12287:4;12325:3;12314:9;12310:19;12302:27;;12339:71;12407:1;12396:9;12392:17;12383:6;12339:71;:::i;:::-;12420:72;12488:2;12477:9;12473:18;12464:6;12420:72;:::i;:::-;12502;12570:2;12559:9;12555:18;12546:6;12502:72;:::i;:::-;12584;12652:2;12641:9;12637:18;12628:6;12584:72;:::i;:::-;12110:553;;;;;;;:::o;12669:225::-;12809:34;12805:1;12797:6;12793:14;12786:58;12878:8;12873:2;12865:6;12861:15;12854:33;12669:225;:::o;12900:366::-;13042:3;13063:67;13127:2;13122:3;13063:67;:::i;:::-;13056:74;;13139:93;13228:3;13139:93;:::i;:::-;13257:2;13252:3;13248:12;13241:19;;12900:366;;;:::o;13272:419::-;13438:4;13476:2;13465:9;13461:18;13453:26;;13525:9;13519:4;13515:20;13511:1;13500:9;13496:17;13489:47;13553:131;13679:4;13553:131;:::i;:::-;13545:139;;13272:419;;;:::o;13697:182::-;13837:34;13833:1;13825:6;13821:14;13814:58;13697:182;:::o;13885:366::-;14027:3;14048:67;14112:2;14107:3;14048:67;:::i;:::-;14041:74;;14124:93;14213:3;14124:93;:::i;:::-;14242:2;14237:3;14233:12;14226:19;;13885:366;;;:::o;14257:419::-;14423:4;14461:2;14450:9;14446:18;14438:26;;14510:9;14504:4;14500:20;14496:1;14485:9;14481:17;14474:47;14538:131;14664:4;14538:131;:::i;:::-;14530:139;;14257:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "918400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"blackholeAddress()": "2575",
								"burn(bytes32)": "infinite",
								"deltaB()": "2491",
								"deltaD()": "2536",
								"deltaK()": "2448",
								"gameItemContract()": "infinite",
								"getStakeInfo(bytes32)": "infinite",
								"lock(uint256)": "infinite",
								"owner()": "2515",
								"renounceOwnership()": "30435",
								"stakes(bytes32)": "infinite",
								"transferOwnership(address)": "30819"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 2142,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 677,
									"end": 1026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 877,
									"end": 894,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 850,
									"end": 866,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 850,
									"end": 866,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 895,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 850,
									"end": 895,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 895,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 895,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 850,
									"end": 895,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 924,
									"end": 941,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 905,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 905,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 905,
									"end": 941,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 905,
									"end": 941,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 905,
									"end": 941,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 905,
									"end": 941,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 905,
									"end": 941,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 951,
									"end": 957,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 951,
									"end": 967,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 951,
									"end": 967,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 951,
									"end": 967,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 951,
									"end": 967,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 986,
									"end": 993,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 977,
									"end": 983,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 977,
									"end": 993,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 977,
									"end": 993,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 977,
									"end": 993,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 977,
									"end": 993,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1012,
									"end": 1019,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1003,
									"end": 1019,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1019,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1019,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1003,
									"end": 1019,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 677,
									"end": 1026,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1380,
									"end": 1389,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1367,
									"end": 1390,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1363,
									"end": 1396,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1399,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1519,
									"end": 1520,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1600,
									"end": 1607,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1591,
									"end": 1597,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1589,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 1576,
									"end": 1598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1544,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1618,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1739,
									"end": 1746,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1730,
									"end": 1736,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1719,
									"end": 1728,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 1715,
									"end": 1737,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1683,
									"end": 1747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1628,
									"end": 1757,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1796,
									"end": 1798,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1878,
									"end": 1885,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1869,
									"end": 1875,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1876,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1822,
									"end": 1886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1767,
									"end": 1896,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1935,
									"end": 1937,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2017,
									"end": 2024,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2008,
									"end": 2014,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 1993,
									"end": 2015,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1961,
									"end": 2025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1906,
									"end": 2035,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2077,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2157,
									"end": 2164,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2137,
									"end": 2146,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2101,
									"end": 2165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2045,
									"end": 2175,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2142,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac5d46b1aad220b38f1f11e6c10abf2c26213ad0375e46ce96740952435a0b9864736f6c634300081a0033",
									".code": [
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "8FEE6407"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "DD467064"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "EA768123"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "F9BE04CA"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "8A1EEE1"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "568B962A"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "7D515A10"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "7E8D094C"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "83A811BF"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 170,
											"end": 2142,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1612,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1612,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 280,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 249,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 249,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2021,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2021,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2021,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 340,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 340,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 498,
											"end": 541,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 498,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 498,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 498,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1032,
											"end": 1606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1032,
											"end": 1606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 313,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 313,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 243,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 212,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 212,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1713,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1713,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1764,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1731,
											"end": 1745,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1745,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1764,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1764,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1723,
											"end": 1789,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1723,
											"end": 1789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1799,
											"end": 1850,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1799,
											"end": 1850,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1899,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1906,
											"end": 1922,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 1937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1937,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1861,
											"end": 1938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "D83C63197E8E676D80AB0122BEBA9A9D20F3828839E9A1D6FE81D242E9CD7E6E"
										},
										{
											"begin": 1994,
											"end": 1999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1994,
											"end": 2007,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2007,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1987,
											"end": 2008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2008,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 2015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 2015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 307,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 286,
											"end": 307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 280,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2083,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2083,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2099,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2083,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2124,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2132,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2133,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 340,
											"end": 361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 541,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 498,
											"end": 541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 498,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1137,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1137,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1114,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1114,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 1115,
											"end": 1122,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1090,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1090,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1090,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1137,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1137,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1137,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1082,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1082,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1250,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1267,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1214,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1268,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1313,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1313,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1342,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1342,
											"end": 1368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1342,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1342,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1342,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1497,
											"end": 1507,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1531,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1467,
											"end": 1532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "E42732012F91412364B2848D4C8C3D8DD5508E0A5A0F60D6E1DE7843145EA5C0"
										},
										{
											"begin": 1560,
											"end": 1567,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1579,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1598,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1548,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 334,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 313,
											"end": 334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 243,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 243,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 212,
											"end": 243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1108,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1195,
											"end": 1219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1219,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1195,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1193,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1444,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1442,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1376,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1447,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1376,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1586,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1460,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1579,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1530,
											"end": 1535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1592,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1676,
											"end": 1681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1658,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1658,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1688,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1812,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1694,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1799,
											"end": 1804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1781,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1806,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2040,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1818,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2030,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2028,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1962,
											"end": 2033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2033,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1962,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2040,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2040,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2154,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2046,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2141,
											"end": 2146,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2123,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2147,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2123,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2111,
											"end": 2148,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2268,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2160,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2237,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 3219,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2350,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2503,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2490,
											"end": 2504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2585,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2576,
											"end": 2592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2593,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2663,
											"end": 2667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2661,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2606,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2606,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2753,
											"end": 2769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2840,
											"end": 2844,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2838,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2783,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2846,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2783,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2925,
											"end": 2948,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3018,
											"end": 3022,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3013,
											"end": 3016,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3009,
											"end": 3023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2961,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 3034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3124,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3113,
											"end": 3118,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3125,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3126,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3201,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3139,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3202,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3139,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3044,
											"end": 3212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 3219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 3219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 3219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 3219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3552,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3411,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3542,
											"end": 3543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3422,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3545,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3422,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3552,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3552,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3735,
											"end": 3739,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3762,
											"end": 3771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3831,
											"end": 3837,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3787,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3858,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3787,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3934,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3868,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3940,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3868,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3950,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3950,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3950,
											"end": 4022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3950,
											"end": 4022,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3950,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4100,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4032,
											"end": 4104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4104,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4032,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 4111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4117,
											"end": 4239,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4117,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4208,
											"end": 4213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4190,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4190,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4183,
											"end": 4188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4215,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4170,
											"end": 4233,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4231,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4233,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4170,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4117,
											"end": 4239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4117,
											"end": 4239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4384,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4245,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4291,
											"end": 4296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4336,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4372,
											"end": 4377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4345,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4345,
											"end": 4378,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4345,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4384,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4390,
											"end": 4719,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4390,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4486,
											"end": 4495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4484,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4496,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4501,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4585,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4466,
											"end": 4585,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4504,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4504,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4583,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4504,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4585,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4466,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4694,
											"end": 4701,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4683,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4692,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4649,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 4702,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4649,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4639,
											"end": 4702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4639,
											"end": 4702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4595,
											"end": 4712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4390,
											"end": 4719,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4390,
											"end": 4719,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4390,
											"end": 4719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4390,
											"end": 4719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4390,
											"end": 4719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4725,
											"end": 4847,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4725,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4816,
											"end": 4821,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4798,
											"end": 4822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4823,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4778,
											"end": 4841,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4839,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4841,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4778,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4725,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4725,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4992,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4853,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 4904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 4943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4944,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4980,
											"end": 4985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4953,
											"end": 4986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4953,
											"end": 4986,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4953,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4992,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5327,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4998,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5057,
											"end": 5063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5094,
											"end": 5103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5085,
											"end": 5092,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5104,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5077,
											"end": 5109,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5112,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5112,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5191,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5112,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5074,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5302,
											"end": 5309,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5293,
											"end": 5299,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5278,
											"end": 5300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5257,
											"end": 5310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5327,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5393,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5333,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5361,
											"end": 5364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5541,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5399,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5449,
											"end": 5458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5482,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5500,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5509,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5527,
											"end": 5532,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5509,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5533,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5509,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5500,
											"end": 5534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5534,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5500,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5482,
											"end": 5535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5535,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5482,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5469,
											"end": 5535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5547,
											"end": 5673,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5547,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5630,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 5667,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5630,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5547,
											"end": 5673,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5547,
											"end": 5673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5547,
											"end": 5673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5547,
											"end": 5673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5820,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5679,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5808,
											"end": 5813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5777,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5814,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5777,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5987,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5826,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5974,
											"end": 5979,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5928,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5980,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5928,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 5981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5826,
											"end": 5987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 6245,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5993,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6141,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6235,
											"end": 6236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6233,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6220,
											"end": 6237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6217,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6152,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6238,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6152,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 6245,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 6245,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 6245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 6245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5993,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6420,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6251,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6375,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6357,
											"end": 6376,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6409,
											"end": 6413,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6404,
											"end": 6407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6400,
											"end": 6414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6420,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6251,
											"end": 6420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6596,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6426,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6566,
											"end": 6588,
											"name": "PUSH",
											"source": 5,
											"value": "446561646C696E65206E6F742072656163686564000000000000000000000000"
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6543,
											"end": 6589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6968,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6602,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6744,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6765,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6765,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6765,
											"end": 6832,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6765,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6758,
											"end": 6832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6758,
											"end": 6832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6841,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6930,
											"end": 6933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6841,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6841,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6841,
											"end": 6934,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6841,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6961,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6954,
											"end": 6957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6950,
											"end": 6962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6943,
											"end": 6962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6943,
											"end": 6962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7393,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6974,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 7144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7167,
											"end": 7176,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7155,
											"end": 7181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7217,
											"end": 7237,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7211,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7198,
											"end": 7215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7381,
											"end": 7385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7255,
											"end": 7386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7255,
											"end": 7386,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7255,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6974,
											"end": 7393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7399,
											"end": 7562,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7399,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7539,
											"end": 7554,
											"name": "PUSH",
											"source": 5,
											"value": "496E76616C6964207374616B6500000000000000000000000000000000000000"
										},
										{
											"begin": 7535,
											"end": 7536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7527,
											"end": 7533,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7537,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7516,
											"end": 7555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7399,
											"end": 7562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7399,
											"end": 7562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7934,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7568,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7710,
											"end": 7713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7795,
											"end": 7797,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 7790,
											"end": 7793,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7731,
											"end": 7798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7798,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7731,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7724,
											"end": 7798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7724,
											"end": 7798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7807,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7896,
											"end": 7899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7807,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7807,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7807,
											"end": 7900,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7807,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7925,
											"end": 7927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7920,
											"end": 7923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7916,
											"end": 7928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7909,
											"end": 7928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7909,
											"end": 7928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7568,
											"end": 7934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 8359,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 7940,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8106,
											"end": 8110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8133,
											"end": 8142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8129,
											"end": 8147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8193,
											"end": 8202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8187,
											"end": 8191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8183,
											"end": 8203,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8221,
											"end": 8352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8213,
											"end": 8352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 8359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 8359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 8359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 8359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8807,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 8365,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8514,
											"end": 8518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8552,
											"end": 8554,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8541,
											"end": 8550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8633,
											"end": 8634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8618,
											"end": 8635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 8565,
											"end": 8636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8636,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8565,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8714,
											"end": 8716,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8703,
											"end": 8712,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8690,
											"end": 8696,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 8646,
											"end": 8718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8646,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8796,
											"end": 8798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8785,
											"end": 8794,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8781,
											"end": 8799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8772,
											"end": 8778,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 8728,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8728,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8807,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8807,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8956,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8813,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8870,
											"end": 8875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8901,
											"end": 8907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8908,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8917,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 8944,
											"end": 8949,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8917,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 8917,
											"end": 8950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8917,
											"end": 8950,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 8917,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8956,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 9313,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 8962,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9081,
											"end": 9083,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9069,
											"end": 9078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9060,
											"end": 9067,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9056,
											"end": 9079,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9084,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9168,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9049,
											"end": 9168,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9087,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9087,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 9087,
											"end": 9166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9087,
											"end": 9166,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9087,
											"end": 9166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9168,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9049,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9232,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9288,
											"end": 9295,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9268,
											"end": 9277,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9264,
											"end": 9286,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 9232,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9296,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9232,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9222,
											"end": 9296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9222,
											"end": 9296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 9313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 9313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 9313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 9313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 9313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9539,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 9319,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9459,
											"end": 9493,
											"name": "PUSH",
											"source": 5,
											"value": "596F7520617265206E6F7420746865206F776E6572206F662074686973204E46"
										},
										{
											"begin": 9455,
											"end": 9456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9443,
											"end": 9457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9436,
											"end": 9494,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9531,
											"name": "PUSH",
											"source": 5,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9523,
											"end": 9525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9515,
											"end": 9521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9511,
											"end": 9526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9911,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 9545,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9772,
											"end": 9774,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9767,
											"end": 9770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9708,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 9708,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9708,
											"end": 9775,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9708,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 9775,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 9775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9784,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 9873,
											"end": 9876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9784,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 9784,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9784,
											"end": 9877,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 9784,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9902,
											"end": 9904,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9897,
											"end": 9900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9886,
											"end": 9905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9886,
											"end": 9905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9917,
											"end": 10336,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 9917,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10083,
											"end": 10087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10121,
											"end": 10123,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10110,
											"end": 10119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10098,
											"end": 10124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10098,
											"end": 10124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10170,
											"end": 10179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10160,
											"end": 10180,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10156,
											"end": 10157,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10145,
											"end": 10154,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10158,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10134,
											"end": 10181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10324,
											"end": 10328,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 10198,
											"end": 10329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10198,
											"end": 10329,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10198,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10190,
											"end": 10329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10190,
											"end": 10329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9917,
											"end": 10336,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9917,
											"end": 10336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9917,
											"end": 10336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9917,
											"end": 10336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10381,
											"end": 10388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10410,
											"end": 10415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10399,
											"end": 10415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10399,
											"end": 10415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10342,
											"end": 10421,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10342,
											"end": 10421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10427,
											"end": 10584,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10427,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10552,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10570,
											"end": 10575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 10552,
											"end": 10576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10576,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10552,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 10532,
											"end": 10577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10577,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10532,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10527,
											"end": 10530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10520,
											"end": 10578,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10427,
											"end": 10584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10427,
											"end": 10584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10427,
											"end": 10584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10684,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 10590,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10623,
											"end": 10631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10667,
											"end": 10669,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10663,
											"end": 10677,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10590,
											"end": 10684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10784,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 10690,
											"end": 10784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10729,
											"end": 10736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10772,
											"end": 10777,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 10758,
											"end": 10778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10778,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10758,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10747,
											"end": 10778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10747,
											"end": 10778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10784,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10690,
											"end": 10784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10890,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 10790,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10829,
											"end": 10836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10858,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10878,
											"end": 10883,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10858,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 10858,
											"end": 10884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10858,
											"end": 10884,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10858,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10896,
											"end": 11053,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 10896,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 11021,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 11039,
											"end": 11044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11021,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11021,
											"end": 11045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11021,
											"end": 11045,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 11021,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 11001,
											"end": 11046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11001,
											"end": 11046,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 11001,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 10999,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10989,
											"end": 11047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10896,
											"end": 11053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10896,
											"end": 11053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10896,
											"end": 11053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11059,
											"end": 11597,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11059,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11227,
											"end": 11230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11304,
											"end": 11310,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11242,
											"end": 11317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 11242,
											"end": 11317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11242,
											"end": 11317,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 11242,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11337,
											"end": 11340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11333,
											"end": 11345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11326,
											"end": 11345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11326,
											"end": 11345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11355,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 11426,
											"end": 11429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11417,
											"end": 11423,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11355,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 11355,
											"end": 11430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11355,
											"end": 11430,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 11355,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11455,
											"end": 11457,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 11450,
											"end": 11453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11446,
											"end": 11458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11439,
											"end": 11458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11439,
											"end": 11458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11530,
											"end": 11536,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 11468,
											"end": 11543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11543,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11468,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11568,
											"end": 11570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11563,
											"end": 11566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11559,
											"end": 11571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11552,
											"end": 11571,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11552,
											"end": 11571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11588,
											"end": 11591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11581,
											"end": 11591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11581,
											"end": 11591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11059,
											"end": 11597,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11059,
											"end": 11597,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11059,
											"end": 11597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11059,
											"end": 11597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11059,
											"end": 11597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11059,
											"end": 11597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11059,
											"end": 11597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11603,
											"end": 11783,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 11603,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11651,
											"end": 11728,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11648,
											"end": 11649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11641,
											"end": 11729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11748,
											"end": 11752,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 11745,
											"end": 11746,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11738,
											"end": 11753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11772,
											"end": 11776,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11769,
											"end": 11770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11762,
											"end": 11777,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11789,
											"end": 11980,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 11789,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11829,
											"end": 11832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 11848,
											"end": 11868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 11848,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11843,
											"end": 11868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11843,
											"end": 11868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11882,
											"end": 11902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11900,
											"end": 11901,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11882,
											"end": 11902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 11882,
											"end": 11902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11882,
											"end": 11902,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11882,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11877,
											"end": 11902,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11877,
											"end": 11902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11925,
											"end": 11926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11922,
											"end": 11923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11918,
											"end": 11927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11911,
											"end": 11927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11911,
											"end": 11927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11946,
											"end": 11949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11943,
											"end": 11944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11940,
											"end": 11950,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11937,
											"end": 11973,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11937,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11937,
											"end": 11973,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 11953,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 11953,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11937,
											"end": 11973,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11937,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11789,
											"end": 11980,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11789,
											"end": 11980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11789,
											"end": 11980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11789,
											"end": 11980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11789,
											"end": 11980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11986,
											"end": 12104,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 11986,
											"end": 12104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12073,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 12091,
											"end": 12096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12073,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 12073,
											"end": 12097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12073,
											"end": 12097,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 12073,
											"end": 12097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12068,
											"end": 12071,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12061,
											"end": 12098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11986,
											"end": 12104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11986,
											"end": 12104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11986,
											"end": 12104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12287,
											"end": 12291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12328,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 12314,
											"end": 12323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12310,
											"end": 12329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12302,
											"end": 12329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12302,
											"end": 12329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12339,
											"end": 12410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12405,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12392,
											"end": 12409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12383,
											"end": 12389,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 12339,
											"end": 12410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 12339,
											"end": 12410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12339,
											"end": 12410,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 12339,
											"end": 12410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12420,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 12488,
											"end": 12490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12464,
											"end": 12470,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 12420,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 12420,
											"end": 12492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12420,
											"end": 12492,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 12420,
											"end": 12492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 12570,
											"end": 12572,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12559,
											"end": 12568,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12555,
											"end": 12573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12546,
											"end": 12552,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 12502,
											"end": 12574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12574,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 12502,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 12652,
											"end": 12654,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 12641,
											"end": 12650,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12637,
											"end": 12655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12628,
											"end": 12634,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 12584,
											"end": 12656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12656,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 12584,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12669,
											"end": 12894,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 12669,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12809,
											"end": 12843,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12797,
											"end": 12803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12793,
											"end": 12807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12786,
											"end": 12844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12878,
											"end": 12886,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12873,
											"end": 12875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12865,
											"end": 12871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12861,
											"end": 12876,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12854,
											"end": 12887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12669,
											"end": 12894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12669,
											"end": 12894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12900,
											"end": 13266,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 12900,
											"end": 13266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13042,
											"end": 13045,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13063,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 13127,
											"end": 13129,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 13122,
											"end": 13125,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13063,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 13063,
											"end": 13130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13063,
											"end": 13130,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 13063,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13139,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 13228,
											"end": 13231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13139,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 13139,
											"end": 13232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13139,
											"end": 13232,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 13139,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13257,
											"end": 13259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13252,
											"end": 13255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13241,
											"end": 13260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13241,
											"end": 13260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12900,
											"end": 13266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12900,
											"end": 13266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12900,
											"end": 13266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12900,
											"end": 13266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13272,
											"end": 13691,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 13272,
											"end": 13691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13438,
											"end": 13442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13476,
											"end": 13478,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13465,
											"end": 13474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13461,
											"end": 13479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13453,
											"end": 13479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13453,
											"end": 13479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13525,
											"end": 13534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13519,
											"end": 13523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13515,
											"end": 13535,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13511,
											"end": 13512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13489,
											"end": 13536,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 13679,
											"end": 13683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 13553,
											"end": 13684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13684,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 13553,
											"end": 13684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13272,
											"end": 13691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13272,
											"end": 13691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13272,
											"end": 13691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13272,
											"end": 13691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13697,
											"end": 13879,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 13697,
											"end": 13879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13837,
											"end": 13871,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13833,
											"end": 13834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13825,
											"end": 13831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13821,
											"end": 13835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13814,
											"end": 13872,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13697,
											"end": 13879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13697,
											"end": 13879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13885,
											"end": 14251,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 13885,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14027,
											"end": 14030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14048,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 14112,
											"end": 14114,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14107,
											"end": 14110,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14048,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 14048,
											"end": 14115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14048,
											"end": 14115,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 14048,
											"end": 14115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14041,
											"end": 14115,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14041,
											"end": 14115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14124,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14213,
											"end": 14216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14124,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 14124,
											"end": 14217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14124,
											"end": 14217,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 14124,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14242,
											"end": 14244,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14237,
											"end": 14240,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14233,
											"end": 14245,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14226,
											"end": 14245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13885,
											"end": 14251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13885,
											"end": 14251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13885,
											"end": 14251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13885,
											"end": 14251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14257,
											"end": 14676,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 14257,
											"end": 14676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14423,
											"end": 14427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14461,
											"end": 14463,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14450,
											"end": 14459,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14446,
											"end": 14464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14438,
											"end": 14464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14438,
											"end": 14464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14510,
											"end": 14519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14504,
											"end": 14508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14500,
											"end": 14520,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14496,
											"end": 14497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14485,
											"end": 14494,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14481,
											"end": 14498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14474,
											"end": 14521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14538,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 14664,
											"end": 14668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14538,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 14538,
											"end": 14669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14538,
											"end": 14669,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 14538,
											"end": 14669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14530,
											"end": 14669,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14530,
											"end": 14669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14257,
											"end": 14676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14257,
											"end": 14676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14257,
											"end": 14676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14257,
											"end": 14676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"trustless cross-chain/trading pair formation/NFTburn.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"blackholeAddress()": "7d515a10",
							"burn(bytes32)": "08a1eee1",
							"deltaB()": "ea768123",
							"deltaD()": "83a811bf",
							"deltaK()": "568b962a",
							"gameItemContract()": "f9be04ca",
							"getStakeInfo(bytes32)": "7e8d094c",
							"lock(uint256)": "dd467064",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stakes(bytes32)": "8fee6407",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gameItemContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_blackholeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deltaK\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deltaB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deltaD\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTokenId\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"stakeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"blackholeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stakeId\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deltaB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deltaD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deltaK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameItemContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stakeId\",\"type\":\"bytes32\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct StakingContract.StakeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trustless cross-chain/trading pair formation/NFTburn.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"trustless cross-chain/trading pair formation/NFTburn.sol\":{\"keccak256\":\"0xbe75dd30f1f55dce7154da179fff3ce9f67f2ecbaee3f212a694248d40015359\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65482dab44874fb2c26f67a19aee2d15fc3ed3b55f5b4dc978eff67e3254ce0e\",\"dweb:/ipfs/QmdZoEPQFWRFNFWAeB5vBHKuwCK26XSdUsuwQi9f8WkHjw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 271,
								"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
								"label": "gameItemContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)228"
							},
							{
								"astId": 273,
								"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
								"label": "blackholeAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 275,
								"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
								"label": "deltaK",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 277,
								"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
								"label": "deltaB",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 279,
								"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
								"label": "deltaD",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 293,
								"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
								"label": "stakes",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(StakeInfo)288_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC721)228": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_struct(StakeInfo)288_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct StakingContract.StakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeInfo)288_storage"
							},
							"t_struct(StakeInfo)288_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.StakeInfo",
								"members": [
									{
										"astId": 281,
										"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 283,
										"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 285,
										"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
										"label": "lockTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 287,
										"contract": "trustless cross-chain/trading pair formation/NFTburn.sol:StakingContract",
										"label": "deadline",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							250
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 251,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 250,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								250
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							262
						],
						"IERC721": [
							228
						]
					},
					"id": 229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 263,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 262,
										"src": "271:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228,
								262
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 127,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 136,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 145,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 228,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 228,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1844:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1866:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1911:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:1"
									},
									"scope": 228,
									"src": "1809:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2679:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2701:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2721:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:1"
									},
									"scope": 228,
									"src": "2644:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3526:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3568:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:1"
									},
									"scope": 228,
									"src": "3495:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4079:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4091:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:1"
									},
									"scope": 228,
									"src": "4062:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4464:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4482:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:1"
									},
									"scope": 228,
									"src": "4437:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4678:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4718:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:1"
									},
									"scope": 228,
									"src": "4657:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4911:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4926:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4967:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:1"
									},
									"scope": 228,
									"src": "4885:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "250:4725:1",
							"usedErrors": [],
							"usedEvents": [
								127,
								136,
								145
							]
						}
					],
					"src": "108:4868:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 231,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 236,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 235,
												"id": 238,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 250,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 245,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 244,
												"id": 247,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 250,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 251,
							"src": "608:235:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							262
						]
					},
					"id": 263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 262,
							"linearizedBaseContracts": [
								262
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 255,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 262,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 263,
							"src": "405:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"trustless cross-chain/trading pair formation/NFTburn.sol": {
				"ast": {
					"absolutePath": "trustless cross-chain/trading pair formation/NFTburn.sol",
					"exportedSymbols": {
						"Context": [
							250
						],
						"IERC165": [
							262
						],
						"IERC721": [
							228
						],
						"Ownable": [
							112
						],
						"StakingContract": [
							491
						]
					},
					"id": 492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 229,
							"src": "57:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 113,
							"src": "116:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 267,
										"name": "Ownable",
										"nameLocations": [
											"198:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "198:7:4"
									},
									"id": 268,
									"nodeType": "InheritanceSpecifier",
									"src": "198:7:4"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 491,
							"linearizedBaseContracts": [
								491,
								112,
								250
							],
							"name": "StakingContract",
							"nameLocation": "179:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f9be04ca",
									"id": 271,
									"mutability": "mutable",
									"name": "gameItemContract",
									"nameLocation": "227:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "212:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$228",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 270,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 269,
											"name": "IERC721",
											"nameLocations": [
												"212:7:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 228,
											"src": "212:7:4"
										},
										"referencedDeclaration": 228,
										"src": "212:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$228",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d515a10",
									"id": 273,
									"mutability": "mutable",
									"name": "blackholeAddress",
									"nameLocation": "264:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "249:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "568b962a",
									"id": 275,
									"mutability": "mutable",
									"name": "deltaK",
									"nameLocation": "301:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "286:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea768123",
									"id": 277,
									"mutability": "mutable",
									"name": "deltaB",
									"nameLocation": "328:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "313:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 276,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83a811bf",
									"id": 279,
									"mutability": "mutable",
									"name": "deltaD",
									"nameLocation": "355:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "340:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "340:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.StakeInfo",
									"id": 288,
									"members": [
										{
											"constant": false,
											"id": 281,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "403:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "395:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 280,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "395:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 283,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "426:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "418:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "418:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 285,
											"mutability": "mutable",
											"name": "lockTime",
											"nameLocation": "451:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "443:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 284,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "443:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 287,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "477:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "469:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 286,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "469:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "375:9:4",
									"nodeType": "StructDefinition",
									"scope": 491,
									"src": "368:124:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8fee6407",
									"id": 293,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "535:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "498:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_StakeInfo_$288_storage_$",
										"typeString": "mapping(bytes32 => struct StakingContract.StakeInfo)"
									},
									"typeName": {
										"id": 292,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 289,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "506:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "498:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_StakeInfo_$288_storage_$",
											"typeString": "mapping(bytes32 => struct StakingContract.StakeInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 291,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 290,
												"name": "StakeInfo",
												"nameLocations": [
													"517:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "517:9:4"
											},
											"referencedDeclaration": 288,
											"src": "517:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeInfo_$288_storage_ptr",
												"typeString": "struct StakingContract.StakeInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e42732012f91412364b2848d4c8c3d8dd5508e0a5a0f60d6e1de7843145ea5c0",
									"id": 303,
									"name": "StakeLocked",
									"nameLocation": "554:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "574:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "566:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "591:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "583:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "606:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "598:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": false,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "623:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "615:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:67:4"
									},
									"src": "548:85:4"
								},
								{
									"anonymous": false,
									"eventSelector": "d83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e",
									"id": 307,
									"name": "Burned",
									"nameLocation": "644:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldTokenId",
												"nameLocation": "659:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "651:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:20:4"
									},
									"src": "638:33:4"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "840:186:4",
										"statements": [
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "gameItemContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "850:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$228",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 322,
																"name": "_gameItemContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "877:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 321,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "869:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$228_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "869:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$228",
															"typeString": "contract IERC721"
														}
													},
													"src": "850:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$228",
														"typeString": "contract IERC721"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "850:45:4"
											},
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 326,
														"name": "blackholeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "905:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 327,
														"name": "_blackholeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "924:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "905:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "905:36:4"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 330,
														"name": "deltaK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "951:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 331,
														"name": "_deltaK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "960:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "951:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "951:16:4"
											},
											{
												"expression": {
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 334,
														"name": "deltaB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "977:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 335,
														"name": "_deltaB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "986:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "977:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "977:16:4"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 338,
														"name": "deltaD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "1003:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 339,
														"name": "_deltaD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1012:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1003:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "1003:16:4"
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "_gameItemContract",
												"nameLocation": "706:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "698:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_blackholeAddress",
												"nameLocation": "741:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "733:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "_deltaK",
												"nameLocation": "776:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "768:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "_deltaB",
												"nameLocation": "801:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "793:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "_deltaD",
												"nameLocation": "826:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "818:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:151:4"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:0:4"
									},
									"scope": 491,
									"src": "677:349:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1072:534:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 351,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "1115:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 349,
																		"name": "gameItemContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "1090:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$228",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1107:7:4",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 161,
																	"src": "1090:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1090:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 353,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1127:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1131:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1090:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973204e4654",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1139:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																"typeString": "literal_string \"You are not the owner of this NFT\""
															},
															"value": "You are not the owner of this NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9afdbf5924fb068c43d5ac004ce81cab4cf3196c25c96bdf88cb77f01ecdd3ab",
																"typeString": "literal_string \"You are not the owner of this NFT\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1082:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1082:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1082:93:4"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "stakeId",
														"nameLocation": "1194:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "1186:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 359,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1186:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 364,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "1231:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 365,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1240:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1244:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1240:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 367,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1252:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1258:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1252:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 362,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1214:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1218:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1214:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1214:54:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 361,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1204:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1204:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1186:83:4"
											},
											{
												"assignments": [
													373
												],
												"declarations": [
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "lockTime",
														"nameLocation": "1287:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "1279:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 372,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1279:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"expression": {
														"id": 374,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "1298:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1304:9:4",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "1298:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1279:34:4"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "deadline",
														"nameLocation": "1331:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "1323:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1323:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "lockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "1342:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 380,
																"name": "deltaK",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "1353:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1342:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 382,
															"name": "deltaB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "1362:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1342:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 384,
														"name": "deltaD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "1371:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1342:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1323:54:4"
											},
											{
												"expression": {
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 387,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1388:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_StakeInfo_$288_storage_$",
																"typeString": "mapping(bytes32 => struct StakingContract.StakeInfo storage ref)"
															}
														},
														"id": 389,
														"indexExpression": {
															"id": 388,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "1395:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1388:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$288_storage",
															"typeString": "struct StakingContract.StakeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 391,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1416:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1420:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 393,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "1428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 394,
																"name": "lockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "1437:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 395,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "1447:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 390,
															"name": "StakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1406:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakeInfo_$288_storage_ptr_$",
																"typeString": "type(struct StakingContract.StakeInfo storage pointer)"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1406:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$288_memory_ptr",
															"typeString": "struct StakingContract.StakeInfo memory"
														}
													},
													"src": "1388:68:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$288_storage",
														"typeString": "struct StakingContract.StakeInfo storage ref"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "1388:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 402,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1497:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1501:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1497:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 406,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1517:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$491",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$491",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1509:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1509:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1509:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "1524:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 399,
															"name": "gameItemContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "1467:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$228",
																"typeString": "contract IERC721"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1484:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 193,
														"src": "1467:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "1467:65:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 412,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "1560:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 413,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1569:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1569:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "1581:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 416,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "1590:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "StakeLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1548:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "EmitStatement",
												"src": "1543:56:4"
											}
										]
									},
									"functionSelector": "dd467064",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lock",
									"nameLocation": "1041:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1054:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:17:4"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1072:0:4"
									},
									"scope": 491,
									"src": "1032:574:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "1662:353:4",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "1690:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 476,
														"src": "1672:23:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$288_storage_ptr",
															"typeString": "struct StakingContract.StakeInfo"
														},
														"typeName": {
															"id": 428,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 427,
																"name": "StakeInfo",
																"nameLocations": [
																	"1672:9:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 288,
																"src": "1672:9:4"
															},
															"referencedDeclaration": 288,
															"src": "1672:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$288_storage_ptr",
																"typeString": "struct StakingContract.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"baseExpression": {
														"id": 430,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "1698:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_StakeInfo_$288_storage_$",
															"typeString": "mapping(bytes32 => struct StakingContract.StakeInfo storage ref)"
														}
													},
													"id": 432,
													"indexExpression": {
														"id": 431,
														"name": "stakeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "1705:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1698:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$288_storage",
														"typeString": "struct StakingContract.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1672:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 435,
																	"name": "stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1731:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$288_storage_ptr",
																		"typeString": "struct StakingContract.StakeInfo storage pointer"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1737:8:4",
																"memberName": "deadline",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 287,
																"src": "1731:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 437,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1749:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1755:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1749:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1731:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446561646c696e65206e6f742072656163686564",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1766:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013",
																"typeString": "literal_string \"Deadline not reached\""
															},
															"value": "Deadline not reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013",
																"typeString": "literal_string \"Deadline not reached\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1723:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1723:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1723:66:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 444,
																	"name": "stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1807:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$288_storage_ptr",
																		"typeString": "struct StakingContract.StakeInfo storage pointer"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1813:5:4",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 281,
																"src": "1807:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1830:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1822:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1822:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1822:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1807:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b65",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1834:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc",
																"typeString": "literal_string \"Invalid stake\""
															},
															"value": "Invalid stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_220a86481aceef0bd0ed1021148309786afd1836fa519705c1e5ee46a3d596cc",
																"typeString": "literal_string \"Invalid stake\""
															}
														],
														"id": 443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1799:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "1799:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1899:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$491",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$491",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1891:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1891:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "blackholeAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "1906:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 462,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "1924:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$288_storage_ptr",
																	"typeString": "struct StakingContract.StakeInfo storage pointer"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1930:7:4",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "1924:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 454,
															"name": "gameItemContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "1861:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$228",
																"typeString": "contract IERC721"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1878:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 193,
														"src": "1861:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "1861:77:4"
											},
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1949:22:4",
													"subExpression": {
														"baseExpression": {
															"id": 466,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1956:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_StakeInfo_$288_storage_$",
																"typeString": "mapping(bytes32 => struct StakingContract.StakeInfo storage ref)"
															}
														},
														"id": 468,
														"indexExpression": {
															"id": 467,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "1963:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1956:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$288_storage",
															"typeString": "struct StakingContract.StakeInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1949:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 472,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "1994:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$288_storage_ptr",
																	"typeString": "struct StakingContract.StakeInfo storage pointer"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2000:7:4",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 283,
															"src": "1994:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "1987:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "EmitStatement",
												"src": "1982:26:4"
											}
										]
									},
									"functionSelector": "08a1eee1",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 425,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 424,
												"name": "onlyOwner",
												"nameLocations": [
													"1652:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1652:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1652:9:4"
										}
									],
									"name": "burn",
									"nameLocation": "1621:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "1634:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1626:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 421,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:17:4"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1662:0:4"
									},
									"scope": 491,
									"src": "1612:403:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "2101:39:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 485,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2118:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_StakeInfo_$288_storage_$",
															"typeString": "mapping(bytes32 => struct StakingContract.StakeInfo storage ref)"
														}
													},
													"id": 487,
													"indexExpression": {
														"id": 486,
														"name": "stakeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2125:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2118:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$288_storage",
														"typeString": "struct StakingContract.StakeInfo storage ref"
													}
												},
												"functionReturnParameters": 484,
												"id": 488,
												"nodeType": "Return",
												"src": "2111:22:4"
											}
										]
									},
									"functionSelector": "7e8d094c",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeInfo",
									"nameLocation": "2030:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "2051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:17:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2083:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$288_memory_ptr",
													"typeString": "struct StakingContract.StakeInfo"
												},
												"typeName": {
													"id": 482,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 481,
														"name": "StakeInfo",
														"nameLocations": [
															"2083:9:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "2083:9:4"
													},
													"referencedDeclaration": 288,
													"src": "2083:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$288_storage_ptr",
														"typeString": "struct StakingContract.StakeInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:18:4"
									},
									"scope": 491,
									"src": "2021:119:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 492,
							"src": "170:1972:4",
							"usedErrors": [],
							"usedEvents": [
								13,
								303,
								307
							]
						}
					],
					"src": "32:2110:4"
				},
				"id": 4
			}
		}
	}
}