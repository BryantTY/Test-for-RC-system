{
	"id": "c3661f015fdd2c0059c0e2a664c4f689",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"trustless cross-chain/trading pair formation/Battlegame.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract BattleGame is Ownable {\n\n    IERC721 public nft;\n    address public trustedNFTManagement;\n    uint256 private constant RANDOM_MIN = 80;\n    uint256 private constant RANDOM_MAX = 100;\n\n    struct PlayerData {\n        string name;\n        uint256 attack;\n        uint256 defense;\n        uint256 experience;\n    }\n\n    mapping(uint256 => PlayerData) public playerData;\n\n    constructor(address _nftAddress) {\n        nft = IERC721(_nftAddress);\n    }\n    function random() private view returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(block.timestamp))) % (RANDOM_MAX - RANDOM_MIN + 1) + RANDOM_MIN;\n    }\n\n    function playerVersusPlayer(uint256 tokenId1, uint256 tokenId2) public {\n        //require(nft.ownerOf(tokenId1) == msg.sender || nft.ownerOf(tokenId2) == msg.sender, \"You must own one of the tokens\");\n\n        PlayerData storage player1 = playerData[tokenId1];\n        PlayerData storage player2 = playerData[tokenId2];\n        uint256 r1 = random();\n        uint256 r2 = random();\n\n        int256 s = int256((player1.attack + player1.defense + player1.experience) * r1) - int256((player2.attack + player2.defense + player2.experience) * r2);\n\n        if (s > 0) {\n            player1.attack += 10;\n            player1.defense += 10;\n            player1.experience += 100;\n\n            player2.attack += 1;\n            player2.defense += 1;\n            player2.experience += 50;\n        } else {\n            player1.attack += 1;\n            player1.defense += 1;\n            player1.experience += 50;\n\n            player2.attack += 10;\n            player2.defense += 10;\n            player2.experience += 100;\n        }\n    }\n\n    function playerVersusNPC(uint256[] memory tokenIds, uint256 npcAttack, uint256 npcDefense) public {\n        uint256 p = tokenIds.length;\n        uint256 r1 = random();\n        uint256 r2 = random();\n\n        int256 s = 0;\n        for (uint256 i = 0; i < p; i++) {\n            PlayerData storage player = playerData[tokenIds[i]];\n            s += int256((player.attack + player.defense + player.experience) * r1);\n        }\n        s -= int256((npcAttack + npcDefense) * r2);\n\n        for (uint256 i = 0; i < p; i++) {\n            PlayerData storage player = playerData[tokenIds[i]];\n            if (s > 0) {\n                player.attack += 100;\n                player.defense += 100;\n                player.experience += 1000;\n            } else {\n                player.attack += 50;\n                player.defense += 50;\n                player.experience += 500;\n            }\n        }\n    }\n     function getNFTData(uint256 tokenId) external view returns (PlayerData memory) {\n        require(nft.ownerOf(tokenId) != address(0), \"NFT does not exist\");\n        return playerData[tokenId];\n    }\n    function deletePlayerData(uint256 tokenId) external {\n        require(msg.sender == trustedNFTManagement, \"Only the trusted NFTManagement contract can call this function\");\n        delete playerData[tokenId];\n    }\n\n    // Other functions remain the same ...\n\n    function setTrustedNFTManagement(address _trustedNFTManagement) external onlyOwner {\n        trustedNFTManagement = _trustedNFTManagement;\n    }\n    function getplayerData(uint256 tokenId) public view returns (PlayerData memory) {\n    return playerData[tokenId];\n}\n\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"trustless cross-chain/trading pair formation/Battlegame.sol": {
				"BattleGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "deletePlayerData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getNFTData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "attack",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "defense",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "experience",
											"type": "uint256"
										}
									],
									"internalType": "struct BattleGame.PlayerData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getplayerData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "attack",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "defense",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "experience",
											"type": "uint256"
										}
									],
									"internalType": "struct BattleGame.PlayerData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerData",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "attack",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "defense",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "experience",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "npcAttack",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "npcDefense",
									"type": "uint256"
								}
							],
							"name": "playerVersusNPC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId2",
									"type": "uint256"
								}
							],
							"name": "playerVersusPlayer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedNFTManagement",
									"type": "address"
								}
							],
							"name": "setTrustedNFTManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "trustedNFTManagement",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":138:3443  contract BattleGame is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":519:595  constructor(address _nftAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":576:587  _nftAddress */\n  dup1\n    /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":562:565  nft */\n  0x01\n  0x00\n    /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":562:588  nft = IERC721(_nftAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":519:595  constructor(address _nftAddress) {... */\n  pop\n    /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":138:3443  contract BattleGame is Ownable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":932:1051   */\ntag_35:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_37\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":138:3443  contract BattleGame is Ownable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":138:3443  contract BattleGame is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb67836f8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd7b8d485\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe00974ff\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x0ad4c4f4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0aec4ed1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x25cab809\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38a2c0a3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5f52789b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2710:2907  function getNFTData(uint256 tokenId) external view returns (PlayerData memory) {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":464:512  mapping(uint256 => PlayerData) public playerData */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3176:3320  function setTrustedNFTManagement(address _trustedNFTManagement) external onlyOwner {... */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1809:2704  function playerVersusNPC(uint256[] memory tokenIds, uint256 npcAttack, uint256 npcDefense) public {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":176:194  IERC721 public nft */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3325:3440  function getplayerData(uint256 tokenId) public view returns (PlayerData memory) {... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":777:1803  function playerVersusPlayer(uint256 tokenId1, uint256 tokenId2) public {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2912:3126  function deletePlayerData(uint256 tokenId) external {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":200:235  address public trustedNFTManagement */\n    tag_13:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2710:2907  function getNFTData(uint256 tokenId) external view returns (PlayerData memory) {... */\n    tag_19:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2770:2787  PlayerData memory */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2839:2840  0 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2807:2841  nft.ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2807:2810  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2807:2818  nft.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2819:2826  tokenId */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2807:2827  nft.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2807:2841  nft.ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2799:2864  require(nft.ownerOf(tokenId) != address(0), \"NFT does not exist\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2881:2891  playerData */\n      0x03\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2881:2900  playerData[tokenId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2892:2899  tokenId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2881:2900  playerData[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2874:2900  return playerData[tokenId] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_75\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2710:2907  function getNFTData(uint256 tokenId) external view returns (PlayerData memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":464:512  mapping(uint256 => PlayerData) public playerData */\n    tag_24:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_75\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_75\n      jump\t// in\n    tag_81:\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n    tag_83:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3176:3320  function setTrustedNFTManagement(address _trustedNFTManagement) external onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3292:3313  _trustedNFTManagement */\n      dup1\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3269:3289  trustedNFTManagement */\n      0x02\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3269:3313  trustedNFTManagement = _trustedNFTManagement */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3176:3320  function setTrustedNFTManagement(address _trustedNFTManagement) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1809:2704  function playerVersusNPC(uint256[] memory tokenIds, uint256 npcAttack, uint256 npcDefense) public {... */\n    tag_34:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1917:1926  uint256 p */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1929:1937  tokenIds */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1929:1944  tokenIds.length */\n      mload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1917:1944  uint256 p = tokenIds.length */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1954:1964  uint256 r1 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1967:1975  random() */\n      tag_90\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1967:1973  random */\n      tag_91\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1967:1975  random() */\n      jump\t// in\n    tag_90:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1954:1975  uint256 r1 = random() */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1985:1995  uint256 r2 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1998:2006  random() */\n      tag_92\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1998:2004  random */\n      tag_91\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1998:2006  random() */\n      jump\t// in\n    tag_92:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1985:2006  uint256 r2 = random() */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2017:2025  int256 s */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2044:2053  uint256 i */\n      dup1\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2039:2231  for (uint256 i = 0; i < p; i++) {... */\n    tag_93:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2063:2064  p */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2059:2060  i */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2059:2064  i < p */\n      lt\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2039:2231  for (uint256 i = 0; i < p; i++) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2085:2110  PlayerData storage player */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2113:2123  playerData */\n      0x03\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2113:2136  playerData[tokenIds[i]] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2124:2132  tokenIds */\n      dup11\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2133:2134  i */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2124:2135  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2113:2136  playerData[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2085:2136  PlayerData storage player = playerData[tokenIds[i]] */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2217:2219  r1 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2196:2202  player */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2196:2213  player.experience */\n      0x03\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2179:2185  player */\n      dup3\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2179:2193  player.defense */\n      0x02\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2163:2169  player */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2163:2176  player.attack */\n      0x01\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2163:2193  player.attack + player.defense */\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2163:2213  player.attack + player.defense + player.experience */\n      tag_101\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2162:2219  (player.attack + player.defense + player.experience) * r1 */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2150:2220  s += int256((player.attack + player.defense + player.experience) * r1) */\n      dup4\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      swap3\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2071:2231  {... */\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2066:2069  i++ */\n      dup1\n      dup1\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      swap2\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2039:2231  for (uint256 i = 0; i < p; i++) {... */\n      jump(tag_93)\n    tag_94:\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2279:2281  r2 */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2265:2275  npcDefense */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2253:2262  npcAttack */\n      dup8\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2253:2275  npcAttack + npcDefense */\n      tag_108\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_108:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2252:2281  (npcAttack + npcDefense) * r2 */\n      tag_109\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_109:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2240:2282  s -= int256((npcAttack + npcDefense) * r2) */\n      dup2\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2298:2307  uint256 i */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2293:2698  for (uint256 i = 0; i < p; i++) {... */\n    tag_112:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2317:2318  p */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2313:2314  i */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2313:2318  i < p */\n      lt\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2293:2698  for (uint256 i = 0; i < p; i++) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2339:2364  PlayerData storage player */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2367:2377  playerData */\n      0x03\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2367:2390  playerData[tokenIds[i]] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2378:2386  tokenIds */\n      dup11\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2387:2388  i */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2378:2389  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_115\n      jumpi\n      tag_116\n      tag_98\n      jump\t// in\n    tag_116:\n    tag_115:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2367:2390  playerData[tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2339:2390  PlayerData storage player = playerData[tokenIds[i]] */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2412:2413  0 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2408:2409  s */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2408:2413  s > 0 */\n      sgt\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2404:2688  if (s > 0) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2450:2453  100 */\n      0x64\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2433:2439  player */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2433:2446  player.attack */\n      0x01\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2433:2453  player.attack += 100 */\n      dup3\n      dup3\n      sload\n      tag_118\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_118:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2489:2492  100 */\n      0x64\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2471:2477  player */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2471:2485  player.defense */\n      0x02\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2471:2492  player.defense += 100 */\n      dup3\n      dup3\n      sload\n      tag_119\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_119:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2531:2535  1000 */\n      0x03e8\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2510:2516  player */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2510:2527  player.experience */\n      0x03\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2510:2535  player.experience += 1000 */\n      dup3\n      dup3\n      sload\n      tag_120\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_120:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2404:2688  if (s > 0) {... */\n      jump(tag_121)\n    tag_117:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2591:2593  50 */\n      0x32\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2574:2580  player */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2574:2587  player.attack */\n      0x01\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2574:2593  player.attack += 50 */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2629:2631  50 */\n      0x32\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2611:2617  player */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2611:2625  player.defense */\n      0x02\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2611:2631  player.defense += 50 */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2670:2673  500 */\n      0x01f4\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2649:2655  player */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2649:2666  player.experience */\n      0x03\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2649:2673  player.experience += 500 */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2404:2688  if (s > 0) {... */\n    tag_121:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2325:2698  {... */\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2320:2323  i++ */\n      dup1\n      dup1\n      tag_125\n      swap1\n      tag_107\n      jump\t// in\n    tag_125:\n      swap2\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2293:2698  for (uint256 i = 0; i < p; i++) {... */\n      jump(tag_112)\n    tag_113:\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1907:2704  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1809:2704  function playerVersusNPC(uint256[] memory tokenIds, uint256 npcAttack, uint256 npcDefense) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":176:194  IERC721 public nft */\n    tag_36:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3325:3440  function getplayerData(uint256 tokenId) public view returns (PlayerData memory) {... */\n    tag_41:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3386:3403  PlayerData memory */\n      tag_126\n      tag_63\n      jump\t// in\n    tag_126:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3418:3428  playerData */\n      0x03\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3418:3437  playerData[tokenId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3429:3436  tokenId */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3418:3437  playerData[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3411:3437  return playerData[tokenId] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_75\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_75\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3325:3440  function getplayerData(uint256 tokenId) public view returns (PlayerData memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":777:1803  function playerVersusPlayer(uint256 tokenId1, uint256 tokenId2) public {... */\n    tag_52:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":988:1014  PlayerData storage player1 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1017:1027  playerData */\n      0x03\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1017:1037  playerData[tokenId1] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1028:1036  tokenId1 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1017:1037  playerData[tokenId1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":988:1037  PlayerData storage player1 = playerData[tokenId1] */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1047:1073  PlayerData storage player2 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1076:1086  playerData */\n      0x03\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1076:1096  playerData[tokenId2] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1087:1095  tokenId2 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1076:1096  playerData[tokenId2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1047:1096  PlayerData storage player2 = playerData[tokenId2] */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1106:1116  uint256 r1 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1119:1127  random() */\n      tag_140\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1119:1125  random */\n      tag_91\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1119:1127  random() */\n      jump\t// in\n    tag_140:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1106:1127  uint256 r1 = random() */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1137:1147  uint256 r2 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1150:1158  random() */\n      tag_141\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1150:1156  random */\n      tag_91\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1150:1158  random() */\n      jump\t// in\n    tag_141:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1137:1158  uint256 r2 = random() */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1169:1177  int256 s */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1316:1318  r2 */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1294:1301  player2 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1294:1312  player2.experience */\n      0x03\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1276:1283  player2 */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1276:1291  player2.defense */\n      0x02\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1259:1266  player2 */\n      dup7\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1259:1273  player2.attack */\n      0x01\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1259:1291  player2.attack + player2.defense */\n      tag_142\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_142:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1259:1312  player2.attack + player2.defense + player2.experience */\n      tag_143\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_143:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1258:1318  (player2.attack + player2.defense + player2.experience) * r2 */\n      tag_144\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_144:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1245:1247  r1 */\n      dup4\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1223:1230  player1 */\n      dup7\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1223:1241  player1.experience */\n      0x03\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1205:1212  player1 */\n      dup8\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1205:1220  player1.defense */\n      0x02\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1188:1195  player1 */\n      dup9\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1188:1202  player1.attack */\n      0x01\n      add\n      sload\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1188:1220  player1.attack + player1.defense */\n      tag_145\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_145:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1188:1241  player1.attack + player1.defense + player1.experience */\n      tag_146\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_146:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1187:1247  (player1.attack + player1.defense + player1.experience) * r1 */\n      tag_147\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_147:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1180:1319  int256((player1.attack + player1.defense + player1.experience) * r1) - int256((player2.attack + player2.defense + player2.experience) * r2) */\n      tag_148\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_148:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1169:1319  int256 s = int256((player1.attack + player1.defense + player1.experience) * r1) - int256((player2.attack + player2.defense + player2.experience) * r2) */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1338:1339  0 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1334:1335  s */\n      dup2\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1334:1339  s > 0 */\n      sgt\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1330:1797  if (s > 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1373:1375  10 */\n      0x0a\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1355:1362  player1 */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1355:1369  player1.attack */\n      0x01\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1355:1375  player1.attack += 10 */\n      dup3\n      dup3\n      sload\n      tag_150\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_150:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1408:1410  10 */\n      0x0a\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1389:1396  player1 */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1389:1404  player1.defense */\n      0x02\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1389:1410  player1.defense += 10 */\n      dup3\n      dup3\n      sload\n      tag_151\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_151:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1446:1449  100 */\n      0x64\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1424:1431  player1 */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1424:1442  player1.experience */\n      0x03\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1424:1449  player1.experience += 100 */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1482:1483  1 */\n      0x01\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1464:1471  player2 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1464:1478  player2.attack */\n      0x01\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1464:1483  player2.attack += 1 */\n      dup3\n      dup3\n      sload\n      tag_153\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_153:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1516:1517  1 */\n      0x01\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1497:1504  player2 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1497:1512  player2.defense */\n      0x02\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1497:1517  player2.defense += 1 */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1553:1555  50 */\n      0x32\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1531:1538  player2 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1531:1549  player2.experience */\n      0x03\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1531:1555  player2.experience += 50 */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1330:1797  if (s > 0) {... */\n      jump(tag_156)\n    tag_149:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1604:1605  1 */\n      0x01\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1586:1593  player1 */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1586:1600  player1.attack */\n      0x01\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1586:1605  player1.attack += 1 */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1638:1639  1 */\n      0x01\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1619:1626  player1 */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1619:1634  player1.defense */\n      0x02\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1619:1639  player1.defense += 1 */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1675:1677  50 */\n      0x32\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1653:1660  player1 */\n      dup6\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1653:1671  player1.experience */\n      0x03\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1653:1677  player1.experience += 50 */\n      dup3\n      dup3\n      sload\n      tag_159\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_159:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1710:1712  10 */\n      0x0a\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1692:1699  player2 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1692:1706  player2.attack */\n      0x01\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1692:1712  player2.attack += 10 */\n      dup3\n      dup3\n      sload\n      tag_160\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1745:1747  10 */\n      0x0a\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1726:1733  player2 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1726:1741  player2.defense */\n      0x02\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1726:1747  player2.defense += 10 */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1783:1786  100 */\n      0x64\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1761:1768  player2 */\n      dup5\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1761:1779  player2.experience */\n      0x03\n      add\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1761:1786  player2.experience += 100 */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":1330:1797  if (s > 0) {... */\n    tag_156:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":848:1803  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":777:1803  function playerVersusPlayer(uint256 tokenId1, uint256 tokenId2) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2912:3126  function deletePlayerData(uint256 tokenId) external {... */\n    tag_55:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2996:3016  trustedNFTManagement */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2982:3016  msg.sender == trustedNFTManagement */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2982:2992  msg.sender */\n      caller\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2982:3016  msg.sender == trustedNFTManagement */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2974:3083  require(msg.sender == trustedNFTManagement, \"Only the trusted NFTManagement contract can call this function\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3100:3110  playerData */\n      0x03\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3100:3119  playerData[tokenId] */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3111:3118  tokenId */\n      dup3\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3100:3119  playerData[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":3093:3119  delete playerData[tokenId] */\n      dup1\n      dup3\n      add\n      0x00\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":2912:3126  function deletePlayerData(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":200:235  address public trustedNFTManagement */\n    tag_57:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":600:771  function random() private view returns (uint256) {... */\n    tag_91:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":640:647  uint256 */\n      0x00\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":279:281  80 */\n      0x50\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":749:750  1 */\n      0x01\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":279:281  80 */\n      0x50\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":325:328  100 */\n      0x64\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":723:746  RANDOM_MAX - RANDOM_MIN */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":723:750  RANDOM_MAX - RANDOM_MIN + 1 */\n      tag_186\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_186:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":701:716  block.timestamp */\n      timestamp\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":684:717  abi.encodePacked(block.timestamp) */\n      add(0x20, mload(0x40))\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":674:718  keccak256(abi.encodePacked(block.timestamp)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":666:719  uint256(keccak256(abi.encodePacked(block.timestamp))) */\n      0x00\n      shr\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":666:751  uint256(keccak256(abi.encodePacked(block.timestamp))) % (RANDOM_MAX - RANDOM_MIN + 1) */\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":666:764  uint256(keccak256(abi.encodePacked(block.timestamp))) % (RANDOM_MAX - RANDOM_MIN + 1) + RANDOM_MIN */\n      tag_191\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_191:\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":659:764  return uint256(keccak256(abi.encodePacked(block.timestamp))) % (RANDOM_MAX - RANDOM_MIN + 1) + RANDOM_MIN */\n      swap1\n      pop\n        /* \"trustless cross-chain/trading pair formation/Battlegame.sol\":600:771  function random() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_63:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_168:\n      pop\n      dup1\n      sload\n      tag_194\n      swap1\n      tag_75\n      jump\t// in\n    tag_194:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_196\n      jumpi\n      pop\n      jump(tag_195)\n    tag_196:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n    tag_195:\n      pop\n      jump\t// out\n    tag_198:\n    tag_199:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_199)\n    tag_200:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_201:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_202:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_203:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_204:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_205:\n        /* \"#utility.yul\":490:514   */\n      tag_256\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_204\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_257:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_206:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_259\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_205\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_18:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_262\n      tag_202\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":766:885   */\n    tag_261:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_263\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_206\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1124   */\n    tag_207:\n        /* \"#utility.yul\":1077:1083   */\n      0x00\n        /* \"#utility.yul\":1111:1116   */\n      dup2\n        /* \"#utility.yul\":1105:1117   */\n      mload\n        /* \"#utility.yul\":1095:1117   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1289   */\n    tag_208:\n        /* \"#utility.yul\":1204:1215   */\n      0x00\n        /* \"#utility.yul\":1238:1244   */\n      dup3\n        /* \"#utility.yul\":1233:1236   */\n      dup3\n        /* \"#utility.yul\":1226:1245   */\n      mstore\n        /* \"#utility.yul\":1278:1282   */\n      0x20\n        /* \"#utility.yul\":1273:1276   */\n      dup3\n        /* \"#utility.yul\":1269:1283   */\n      add\n        /* \"#utility.yul\":1254:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1130:1289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1295:1541   */\n    tag_209:\n        /* \"#utility.yul\":1376:1377   */\n      0x00\n        /* \"#utility.yul\":1386:1499   */\n    tag_267:\n        /* \"#utility.yul\":1400:1406   */\n      dup4\n        /* \"#utility.yul\":1397:1398   */\n      dup2\n        /* \"#utility.yul\":1394:1407   */\n      lt\n        /* \"#utility.yul\":1386:1499   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1485:1486   */\n      dup1\n        /* \"#utility.yul\":1480:1483   */\n      dup3\n        /* \"#utility.yul\":1476:1487   */\n      add\n        /* \"#utility.yul\":1470:1488   */\n      mload\n        /* \"#utility.yul\":1466:1467   */\n      dup2\n        /* \"#utility.yul\":1461:1464   */\n      dup5\n        /* \"#utility.yul\":1457:1468   */\n      add\n        /* \"#utility.yul\":1450:1489   */\n      mstore\n        /* \"#utility.yul\":1422:1424   */\n      0x20\n        /* \"#utility.yul\":1419:1420   */\n      dup2\n        /* \"#utility.yul\":1415:1425   */\n      add\n        /* \"#utility.yul\":1410:1425   */\n      swap1\n      pop\n        /* \"#utility.yul\":1386:1499   */\n      jump(tag_267)\n    tag_269:\n        /* \"#utility.yul\":1533:1534   */\n      0x00\n        /* \"#utility.yul\":1524:1530   */\n      dup5\n        /* \"#utility.yul\":1519:1522   */\n      dup5\n        /* \"#utility.yul\":1515:1531   */\n      add\n        /* \"#utility.yul\":1508:1535   */\n      mstore\n        /* \"#utility.yul\":1357:1541   */\n      pop\n        /* \"#utility.yul\":1295:1541   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1547:1649   */\n    tag_210:\n        /* \"#utility.yul\":1588:1594   */\n      0x00\n        /* \"#utility.yul\":1639:1641   */\n      0x1f\n        /* \"#utility.yul\":1635:1642   */\n      not\n        /* \"#utility.yul\":1630:1632   */\n      0x1f\n        /* \"#utility.yul\":1623:1628   */\n      dup4\n        /* \"#utility.yul\":1619:1633   */\n      add\n        /* \"#utility.yul\":1615:1643   */\n      and\n        /* \"#utility.yul\":1605:1643   */\n      swap1\n      pop\n        /* \"#utility.yul\":1547:1649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1655:2012   */\n    tag_211:\n        /* \"#utility.yul\":1733:1736   */\n      0x00\n        /* \"#utility.yul\":1761:1800   */\n      tag_272\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1761:1800   */\n      tag_207\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1816:1877   */\n      tag_273\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1865:1868   */\n      dup6\n        /* \"#utility.yul\":1816:1877   */\n      tag_208\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1809:1877   */\n      swap4\n      pop\n        /* \"#utility.yul\":1886:1951   */\n      tag_274\n        /* \"#utility.yul\":1944:1950   */\n      dup2\n        /* \"#utility.yul\":1939:1942   */\n      dup6\n        /* \"#utility.yul\":1932:1936   */\n      0x20\n        /* \"#utility.yul\":1925:1930   */\n      dup7\n        /* \"#utility.yul\":1921:1937   */\n      add\n        /* \"#utility.yul\":1886:1951   */\n      tag_209\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1976:2005   */\n      tag_275\n        /* \"#utility.yul\":1998:2004   */\n      dup2\n        /* \"#utility.yul\":1976:2005   */\n      tag_210\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1971:1974   */\n      dup5\n        /* \"#utility.yul\":1967:2006   */\n      add\n        /* \"#utility.yul\":1960:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:2012   */\n      pop\n        /* \"#utility.yul\":1655:2012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2018:2126   */\n    tag_212:\n        /* \"#utility.yul\":2095:2119   */\n      tag_277\n        /* \"#utility.yul\":2113:2118   */\n      dup2\n        /* \"#utility.yul\":2095:2119   */\n      tag_204\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2090:2093   */\n      dup3\n        /* \"#utility.yul\":2083:2120   */\n      mstore\n        /* \"#utility.yul\":2018:2126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2200:3169   */\n    tag_213:\n        /* \"#utility.yul\":2323:2326   */\n      0x00\n        /* \"#utility.yul\":2359:2363   */\n      0x80\n        /* \"#utility.yul\":2354:2357   */\n      dup4\n        /* \"#utility.yul\":2350:2364   */\n      add\n        /* \"#utility.yul\":2446:2450   */\n      0x00\n        /* \"#utility.yul\":2439:2444   */\n      dup4\n        /* \"#utility.yul\":2435:2451   */\n      add\n        /* \"#utility.yul\":2429:2452   */\n      mload\n        /* \"#utility.yul\":2499:2502   */\n      dup5\n        /* \"#utility.yul\":2493:2497   */\n      dup3\n        /* \"#utility.yul\":2489:2503   */\n      sub\n        /* \"#utility.yul\":2482:2486   */\n      0x00\n        /* \"#utility.yul\":2477:2480   */\n      dup7\n        /* \"#utility.yul\":2473:2487   */\n      add\n        /* \"#utility.yul\":2466:2504   */\n      mstore\n        /* \"#utility.yul\":2525:2598   */\n      tag_279\n        /* \"#utility.yul\":2593:2597   */\n      dup3\n        /* \"#utility.yul\":2579:2591   */\n      dup3\n        /* \"#utility.yul\":2525:2598   */\n      tag_211\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2517:2598   */\n      swap2\n      pop\n        /* \"#utility.yul\":2374:2609   */\n      pop\n        /* \"#utility.yul\":2693:2697   */\n      0x20\n        /* \"#utility.yul\":2686:2691   */\n      dup4\n        /* \"#utility.yul\":2682:2698   */\n      add\n        /* \"#utility.yul\":2676:2699   */\n      mload\n        /* \"#utility.yul\":2712:2775   */\n      tag_280\n        /* \"#utility.yul\":2769:2773   */\n      0x20\n        /* \"#utility.yul\":2764:2767   */\n      dup7\n        /* \"#utility.yul\":2760:2774   */\n      add\n        /* \"#utility.yul\":2746:2758   */\n      dup3\n        /* \"#utility.yul\":2712:2775   */\n      tag_212\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2619:2785   */\n      pop\n        /* \"#utility.yul\":2870:2874   */\n      0x40\n        /* \"#utility.yul\":2863:2868   */\n      dup4\n        /* \"#utility.yul\":2859:2875   */\n      add\n        /* \"#utility.yul\":2853:2876   */\n      mload\n        /* \"#utility.yul\":2889:2952   */\n      tag_281\n        /* \"#utility.yul\":2946:2950   */\n      0x40\n        /* \"#utility.yul\":2941:2944   */\n      dup7\n        /* \"#utility.yul\":2937:2951   */\n      add\n        /* \"#utility.yul\":2923:2935   */\n      dup3\n        /* \"#utility.yul\":2889:2952   */\n      tag_212\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2795:2962   */\n      pop\n        /* \"#utility.yul\":3050:3054   */\n      0x60\n        /* \"#utility.yul\":3043:3048   */\n      dup4\n        /* \"#utility.yul\":3039:3055   */\n      add\n        /* \"#utility.yul\":3033:3056   */\n      mload\n        /* \"#utility.yul\":3069:3132   */\n      tag_282\n        /* \"#utility.yul\":3126:3130   */\n      0x60\n        /* \"#utility.yul\":3121:3124   */\n      dup7\n        /* \"#utility.yul\":3117:3131   */\n      add\n        /* \"#utility.yul\":3103:3115   */\n      dup3\n        /* \"#utility.yul\":3069:3132   */\n      tag_212\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2972:3142   */\n      pop\n        /* \"#utility.yul\":3159:3163   */\n      dup1\n        /* \"#utility.yul\":3152:3163   */\n      swap2\n      pop\n        /* \"#utility.yul\":2328:3169   */\n      pop\n        /* \"#utility.yul\":2200:3169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3556   */\n    tag_21:\n        /* \"#utility.yul\":3322:3326   */\n      0x00\n        /* \"#utility.yul\":3360:3362   */\n      0x20\n        /* \"#utility.yul\":3349:3358   */\n      dup3\n        /* \"#utility.yul\":3345:3363   */\n      add\n        /* \"#utility.yul\":3337:3363   */\n      swap1\n      pop\n        /* \"#utility.yul\":3409:3418   */\n      dup2\n        /* \"#utility.yul\":3403:3407   */\n      dup2\n        /* \"#utility.yul\":3399:3419   */\n      sub\n        /* \"#utility.yul\":3395:3396   */\n      0x00\n        /* \"#utility.yul\":3384:3393   */\n      dup4\n        /* \"#utility.yul\":3380:3397   */\n      add\n        /* \"#utility.yul\":3373:3420   */\n      mstore\n        /* \"#utility.yul\":3437:3549   */\n      tag_284\n        /* \"#utility.yul\":3544:3548   */\n      dup2\n        /* \"#utility.yul\":3535:3541   */\n      dup5\n        /* \"#utility.yul\":3437:3549   */\n      tag_213\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3429:3549   */\n      swap1\n      pop\n        /* \"#utility.yul\":3175:3556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3562:3731   */\n    tag_214:\n        /* \"#utility.yul\":3646:3657   */\n      0x00\n        /* \"#utility.yul\":3680:3686   */\n      dup3\n        /* \"#utility.yul\":3675:3678   */\n      dup3\n        /* \"#utility.yul\":3668:3687   */\n      mstore\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3715:3718   */\n      dup3\n        /* \"#utility.yul\":3711:3725   */\n      add\n        /* \"#utility.yul\":3696:3725   */\n      swap1\n      pop\n        /* \"#utility.yul\":3562:3731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3737:4114   */\n    tag_215:\n        /* \"#utility.yul\":3825:3828   */\n      0x00\n        /* \"#utility.yul\":3853:3892   */\n      tag_287\n        /* \"#utility.yul\":3886:3891   */\n      dup3\n        /* \"#utility.yul\":3853:3892   */\n      tag_207\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3908:3979   */\n      tag_288\n        /* \"#utility.yul\":3972:3978   */\n      dup2\n        /* \"#utility.yul\":3967:3970   */\n      dup6\n        /* \"#utility.yul\":3908:3979   */\n      tag_214\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3901:3979   */\n      swap4\n      pop\n        /* \"#utility.yul\":3988:4053   */\n      tag_289\n        /* \"#utility.yul\":4046:4052   */\n      dup2\n        /* \"#utility.yul\":4041:4044   */\n      dup6\n        /* \"#utility.yul\":4034:4038   */\n      0x20\n        /* \"#utility.yul\":4027:4032   */\n      dup7\n        /* \"#utility.yul\":4023:4039   */\n      add\n        /* \"#utility.yul\":3988:4053   */\n      tag_209\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4078:4107   */\n      tag_290\n        /* \"#utility.yul\":4100:4106   */\n      dup2\n        /* \"#utility.yul\":4078:4107   */\n      tag_210\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4073:4076   */\n      dup5\n        /* \"#utility.yul\":4069:4108   */\n      add\n        /* \"#utility.yul\":4062:4108   */\n      swap2\n      pop\n        /* \"#utility.yul\":3829:4114   */\n      pop\n        /* \"#utility.yul\":3737:4114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4120:4238   */\n    tag_216:\n        /* \"#utility.yul\":4207:4231   */\n      tag_292\n        /* \"#utility.yul\":4225:4230   */\n      dup2\n        /* \"#utility.yul\":4207:4231   */\n      tag_204\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4202:4205   */\n      dup3\n        /* \"#utility.yul\":4195:4232   */\n      mstore\n        /* \"#utility.yul\":4120:4238   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4244:4888   */\n    tag_26:\n        /* \"#utility.yul\":4441:4445   */\n      0x00\n        /* \"#utility.yul\":4479:4482   */\n      0x80\n        /* \"#utility.yul\":4468:4477   */\n      dup3\n        /* \"#utility.yul\":4464:4483   */\n      add\n        /* \"#utility.yul\":4456:4483   */\n      swap1\n      pop\n        /* \"#utility.yul\":4529:4538   */\n      dup2\n        /* \"#utility.yul\":4523:4527   */\n      dup2\n        /* \"#utility.yul\":4519:4539   */\n      sub\n        /* \"#utility.yul\":4515:4516   */\n      0x00\n        /* \"#utility.yul\":4504:4513   */\n      dup4\n        /* \"#utility.yul\":4500:4517   */\n      add\n        /* \"#utility.yul\":4493:4540   */\n      mstore\n        /* \"#utility.yul\":4557:4635   */\n      tag_294\n        /* \"#utility.yul\":4630:4634   */\n      dup2\n        /* \"#utility.yul\":4621:4627   */\n      dup8\n        /* \"#utility.yul\":4557:4635   */\n      tag_215\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4549:4635   */\n      swap1\n      pop\n        /* \"#utility.yul\":4645:4717   */\n      tag_295\n        /* \"#utility.yul\":4713:4715   */\n      0x20\n        /* \"#utility.yul\":4702:4711   */\n      dup4\n        /* \"#utility.yul\":4698:4716   */\n      add\n        /* \"#utility.yul\":4689:4695   */\n      dup7\n        /* \"#utility.yul\":4645:4717   */\n      tag_216\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4727:4799   */\n      tag_296\n        /* \"#utility.yul\":4795:4797   */\n      0x40\n        /* \"#utility.yul\":4784:4793   */\n      dup4\n        /* \"#utility.yul\":4780:4798   */\n      add\n        /* \"#utility.yul\":4771:4777   */\n      dup6\n        /* \"#utility.yul\":4727:4799   */\n      tag_216\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4809:4881   */\n      tag_297\n        /* \"#utility.yul\":4877:4879   */\n      0x60\n        /* \"#utility.yul\":4866:4875   */\n      dup4\n        /* \"#utility.yul\":4862:4880   */\n      add\n        /* \"#utility.yul\":4853:4859   */\n      dup5\n        /* \"#utility.yul\":4809:4881   */\n      tag_216\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4244:4888   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4894:5020   */\n    tag_217:\n        /* \"#utility.yul\":4931:4938   */\n      0x00\n        /* \"#utility.yul\":4971:5013   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4964:4969   */\n      dup3\n        /* \"#utility.yul\":4960:5014   */\n      and\n        /* \"#utility.yul\":4949:5014   */\n      swap1\n      pop\n        /* \"#utility.yul\":4894:5020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5026:5122   */\n    tag_218:\n        /* \"#utility.yul\":5063:5070   */\n      0x00\n        /* \"#utility.yul\":5092:5116   */\n      tag_300\n        /* \"#utility.yul\":5110:5115   */\n      dup3\n        /* \"#utility.yul\":5092:5116   */\n      tag_217\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5081:5116   */\n      swap1\n      pop\n        /* \"#utility.yul\":5026:5122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5128:5250   */\n    tag_219:\n        /* \"#utility.yul\":5201:5225   */\n      tag_302\n        /* \"#utility.yul\":5219:5224   */\n      dup2\n        /* \"#utility.yul\":5201:5225   */\n      tag_218\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5194:5199   */\n      dup2\n        /* \"#utility.yul\":5191:5226   */\n      eq\n        /* \"#utility.yul\":5181:5244   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":5240:5241   */\n      0x00\n        /* \"#utility.yul\":5237:5238   */\n      dup1\n        /* \"#utility.yul\":5230:5242   */\n      revert\n        /* \"#utility.yul\":5181:5244   */\n    tag_303:\n        /* \"#utility.yul\":5128:5250   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5256:5395   */\n    tag_220:\n        /* \"#utility.yul\":5302:5307   */\n      0x00\n        /* \"#utility.yul\":5340:5346   */\n      dup2\n        /* \"#utility.yul\":5327:5347   */\n      calldataload\n        /* \"#utility.yul\":5318:5347   */\n      swap1\n      pop\n        /* \"#utility.yul\":5356:5389   */\n      tag_305\n        /* \"#utility.yul\":5383:5388   */\n      dup2\n        /* \"#utility.yul\":5356:5389   */\n      tag_219\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5256:5395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5401:5730   */\n    tag_29:\n        /* \"#utility.yul\":5460:5466   */\n      0x00\n        /* \"#utility.yul\":5509:5511   */\n      0x20\n        /* \"#utility.yul\":5497:5506   */\n      dup3\n        /* \"#utility.yul\":5488:5495   */\n      dup5\n        /* \"#utility.yul\":5484:5507   */\n      sub\n        /* \"#utility.yul\":5480:5512   */\n      slt\n        /* \"#utility.yul\":5477:5596   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5515:5594   */\n      tag_308\n      tag_202\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5477:5596   */\n    tag_307:\n        /* \"#utility.yul\":5635:5636   */\n      0x00\n        /* \"#utility.yul\":5660:5713   */\n      tag_309\n        /* \"#utility.yul\":5705:5712   */\n      dup5\n        /* \"#utility.yul\":5696:5702   */\n      dup3\n        /* \"#utility.yul\":5685:5694   */\n      dup6\n        /* \"#utility.yul\":5681:5703   */\n      add\n        /* \"#utility.yul\":5660:5713   */\n      tag_220\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5650:5713   */\n      swap2\n      pop\n        /* \"#utility.yul\":5606:5723   */\n      pop\n        /* \"#utility.yul\":5401:5730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5736:5853   */\n    tag_221:\n        /* \"#utility.yul\":5845:5846   */\n      0x00\n        /* \"#utility.yul\":5842:5843   */\n      dup1\n        /* \"#utility.yul\":5835:5847   */\n      revert\n        /* \"#utility.yul\":5859:6039   */\n    tag_222:\n        /* \"#utility.yul\":5907:5984   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5904:5905   */\n      0x00\n        /* \"#utility.yul\":5897:5985   */\n      mstore\n        /* \"#utility.yul\":6004:6008   */\n      0x41\n        /* \"#utility.yul\":6001:6002   */\n      0x04\n        /* \"#utility.yul\":5994:6009   */\n      mstore\n        /* \"#utility.yul\":6028:6032   */\n      0x24\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6018:6033   */\n      revert\n        /* \"#utility.yul\":6045:6326   */\n    tag_223:\n        /* \"#utility.yul\":6128:6155   */\n      tag_313\n        /* \"#utility.yul\":6150:6154   */\n      dup3\n        /* \"#utility.yul\":6128:6155   */\n      tag_210\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6120:6126   */\n      dup2\n        /* \"#utility.yul\":6116:6156   */\n      add\n        /* \"#utility.yul\":6258:6264   */\n      dup2\n        /* \"#utility.yul\":6246:6256   */\n      dup2\n        /* \"#utility.yul\":6243:6265   */\n      lt\n        /* \"#utility.yul\":6222:6240   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6210:6220   */\n      dup3\n        /* \"#utility.yul\":6207:6241   */\n      gt\n        /* \"#utility.yul\":6204:6266   */\n      or\n        /* \"#utility.yul\":6201:6289   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":6269:6287   */\n      tag_315\n      tag_222\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6201:6289   */\n    tag_314:\n        /* \"#utility.yul\":6309:6319   */\n      dup1\n        /* \"#utility.yul\":6305:6307   */\n      0x40\n        /* \"#utility.yul\":6298:6320   */\n      mstore\n        /* \"#utility.yul\":6088:6326   */\n      pop\n        /* \"#utility.yul\":6045:6326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6332:6461   */\n    tag_224:\n        /* \"#utility.yul\":6366:6372   */\n      0x00\n        /* \"#utility.yul\":6393:6413   */\n      tag_317\n      tag_201\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6383:6413   */\n      swap1\n      pop\n        /* \"#utility.yul\":6422:6455   */\n      tag_318\n        /* \"#utility.yul\":6450:6454   */\n      dup3\n        /* \"#utility.yul\":6442:6448   */\n      dup3\n        /* \"#utility.yul\":6422:6455   */\n      tag_223\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6332:6461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6467:6778   */\n    tag_225:\n        /* \"#utility.yul\":6544:6548   */\n      0x00\n        /* \"#utility.yul\":6634:6652   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6626:6632   */\n      dup3\n        /* \"#utility.yul\":6623:6653   */\n      gt\n        /* \"#utility.yul\":6620:6676   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6656:6674   */\n      tag_321\n      tag_222\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6620:6676   */\n    tag_320:\n        /* \"#utility.yul\":6706:6710   */\n      0x20\n        /* \"#utility.yul\":6698:6704   */\n      dup3\n        /* \"#utility.yul\":6694:6711   */\n      mul\n        /* \"#utility.yul\":6686:6711   */\n      swap1\n      pop\n        /* \"#utility.yul\":6766:6770   */\n      0x20\n        /* \"#utility.yul\":6760:6764   */\n      dup2\n        /* \"#utility.yul\":6756:6771   */\n      add\n        /* \"#utility.yul\":6748:6771   */\n      swap1\n      pop\n        /* \"#utility.yul\":6467:6778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6784:6901   */\n    tag_226:\n        /* \"#utility.yul\":6893:6894   */\n      0x00\n        /* \"#utility.yul\":6890:6891   */\n      dup1\n        /* \"#utility.yul\":6883:6895   */\n      revert\n        /* \"#utility.yul\":6924:7634   */\n    tag_227:\n        /* \"#utility.yul\":7020:7025   */\n      0x00\n        /* \"#utility.yul\":7045:7126   */\n      tag_324\n        /* \"#utility.yul\":7061:7125   */\n      tag_325\n        /* \"#utility.yul\":7118:7124   */\n      dup5\n        /* \"#utility.yul\":7061:7125   */\n      tag_225\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7045:7126   */\n      tag_224\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7036:7126   */\n      swap1\n      pop\n        /* \"#utility.yul\":7146:7151   */\n      dup1\n        /* \"#utility.yul\":7175:7181   */\n      dup4\n        /* \"#utility.yul\":7168:7173   */\n      dup3\n        /* \"#utility.yul\":7161:7182   */\n      mstore\n        /* \"#utility.yul\":7209:7213   */\n      0x20\n        /* \"#utility.yul\":7202:7207   */\n      dup3\n        /* \"#utility.yul\":7198:7214   */\n      add\n        /* \"#utility.yul\":7191:7214   */\n      swap1\n      pop\n        /* \"#utility.yul\":7262:7266   */\n      0x20\n        /* \"#utility.yul\":7254:7260   */\n      dup5\n        /* \"#utility.yul\":7250:7267   */\n      mul\n        /* \"#utility.yul\":7242:7248   */\n      dup4\n        /* \"#utility.yul\":7238:7268   */\n      add\n        /* \"#utility.yul\":7291:7294   */\n      dup6\n        /* \"#utility.yul\":7283:7289   */\n      dup2\n        /* \"#utility.yul\":7280:7295   */\n      gt\n        /* \"#utility.yul\":7277:7399   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":7310:7389   */\n      tag_327\n      tag_226\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7277:7399   */\n    tag_326:\n        /* \"#utility.yul\":7425:7431   */\n      dup4\n        /* \"#utility.yul\":7408:7628   */\n    tag_328:\n        /* \"#utility.yul\":7442:7448   */\n      dup2\n        /* \"#utility.yul\":7437:7440   */\n      dup2\n        /* \"#utility.yul\":7434:7449   */\n      lt\n        /* \"#utility.yul\":7408:7628   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":7517:7520   */\n      dup1\n        /* \"#utility.yul\":7546:7583   */\n      tag_331\n        /* \"#utility.yul\":7579:7582   */\n      dup9\n        /* \"#utility.yul\":7567:7577   */\n      dup3\n        /* \"#utility.yul\":7546:7583   */\n      tag_206\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7541:7544   */\n      dup5\n        /* \"#utility.yul\":7534:7584   */\n      mstore\n        /* \"#utility.yul\":7613:7617   */\n      0x20\n        /* \"#utility.yul\":7608:7611   */\n      dup5\n        /* \"#utility.yul\":7604:7618   */\n      add\n        /* \"#utility.yul\":7597:7618   */\n      swap4\n      pop\n        /* \"#utility.yul\":7484:7628   */\n      pop\n        /* \"#utility.yul\":7468:7472   */\n      0x20\n        /* \"#utility.yul\":7463:7466   */\n      dup2\n        /* \"#utility.yul\":7459:7473   */\n      add\n        /* \"#utility.yul\":7452:7473   */\n      swap1\n      pop\n        /* \"#utility.yul\":7408:7628   */\n      jump(tag_328)\n    tag_330:\n        /* \"#utility.yul\":7412:7433   */\n      pop\n        /* \"#utility.yul\":7026:7634   */\n      pop\n      pop\n        /* \"#utility.yul\":6924:7634   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8027   */\n    tag_228:\n        /* \"#utility.yul\":7728:7733   */\n      0x00\n        /* \"#utility.yul\":7777:7780   */\n      dup3\n        /* \"#utility.yul\":7770:7774   */\n      0x1f\n        /* \"#utility.yul\":7762:7768   */\n      dup4\n        /* \"#utility.yul\":7758:7775   */\n      add\n        /* \"#utility.yul\":7754:7781   */\n      slt\n        /* \"#utility.yul\":7744:7866   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7785:7864   */\n      tag_334\n      tag_221\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7744:7866   */\n    tag_333:\n        /* \"#utility.yul\":7902:7908   */\n      dup2\n        /* \"#utility.yul\":7889:7909   */\n      calldataload\n        /* \"#utility.yul\":7927:8021   */\n      tag_335\n        /* \"#utility.yul\":8017:8020   */\n      dup5\n        /* \"#utility.yul\":8009:8015   */\n      dup3\n        /* \"#utility.yul\":8002:8006   */\n      0x20\n        /* \"#utility.yul\":7994:8000   */\n      dup7\n        /* \"#utility.yul\":7990:8007   */\n      add\n        /* \"#utility.yul\":7927:8021   */\n      tag_227\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7918:8021   */\n      swap2\n      pop\n        /* \"#utility.yul\":7734:8027   */\n      pop\n        /* \"#utility.yul\":7657:8027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8033:8862   */\n    tag_33:\n        /* \"#utility.yul\":8135:8141   */\n      0x00\n        /* \"#utility.yul\":8143:8149   */\n      dup1\n        /* \"#utility.yul\":8151:8157   */\n      0x00\n        /* \"#utility.yul\":8200:8202   */\n      0x60\n        /* \"#utility.yul\":8188:8197   */\n      dup5\n        /* \"#utility.yul\":8179:8186   */\n      dup7\n        /* \"#utility.yul\":8175:8198   */\n      sub\n        /* \"#utility.yul\":8171:8203   */\n      slt\n        /* \"#utility.yul\":8168:8287   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":8206:8285   */\n      tag_338\n      tag_202\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8168:8287   */\n    tag_337:\n        /* \"#utility.yul\":8354:8355   */\n      0x00\n        /* \"#utility.yul\":8343:8352   */\n      dup5\n        /* \"#utility.yul\":8339:8356   */\n      add\n        /* \"#utility.yul\":8326:8357   */\n      calldataload\n        /* \"#utility.yul\":8384:8402   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8376:8382   */\n      dup2\n        /* \"#utility.yul\":8373:8403   */\n      gt\n        /* \"#utility.yul\":8370:8487   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8406:8485   */\n      tag_340\n      tag_203\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8370:8487   */\n    tag_339:\n        /* \"#utility.yul\":8511:8589   */\n      tag_341\n        /* \"#utility.yul\":8581:8588   */\n      dup7\n        /* \"#utility.yul\":8572:8578   */\n      dup3\n        /* \"#utility.yul\":8561:8570   */\n      dup8\n        /* \"#utility.yul\":8557:8579   */\n      add\n        /* \"#utility.yul\":8511:8589   */\n      tag_228\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8501:8589   */\n      swap4\n      pop\n        /* \"#utility.yul\":8297:8599   */\n      pop\n        /* \"#utility.yul\":8638:8640   */\n      0x20\n        /* \"#utility.yul\":8664:8717   */\n      tag_342\n        /* \"#utility.yul\":8709:8716   */\n      dup7\n        /* \"#utility.yul\":8700:8706   */\n      dup3\n        /* \"#utility.yul\":8689:8698   */\n      dup8\n        /* \"#utility.yul\":8685:8707   */\n      add\n        /* \"#utility.yul\":8664:8717   */\n      tag_206\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8654:8717   */\n      swap3\n      pop\n        /* \"#utility.yul\":8609:8727   */\n      pop\n        /* \"#utility.yul\":8766:8768   */\n      0x40\n        /* \"#utility.yul\":8792:8845   */\n      tag_343\n        /* \"#utility.yul\":8837:8844   */\n      dup7\n        /* \"#utility.yul\":8828:8834   */\n      dup3\n        /* \"#utility.yul\":8817:8826   */\n      dup8\n        /* \"#utility.yul\":8813:8835   */\n      add\n        /* \"#utility.yul\":8792:8845   */\n      tag_206\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8782:8845   */\n      swap2\n      pop\n        /* \"#utility.yul\":8737:8855   */\n      pop\n        /* \"#utility.yul\":8033:8862   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8868:8928   */\n    tag_229:\n        /* \"#utility.yul\":8896:8899   */\n      0x00\n        /* \"#utility.yul\":8917:8922   */\n      dup2\n        /* \"#utility.yul\":8910:8922   */\n      swap1\n      pop\n        /* \"#utility.yul\":8868:8928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8934:9076   */\n    tag_230:\n        /* \"#utility.yul\":8984:8993   */\n      0x00\n        /* \"#utility.yul\":9017:9070   */\n      tag_346\n        /* \"#utility.yul\":9035:9069   */\n      tag_347\n        /* \"#utility.yul\":9044:9068   */\n      tag_348\n        /* \"#utility.yul\":9062:9067   */\n      dup5\n        /* \"#utility.yul\":9044:9068   */\n      tag_217\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9035:9069   */\n      tag_229\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9017:9070   */\n      tag_217\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9004:9070   */\n      swap1\n      pop\n        /* \"#utility.yul\":8934:9076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9082:9208   */\n    tag_231:\n        /* \"#utility.yul\":9132:9141   */\n      0x00\n        /* \"#utility.yul\":9165:9202   */\n      tag_350\n        /* \"#utility.yul\":9196:9201   */\n      dup3\n        /* \"#utility.yul\":9165:9202   */\n      tag_230\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9152:9202   */\n      swap1\n      pop\n        /* \"#utility.yul\":9082:9208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9214:9355   */\n    tag_232:\n        /* \"#utility.yul\":9279:9288   */\n      0x00\n        /* \"#utility.yul\":9312:9349   */\n      tag_352\n        /* \"#utility.yul\":9343:9348   */\n      dup3\n        /* \"#utility.yul\":9312:9349   */\n      tag_231\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9299:9349   */\n      swap1\n      pop\n        /* \"#utility.yul\":9214:9355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9361:9522   */\n    tag_233:\n        /* \"#utility.yul\":9463:9515   */\n      tag_354\n        /* \"#utility.yul\":9509:9514   */\n      dup2\n        /* \"#utility.yul\":9463:9515   */\n      tag_232\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9458:9461   */\n      dup3\n        /* \"#utility.yul\":9451:9516   */\n      mstore\n        /* \"#utility.yul\":9361:9522   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9528:9780   */\n    tag_38:\n        /* \"#utility.yul\":9636:9640   */\n      0x00\n        /* \"#utility.yul\":9674:9676   */\n      0x20\n        /* \"#utility.yul\":9663:9672   */\n      dup3\n        /* \"#utility.yul\":9659:9677   */\n      add\n        /* \"#utility.yul\":9651:9677   */\n      swap1\n      pop\n        /* \"#utility.yul\":9687:9773   */\n      tag_356\n        /* \"#utility.yul\":9770:9771   */\n      0x00\n        /* \"#utility.yul\":9759:9768   */\n      dup4\n        /* \"#utility.yul\":9755:9772   */\n      add\n        /* \"#utility.yul\":9746:9752   */\n      dup5\n        /* \"#utility.yul\":9687:9773   */\n      tag_233\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9528:9780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9786:9904   */\n    tag_234:\n        /* \"#utility.yul\":9873:9897   */\n      tag_358\n        /* \"#utility.yul\":9891:9896   */\n      dup2\n        /* \"#utility.yul\":9873:9897   */\n      tag_218\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9868:9871   */\n      dup3\n        /* \"#utility.yul\":9861:9898   */\n      mstore\n        /* \"#utility.yul\":9786:9904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9910:10132   */\n    tag_48:\n        /* \"#utility.yul\":10003:10007   */\n      0x00\n        /* \"#utility.yul\":10041:10043   */\n      0x20\n        /* \"#utility.yul\":10030:10039   */\n      dup3\n        /* \"#utility.yul\":10026:10044   */\n      add\n        /* \"#utility.yul\":10018:10044   */\n      swap1\n      pop\n        /* \"#utility.yul\":10054:10125   */\n      tag_360\n        /* \"#utility.yul\":10122:10123   */\n      0x00\n        /* \"#utility.yul\":10111:10120   */\n      dup4\n        /* \"#utility.yul\":10107:10124   */\n      add\n        /* \"#utility.yul\":10098:10104   */\n      dup5\n        /* \"#utility.yul\":10054:10125   */\n      tag_234\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9910:10132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10138:10612   */\n    tag_51:\n        /* \"#utility.yul\":10206:10212   */\n      0x00\n        /* \"#utility.yul\":10214:10220   */\n      dup1\n        /* \"#utility.yul\":10263:10265   */\n      0x40\n        /* \"#utility.yul\":10251:10260   */\n      dup4\n        /* \"#utility.yul\":10242:10249   */\n      dup6\n        /* \"#utility.yul\":10238:10261   */\n      sub\n        /* \"#utility.yul\":10234:10266   */\n      slt\n        /* \"#utility.yul\":10231:10350   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":10269:10348   */\n      tag_363\n      tag_202\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10231:10350   */\n    tag_362:\n        /* \"#utility.yul\":10389:10390   */\n      0x00\n        /* \"#utility.yul\":10414:10467   */\n      tag_364\n        /* \"#utility.yul\":10459:10466   */\n      dup6\n        /* \"#utility.yul\":10450:10456   */\n      dup3\n        /* \"#utility.yul\":10439:10448   */\n      dup7\n        /* \"#utility.yul\":10435:10457   */\n      add\n        /* \"#utility.yul\":10414:10467   */\n      tag_206\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10404:10467   */\n      swap3\n      pop\n        /* \"#utility.yul\":10360:10477   */\n      pop\n        /* \"#utility.yul\":10516:10518   */\n      0x20\n        /* \"#utility.yul\":10542:10595   */\n      tag_365\n        /* \"#utility.yul\":10587:10594   */\n      dup6\n        /* \"#utility.yul\":10578:10584   */\n      dup3\n        /* \"#utility.yul\":10567:10576   */\n      dup7\n        /* \"#utility.yul\":10563:10585   */\n      add\n        /* \"#utility.yul\":10542:10595   */\n      tag_206\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10532:10595   */\n      swap2\n      pop\n        /* \"#utility.yul\":10487:10605   */\n      pop\n        /* \"#utility.yul\":10138:10612   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10618:10840   */\n    tag_66:\n        /* \"#utility.yul\":10711:10715   */\n      0x00\n        /* \"#utility.yul\":10749:10751   */\n      0x20\n        /* \"#utility.yul\":10738:10747   */\n      dup3\n        /* \"#utility.yul\":10734:10752   */\n      add\n        /* \"#utility.yul\":10726:10752   */\n      swap1\n      pop\n        /* \"#utility.yul\":10762:10833   */\n      tag_367\n        /* \"#utility.yul\":10830:10831   */\n      0x00\n        /* \"#utility.yul\":10819:10828   */\n      dup4\n        /* \"#utility.yul\":10815:10832   */\n      add\n        /* \"#utility.yul\":10806:10812   */\n      dup5\n        /* \"#utility.yul\":10762:10833   */\n      tag_216\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10618:10840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10846:10989   */\n    tag_235:\n        /* \"#utility.yul\":10903:10908   */\n      0x00\n        /* \"#utility.yul\":10934:10940   */\n      dup2\n        /* \"#utility.yul\":10928:10941   */\n      mload\n        /* \"#utility.yul\":10919:10941   */\n      swap1\n      pop\n        /* \"#utility.yul\":10950:10983   */\n      tag_369\n        /* \"#utility.yul\":10977:10982   */\n      dup2\n        /* \"#utility.yul\":10950:10983   */\n      tag_219\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10846:10989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10995:11346   */\n    tag_70:\n        /* \"#utility.yul\":11065:11071   */\n      0x00\n        /* \"#utility.yul\":11114:11116   */\n      0x20\n        /* \"#utility.yul\":11102:11111   */\n      dup3\n        /* \"#utility.yul\":11093:11100   */\n      dup5\n        /* \"#utility.yul\":11089:11112   */\n      sub\n        /* \"#utility.yul\":11085:11117   */\n      slt\n        /* \"#utility.yul\":11082:11201   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":11120:11199   */\n      tag_372\n      tag_202\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11082:11201   */\n    tag_371:\n        /* \"#utility.yul\":11240:11241   */\n      0x00\n        /* \"#utility.yul\":11265:11329   */\n      tag_373\n        /* \"#utility.yul\":11321:11328   */\n      dup5\n        /* \"#utility.yul\":11312:11318   */\n      dup3\n        /* \"#utility.yul\":11301:11310   */\n      dup6\n        /* \"#utility.yul\":11297:11319   */\n      add\n        /* \"#utility.yul\":11265:11329   */\n      tag_235\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":11255:11329   */\n      swap2\n      pop\n        /* \"#utility.yul\":11211:11339   */\n      pop\n        /* \"#utility.yul\":10995:11346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11352:11520   */\n    tag_236:\n        /* \"#utility.yul\":11492:11512   */\n      0x4e465420646f6573206e6f742065786973740000000000000000000000000000\n        /* \"#utility.yul\":11488:11489   */\n      0x00\n        /* \"#utility.yul\":11480:11486   */\n      dup3\n        /* \"#utility.yul\":11476:11490   */\n      add\n        /* \"#utility.yul\":11469:11513   */\n      mstore\n        /* \"#utility.yul\":11352:11520   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11526:11892   */\n    tag_237:\n        /* \"#utility.yul\":11668:11671   */\n      0x00\n        /* \"#utility.yul\":11689:11756   */\n      tag_376\n        /* \"#utility.yul\":11753:11755   */\n      0x12\n        /* \"#utility.yul\":11748:11751   */\n      dup4\n        /* \"#utility.yul\":11689:11756   */\n      tag_214\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11682:11756   */\n      swap2\n      pop\n        /* \"#utility.yul\":11765:11858   */\n      tag_377\n        /* \"#utility.yul\":11854:11857   */\n      dup3\n        /* \"#utility.yul\":11765:11858   */\n      tag_236\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11883:11885   */\n      0x20\n        /* \"#utility.yul\":11878:11881   */\n      dup3\n        /* \"#utility.yul\":11874:11886   */\n      add\n        /* \"#utility.yul\":11867:11886   */\n      swap1\n      pop\n        /* \"#utility.yul\":11526:11892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11898:12317   */\n    tag_73:\n        /* \"#utility.yul\":12064:12068   */\n      0x00\n        /* \"#utility.yul\":12102:12104   */\n      0x20\n        /* \"#utility.yul\":12091:12100   */\n      dup3\n        /* \"#utility.yul\":12087:12105   */\n      add\n        /* \"#utility.yul\":12079:12105   */\n      swap1\n      pop\n        /* \"#utility.yul\":12151:12160   */\n      dup2\n        /* \"#utility.yul\":12145:12149   */\n      dup2\n        /* \"#utility.yul\":12141:12161   */\n      sub\n        /* \"#utility.yul\":12137:12138   */\n      0x00\n        /* \"#utility.yul\":12126:12135   */\n      dup4\n        /* \"#utility.yul\":12122:12139   */\n      add\n        /* \"#utility.yul\":12115:12162   */\n      mstore\n        /* \"#utility.yul\":12179:12310   */\n      tag_379\n        /* \"#utility.yul\":12305:12309   */\n      dup2\n        /* \"#utility.yul\":12179:12310   */\n      tag_237\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12171:12310   */\n      swap1\n      pop\n        /* \"#utility.yul\":11898:12317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12323:12503   */\n    tag_238:\n        /* \"#utility.yul\":12371:12448   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12368:12369   */\n      0x00\n        /* \"#utility.yul\":12361:12449   */\n      mstore\n        /* \"#utility.yul\":12468:12472   */\n      0x22\n        /* \"#utility.yul\":12465:12466   */\n      0x04\n        /* \"#utility.yul\":12458:12473   */\n      mstore\n        /* \"#utility.yul\":12492:12496   */\n      0x24\n        /* \"#utility.yul\":12489:12490   */\n      0x00\n        /* \"#utility.yul\":12482:12497   */\n      revert\n        /* \"#utility.yul\":12509:12829   */\n    tag_75:\n        /* \"#utility.yul\":12553:12559   */\n      0x00\n        /* \"#utility.yul\":12590:12591   */\n      0x02\n        /* \"#utility.yul\":12584:12588   */\n      dup3\n        /* \"#utility.yul\":12580:12592   */\n      div\n        /* \"#utility.yul\":12570:12592   */\n      swap1\n      pop\n        /* \"#utility.yul\":12637:12638   */\n      0x01\n        /* \"#utility.yul\":12631:12635   */\n      dup3\n        /* \"#utility.yul\":12627:12639   */\n      and\n        /* \"#utility.yul\":12658:12676   */\n      dup1\n        /* \"#utility.yul\":12648:12729   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":12714:12718   */\n      0x7f\n        /* \"#utility.yul\":12706:12712   */\n      dup3\n        /* \"#utility.yul\":12702:12719   */\n      and\n        /* \"#utility.yul\":12692:12719   */\n      swap2\n      pop\n        /* \"#utility.yul\":12648:12729   */\n    tag_382:\n        /* \"#utility.yul\":12776:12778   */\n      0x20\n        /* \"#utility.yul\":12768:12774   */\n      dup3\n        /* \"#utility.yul\":12765:12779   */\n      lt\n        /* \"#utility.yul\":12745:12763   */\n      dup2\n        /* \"#utility.yul\":12742:12780   */\n      sub\n        /* \"#utility.yul\":12739:12823   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":12795:12813   */\n      tag_384\n      tag_238\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12739:12823   */\n    tag_383:\n        /* \"#utility.yul\":12560:12829   */\n      pop\n        /* \"#utility.yul\":12509:12829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12835:13015   */\n    tag_98:\n        /* \"#utility.yul\":12883:12960   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12880:12881   */\n      0x00\n        /* \"#utility.yul\":12873:12961   */\n      mstore\n        /* \"#utility.yul\":12980:12984   */\n      0x32\n        /* \"#utility.yul\":12977:12978   */\n      0x04\n        /* \"#utility.yul\":12970:12985   */\n      mstore\n        /* \"#utility.yul\":13004:13008   */\n      0x24\n        /* \"#utility.yul\":13001:13002   */\n      0x00\n        /* \"#utility.yul\":12994:13009   */\n      revert\n        /* \"#utility.yul\":13021:13201   */\n    tag_239:\n        /* \"#utility.yul\":13069:13146   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13066:13067   */\n      0x00\n        /* \"#utility.yul\":13059:13147   */\n      mstore\n        /* \"#utility.yul\":13166:13170   */\n      0x11\n        /* \"#utility.yul\":13163:13164   */\n      0x04\n        /* \"#utility.yul\":13156:13171   */\n      mstore\n        /* \"#utility.yul\":13190:13194   */\n      0x24\n        /* \"#utility.yul\":13187:13188   */\n      0x00\n        /* \"#utility.yul\":13180:13195   */\n      revert\n        /* \"#utility.yul\":13207:13398   */\n    tag_100:\n        /* \"#utility.yul\":13247:13250   */\n      0x00\n        /* \"#utility.yul\":13266:13286   */\n      tag_388\n        /* \"#utility.yul\":13284:13285   */\n      dup3\n        /* \"#utility.yul\":13266:13286   */\n      tag_204\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":13261:13286   */\n      swap2\n      pop\n        /* \"#utility.yul\":13300:13320   */\n      tag_389\n        /* \"#utility.yul\":13318:13319   */\n      dup4\n        /* \"#utility.yul\":13300:13320   */\n      tag_204\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13295:13320   */\n      swap3\n      pop\n        /* \"#utility.yul\":13343:13344   */\n      dup3\n        /* \"#utility.yul\":13340:13341   */\n      dup3\n        /* \"#utility.yul\":13336:13345   */\n      add\n        /* \"#utility.yul\":13329:13345   */\n      swap1\n      pop\n        /* \"#utility.yul\":13364:13367   */\n      dup1\n        /* \"#utility.yul\":13361:13362   */\n      dup3\n        /* \"#utility.yul\":13358:13368   */\n      gt\n        /* \"#utility.yul\":13355:13391   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":13371:13389   */\n      tag_391\n      tag_239\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":13355:13391   */\n    tag_390:\n        /* \"#utility.yul\":13207:13398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13404:13814   */\n    tag_103:\n        /* \"#utility.yul\":13444:13451   */\n      0x00\n        /* \"#utility.yul\":13467:13487   */\n      tag_393\n        /* \"#utility.yul\":13485:13486   */\n      dup3\n        /* \"#utility.yul\":13467:13487   */\n      tag_204\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":13462:13487   */\n      swap2\n      pop\n        /* \"#utility.yul\":13501:13521   */\n      tag_394\n        /* \"#utility.yul\":13519:13520   */\n      dup4\n        /* \"#utility.yul\":13501:13521   */\n      tag_204\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13496:13521   */\n      swap3\n      pop\n        /* \"#utility.yul\":13556:13557   */\n      dup3\n        /* \"#utility.yul\":13553:13554   */\n      dup3\n        /* \"#utility.yul\":13549:13558   */\n      mul\n        /* \"#utility.yul\":13578:13608   */\n      tag_395\n        /* \"#utility.yul\":13596:13607   */\n      dup2\n        /* \"#utility.yul\":13578:13608   */\n      tag_204\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":13567:13608   */\n      swap2\n      pop\n        /* \"#utility.yul\":13757:13758   */\n      dup3\n        /* \"#utility.yul\":13748:13755   */\n      dup3\n        /* \"#utility.yul\":13744:13759   */\n      div\n        /* \"#utility.yul\":13741:13742   */\n      dup5\n        /* \"#utility.yul\":13738:13760   */\n      eq\n        /* \"#utility.yul\":13718:13719   */\n      dup4\n        /* \"#utility.yul\":13711:13720   */\n      iszero\n        /* \"#utility.yul\":13691:13774   */\n      or\n        /* \"#utility.yul\":13668:13807   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":13787:13805   */\n      tag_397\n      tag_239\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13668:13807   */\n    tag_396:\n        /* \"#utility.yul\":13452:13814   */\n      pop\n        /* \"#utility.yul\":13404:13814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13820:13896   */\n    tag_240:\n        /* \"#utility.yul\":13856:13863   */\n      0x00\n        /* \"#utility.yul\":13885:13890   */\n      dup2\n        /* \"#utility.yul\":13874:13890   */\n      swap1\n      pop\n        /* \"#utility.yul\":13820:13896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13902:14277   */\n    tag_105:\n        /* \"#utility.yul\":13941:13944   */\n      0x00\n        /* \"#utility.yul\":13960:13979   */\n      tag_400\n        /* \"#utility.yul\":13977:13978   */\n      dup3\n        /* \"#utility.yul\":13960:13979   */\n      tag_240\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13955:13979   */\n      swap2\n      pop\n        /* \"#utility.yul\":13993:14012   */\n      tag_401\n        /* \"#utility.yul\":14010:14011   */\n      dup4\n        /* \"#utility.yul\":13993:14012   */\n      tag_240\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13988:14012   */\n      swap3\n      pop\n        /* \"#utility.yul\":14035:14036   */\n      dup3\n        /* \"#utility.yul\":14032:14033   */\n      dup3\n        /* \"#utility.yul\":14028:14037   */\n      add\n        /* \"#utility.yul\":14021:14037   */\n      swap1\n      pop\n        /* \"#utility.yul\":14233:14234   */\n      dup3\n        /* \"#utility.yul\":14228:14231   */\n      dup2\n        /* \"#utility.yul\":14224:14235   */\n      slt\n        /* \"#utility.yul\":14217:14236   */\n      iszero\n        /* \"#utility.yul\":14213:14214   */\n      0x00\n        /* \"#utility.yul\":14210:14211   */\n      dup4\n        /* \"#utility.yul\":14206:14215   */\n      slt\n        /* \"#utility.yul\":14202:14237   */\n      and\n        /* \"#utility.yul\":14185:14186   */\n      dup4\n        /* \"#utility.yul\":14180:14183   */\n      dup3\n        /* \"#utility.yul\":14176:14187   */\n      slt\n        /* \"#utility.yul\":14171:14172   */\n      0x00\n        /* \"#utility.yul\":14168:14169   */\n      dup5\n        /* \"#utility.yul\":14164:14173   */\n      slt\n        /* \"#utility.yul\":14157:14174   */\n      iszero\n        /* \"#utility.yul\":14153:14188   */\n      and\n        /* \"#utility.yul\":14137:14247   */\n      or\n        /* \"#utility.yul\":14134:14270   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":14250:14268   */\n      tag_403\n      tag_239\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14134:14270   */\n    tag_402:\n        /* \"#utility.yul\":13902:14277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14283:14516   */\n    tag_107:\n        /* \"#utility.yul\":14322:14325   */\n      0x00\n        /* \"#utility.yul\":14345:14369   */\n      tag_405\n        /* \"#utility.yul\":14363:14368   */\n      dup3\n        /* \"#utility.yul\":14345:14369   */\n      tag_204\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":14336:14369   */\n      swap2\n      pop\n        /* \"#utility.yul\":14391:14457   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14384:14389   */\n      dup3\n        /* \"#utility.yul\":14381:14458   */\n      sub\n        /* \"#utility.yul\":14378:14481   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":14461:14479   */\n      tag_407\n      tag_239\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14378:14481   */\n    tag_406:\n        /* \"#utility.yul\":14508:14509   */\n      0x01\n        /* \"#utility.yul\":14501:14506   */\n      dup3\n        /* \"#utility.yul\":14497:14510   */\n      add\n        /* \"#utility.yul\":14490:14510   */\n      swap1\n      pop\n        /* \"#utility.yul\":14283:14516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14522:14894   */\n    tag_111:\n        /* \"#utility.yul\":14561:14565   */\n      0x00\n        /* \"#utility.yul\":14581:14600   */\n      tag_409\n        /* \"#utility.yul\":14598:14599   */\n      dup3\n        /* \"#utility.yul\":14581:14600   */\n      tag_240\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":14576:14600   */\n      swap2\n      pop\n        /* \"#utility.yul\":14614:14633   */\n      tag_410\n        /* \"#utility.yul\":14631:14632   */\n      dup4\n        /* \"#utility.yul\":14614:14633   */\n      tag_240\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":14609:14633   */\n      swap3\n      pop\n        /* \"#utility.yul\":14657:14658   */\n      dup3\n        /* \"#utility.yul\":14654:14655   */\n      dup3\n        /* \"#utility.yul\":14650:14659   */\n      sub\n        /* \"#utility.yul\":14642:14659   */\n      swap1\n      pop\n        /* \"#utility.yul\":14851:14852   */\n      dup2\n        /* \"#utility.yul\":14845:14849   */\n      dup2\n        /* \"#utility.yul\":14841:14853   */\n      slt\n        /* \"#utility.yul\":14837:14838   */\n      0x00\n        /* \"#utility.yul\":14834:14835   */\n      dup5\n        /* \"#utility.yul\":14830:14839   */\n      slt\n        /* \"#utility.yul\":14826:14854   */\n      and\n        /* \"#utility.yul\":14809:14810   */\n      dup3\n        /* \"#utility.yul\":14803:14807   */\n      dup3\n        /* \"#utility.yul\":14799:14811   */\n      sgt\n        /* \"#utility.yul\":14794:14795   */\n      0x00\n        /* \"#utility.yul\":14791:14792   */\n      dup6\n        /* \"#utility.yul\":14787:14796   */\n      slt\n        /* \"#utility.yul\":14780:14797   */\n      iszero\n        /* \"#utility.yul\":14776:14812   */\n      and\n        /* \"#utility.yul\":14760:14864   */\n      or\n        /* \"#utility.yul\":14757:14887   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":14867:14885   */\n      tag_412\n      tag_239\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":14757:14887   */\n    tag_411:\n        /* \"#utility.yul\":14522:14894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14900:15149   */\n    tag_241:\n        /* \"#utility.yul\":15040:15074   */\n      0x4f6e6c79207468652074727573746564204e46544d616e6167656d656e742063\n        /* \"#utility.yul\":15036:15037   */\n      0x00\n        /* \"#utility.yul\":15028:15034   */\n      dup3\n        /* \"#utility.yul\":15024:15038   */\n      add\n        /* \"#utility.yul\":15017:15075   */\n      mstore\n        /* \"#utility.yul\":15109:15141   */\n      0x6f6e74726163742063616e2063616c6c20746869732066756e6374696f6e0000\n        /* \"#utility.yul\":15104:15106   */\n      0x20\n        /* \"#utility.yul\":15096:15102   */\n      dup3\n        /* \"#utility.yul\":15092:15107   */\n      add\n        /* \"#utility.yul\":15085:15142   */\n      mstore\n        /* \"#utility.yul\":14900:15149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15155:15521   */\n    tag_242:\n        /* \"#utility.yul\":15297:15300   */\n      0x00\n        /* \"#utility.yul\":15318:15385   */\n      tag_415\n        /* \"#utility.yul\":15382:15384   */\n      0x3e\n        /* \"#utility.yul\":15377:15380   */\n      dup4\n        /* \"#utility.yul\":15318:15385   */\n      tag_214\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":15311:15385   */\n      swap2\n      pop\n        /* \"#utility.yul\":15394:15487   */\n      tag_416\n        /* \"#utility.yul\":15483:15486   */\n      dup3\n        /* \"#utility.yul\":15394:15487   */\n      tag_241\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":15512:15514   */\n      0x40\n        /* \"#utility.yul\":15507:15510   */\n      dup3\n        /* \"#utility.yul\":15503:15515   */\n      add\n        /* \"#utility.yul\":15496:15515   */\n      swap1\n      pop\n        /* \"#utility.yul\":15155:15521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15527:15946   */\n    tag_166:\n        /* \"#utility.yul\":15693:15697   */\n      0x00\n        /* \"#utility.yul\":15731:15733   */\n      0x20\n        /* \"#utility.yul\":15720:15729   */\n      dup3\n        /* \"#utility.yul\":15716:15734   */\n      add\n        /* \"#utility.yul\":15708:15734   */\n      swap1\n      pop\n        /* \"#utility.yul\":15780:15789   */\n      dup2\n        /* \"#utility.yul\":15774:15778   */\n      dup2\n        /* \"#utility.yul\":15770:15790   */\n      sub\n        /* \"#utility.yul\":15766:15767   */\n      0x00\n        /* \"#utility.yul\":15755:15764   */\n      dup4\n        /* \"#utility.yul\":15751:15768   */\n      add\n        /* \"#utility.yul\":15744:15791   */\n      mstore\n        /* \"#utility.yul\":15808:15939   */\n      tag_418\n        /* \"#utility.yul\":15934:15938   */\n      dup2\n        /* \"#utility.yul\":15808:15939   */\n      tag_242\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":15800:15939   */\n      swap1\n      pop\n        /* \"#utility.yul\":15527:15946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15952:16177   */\n    tag_243:\n        /* \"#utility.yul\":16092:16126   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16088:16089   */\n      0x00\n        /* \"#utility.yul\":16080:16086   */\n      dup3\n        /* \"#utility.yul\":16076:16090   */\n      add\n        /* \"#utility.yul\":16069:16127   */\n      mstore\n        /* \"#utility.yul\":16161:16169   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16156:16158   */\n      0x20\n        /* \"#utility.yul\":16148:16154   */\n      dup3\n        /* \"#utility.yul\":16144:16159   */\n      add\n        /* \"#utility.yul\":16137:16170   */\n      mstore\n        /* \"#utility.yul\":15952:16177   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16183:16549   */\n    tag_244:\n        /* \"#utility.yul\":16325:16328   */\n      0x00\n        /* \"#utility.yul\":16346:16413   */\n      tag_421\n        /* \"#utility.yul\":16410:16412   */\n      0x26\n        /* \"#utility.yul\":16405:16408   */\n      dup4\n        /* \"#utility.yul\":16346:16413   */\n      tag_214\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":16339:16413   */\n      swap2\n      pop\n        /* \"#utility.yul\":16422:16515   */\n      tag_422\n        /* \"#utility.yul\":16511:16514   */\n      dup3\n        /* \"#utility.yul\":16422:16515   */\n      tag_243\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":16540:16542   */\n      0x40\n        /* \"#utility.yul\":16535:16538   */\n      dup3\n        /* \"#utility.yul\":16531:16543   */\n      add\n        /* \"#utility.yul\":16524:16543   */\n      swap1\n      pop\n        /* \"#utility.yul\":16183:16549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16555:16974   */\n    tag_174:\n        /* \"#utility.yul\":16721:16725   */\n      0x00\n        /* \"#utility.yul\":16759:16761   */\n      0x20\n        /* \"#utility.yul\":16748:16757   */\n      dup3\n        /* \"#utility.yul\":16744:16762   */\n      add\n        /* \"#utility.yul\":16736:16762   */\n      swap1\n      pop\n        /* \"#utility.yul\":16808:16817   */\n      dup2\n        /* \"#utility.yul\":16802:16806   */\n      dup2\n        /* \"#utility.yul\":16798:16818   */\n      sub\n        /* \"#utility.yul\":16794:16795   */\n      0x00\n        /* \"#utility.yul\":16783:16792   */\n      dup4\n        /* \"#utility.yul\":16779:16796   */\n      add\n        /* \"#utility.yul\":16772:16819   */\n      mstore\n        /* \"#utility.yul\":16836:16967   */\n      tag_424\n        /* \"#utility.yul\":16962:16966   */\n      dup2\n        /* \"#utility.yul\":16836:16967   */\n      tag_244\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":16828:16967   */\n      swap1\n      pop\n        /* \"#utility.yul\":16555:16974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16980:17162   */\n    tag_245:\n        /* \"#utility.yul\":17120:17154   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17116:17117   */\n      0x00\n        /* \"#utility.yul\":17108:17114   */\n      dup3\n        /* \"#utility.yul\":17104:17118   */\n      add\n        /* \"#utility.yul\":17097:17155   */\n      mstore\n        /* \"#utility.yul\":16980:17162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17168:17534   */\n    tag_246:\n        /* \"#utility.yul\":17310:17313   */\n      0x00\n        /* \"#utility.yul\":17331:17398   */\n      tag_427\n        /* \"#utility.yul\":17395:17397   */\n      0x20\n        /* \"#utility.yul\":17390:17393   */\n      dup4\n        /* \"#utility.yul\":17331:17398   */\n      tag_214\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":17324:17398   */\n      swap2\n      pop\n        /* \"#utility.yul\":17407:17500   */\n      tag_428\n        /* \"#utility.yul\":17496:17499   */\n      dup3\n        /* \"#utility.yul\":17407:17500   */\n      tag_245\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":17525:17527   */\n      0x20\n        /* \"#utility.yul\":17520:17523   */\n      dup3\n        /* \"#utility.yul\":17516:17528   */\n      add\n        /* \"#utility.yul\":17509:17528   */\n      swap1\n      pop\n        /* \"#utility.yul\":17168:17534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17540:17959   */\n    tag_182:\n        /* \"#utility.yul\":17706:17710   */\n      0x00\n        /* \"#utility.yul\":17744:17746   */\n      0x20\n        /* \"#utility.yul\":17733:17742   */\n      dup3\n        /* \"#utility.yul\":17729:17747   */\n      add\n        /* \"#utility.yul\":17721:17747   */\n      swap1\n      pop\n        /* \"#utility.yul\":17793:17802   */\n      dup2\n        /* \"#utility.yul\":17787:17791   */\n      dup2\n        /* \"#utility.yul\":17783:17803   */\n      sub\n        /* \"#utility.yul\":17779:17780   */\n      0x00\n        /* \"#utility.yul\":17768:17777   */\n      dup4\n        /* \"#utility.yul\":17764:17781   */\n      add\n        /* \"#utility.yul\":17757:17804   */\n      mstore\n        /* \"#utility.yul\":17821:17952   */\n      tag_430\n        /* \"#utility.yul\":17947:17951   */\n      dup2\n        /* \"#utility.yul\":17821:17952   */\n      tag_246\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":17813:17952   */\n      swap1\n      pop\n        /* \"#utility.yul\":17540:17959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17965:18159   */\n    tag_185:\n        /* \"#utility.yul\":18005:18009   */\n      0x00\n        /* \"#utility.yul\":18025:18045   */\n      tag_432\n        /* \"#utility.yul\":18043:18044   */\n      dup3\n        /* \"#utility.yul\":18025:18045   */\n      tag_204\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":18020:18045   */\n      swap2\n      pop\n        /* \"#utility.yul\":18059:18079   */\n      tag_433\n        /* \"#utility.yul\":18077:18078   */\n      dup4\n        /* \"#utility.yul\":18059:18079   */\n      tag_204\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":18054:18079   */\n      swap3\n      pop\n        /* \"#utility.yul\":18103:18104   */\n      dup3\n        /* \"#utility.yul\":18100:18101   */\n      dup3\n        /* \"#utility.yul\":18096:18105   */\n      sub\n        /* \"#utility.yul\":18088:18105   */\n      swap1\n      pop\n        /* \"#utility.yul\":18127:18128   */\n      dup2\n        /* \"#utility.yul\":18121:18125   */\n      dup2\n        /* \"#utility.yul\":18118:18129   */\n      gt\n        /* \"#utility.yul\":18115:18152   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":18132:18150   */\n      tag_435\n      tag_239\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":18115:18152   */\n    tag_434:\n        /* \"#utility.yul\":17965:18159   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18165:18244   */\n    tag_247:\n        /* \"#utility.yul\":18204:18211   */\n      0x00\n        /* \"#utility.yul\":18233:18238   */\n      dup2\n        /* \"#utility.yul\":18222:18238   */\n      swap1\n      pop\n        /* \"#utility.yul\":18165:18244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18250:18407   */\n    tag_248:\n        /* \"#utility.yul\":18355:18400   */\n      tag_438\n        /* \"#utility.yul\":18375:18399   */\n      tag_439\n        /* \"#utility.yul\":18393:18398   */\n      dup3\n        /* \"#utility.yul\":18375:18399   */\n      tag_204\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":18355:18400   */\n      tag_247\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":18350:18353   */\n      dup3\n        /* \"#utility.yul\":18343:18401   */\n      mstore\n        /* \"#utility.yul\":18250:18407   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18413:18669   */\n    tag_188:\n        /* \"#utility.yul\":18525:18528   */\n      0x00\n        /* \"#utility.yul\":18540:18615   */\n      tag_441\n        /* \"#utility.yul\":18611:18614   */\n      dup3\n        /* \"#utility.yul\":18602:18608   */\n      dup5\n        /* \"#utility.yul\":18540:18615   */\n      tag_248\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":18640:18642   */\n      0x20\n        /* \"#utility.yul\":18635:18638   */\n      dup3\n        /* \"#utility.yul\":18631:18643   */\n      add\n        /* \"#utility.yul\":18624:18643   */\n      swap2\n      pop\n        /* \"#utility.yul\":18660:18663   */\n      dup2\n        /* \"#utility.yul\":18653:18663   */\n      swap1\n      pop\n        /* \"#utility.yul\":18413:18669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18675:18855   */\n    tag_249:\n        /* \"#utility.yul\":18723:18800   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18720:18721   */\n      0x00\n        /* \"#utility.yul\":18713:18801   */\n      mstore\n        /* \"#utility.yul\":18820:18824   */\n      0x12\n        /* \"#utility.yul\":18817:18818   */\n      0x04\n        /* \"#utility.yul\":18810:18825   */\n      mstore\n        /* \"#utility.yul\":18844:18848   */\n      0x24\n        /* \"#utility.yul\":18841:18842   */\n      0x00\n        /* \"#utility.yul\":18834:18849   */\n      revert\n        /* \"#utility.yul\":18861:19037   */\n    tag_190:\n        /* \"#utility.yul\":18893:18894   */\n      0x00\n        /* \"#utility.yul\":18910:18930   */\n      tag_444\n        /* \"#utility.yul\":18928:18929   */\n      dup3\n        /* \"#utility.yul\":18910:18930   */\n      tag_204\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":18905:18930   */\n      swap2\n      pop\n        /* \"#utility.yul\":18944:18964   */\n      tag_445\n        /* \"#utility.yul\":18962:18963   */\n      dup4\n        /* \"#utility.yul\":18944:18964   */\n      tag_204\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":18939:18964   */\n      swap3\n      pop\n        /* \"#utility.yul\":18983:18984   */\n      dup3\n        /* \"#utility.yul\":18973:19008   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":18988:19006   */\n      tag_447\n      tag_249\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":18973:19008   */\n    tag_446:\n        /* \"#utility.yul\":19029:19030   */\n      dup3\n        /* \"#utility.yul\":19026:19027   */\n      dup3\n        /* \"#utility.yul\":19022:19031   */\n      mod\n        /* \"#utility.yul\":19017:19031   */\n      swap1\n      pop\n        /* \"#utility.yul\":18861:19037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209e59051d326f852a68197e4a72d07c590f8e92dd2d55e05c5ee0fbeb51616c3364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_240": {
									"entryPoint": 159,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 167,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001af438038062001af48339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b6118dd80620002176000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101a25780638da5cb5b146101ac578063b67836f8146101ca578063d7b8d485146101e6578063e00974ff14610202578063f2fde38b14610220576100b4565b80630ad4c4f4146100b95780630aec4ed1146100e957806325cab8091461011c57806338a2c0a31461013857806347ccca02146101545780635f52789b14610172575b600080fd5b6100d360048036038101906100ce9190610e55565b61023c565b6040516100e09190610f84565b60405180910390f35b61010360048036038101906100fe9190610e55565b610423565b6040516101139493929190610fff565b60405180910390f35b610136600480360381019061013191906110a9565b6104db565b005b610152600480360381019061014d919061121e565b610527565b005b61015c610709565b60405161016991906112ec565b60405180910390f35b61018c60048036038101906101879190610e55565b61072f565b6040516101999190610f84565b60405180910390f35b6101aa61080c565b005b6101b4610820565b6040516101c19190611316565b60405180910390f35b6101e460048036038101906101df9190611331565b610849565b005b61020060048036038101906101fb9190610e55565b610a61565b005b61020a610b32565b6040516102179190611316565b60405180910390f35b61023a600480360381019061023591906110a9565b610b58565b005b610244610d86565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016102b79190611371565b602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f891906113a1565b73ffffffffffffffffffffffffffffffffffffffff160361034e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103459061141a565b60405180910390fd5b6003600083815260200190815260200160002060405180608001604052908160008201805461037c90611469565b80601f01602080910402602001604051908101604052809291908181526020018280546103a890611469565b80156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820154815250509050919050565b600360205280600052604060002060009150905080600001805461044690611469565b80601f016020809104026020016040519081016040528092919081815260200182805461047290611469565b80156104bf5780601f10610494576101008083540402835291602001916104bf565b820191906000526020600020905b8154815290600101906020018083116104a257829003601f168201915b5050505050908060010154908060020154908060030154905084565b6104e3610bdb565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000835190506000610537610c59565b90506000610543610c59565b90506000805b848110156105d1576000600360008a848151811061056a5761056961149a565b5b6020026020010151815260200190815260200160002090508481600301548260020154836001015461059c91906114f8565b6105a691906114f8565b6105b0919061152c565b836105bb9190611578565b92505080806105c9906115bc565b915050610549565b508185876105df91906114f8565b6105e9919061152c565b816105f49190611604565b905060005b848110156106ff576000600360008a848151811061061a5761061961149a565b5b602002602001015181526020019081526020016000209050600083131561069557606481600101600082825461065091906114f8565b92505081905550606481600201600082825461066c91906114f8565b925050819055506103e881600301600082825461068991906114f8565b925050819055506106eb565b60328160010160008282546106aa91906114f8565b9250508190555060328160020160008282546106c691906114f8565b925050819055506101f48160030160008282546106e391906114f8565b925050819055505b5080806106f7906115bc565b9150506105f9565b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610737610d86565b6003600083815260200190815260200160002060405180608001604052908160008201805461076590611469565b80601f016020809104026020016040519081016040528092919081815260200182805461079190611469565b80156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820154815250509050919050565b610814610bdb565b61081e6000610cba565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060036000848152602001908152602001600020905060006003600084815260200190815260200160002090506000610881610c59565b9050600061088d610c59565b90506000818460030154856002015486600101546108ab91906114f8565b6108b591906114f8565b6108bf919061152c565b838660030154876002015488600101546108d991906114f8565b6108e391906114f8565b6108ed919061152c565b6108f79190611604565b905060008113156109af57600a85600101600082825461091791906114f8565b92505081905550600a85600201600082825461093391906114f8565b92505081905550606485600301600082825461094f91906114f8565b92505081905550600184600101600082825461096b91906114f8565b92505081905550600184600201600082825461098791906114f8565b9250508190555060328460030160008282546109a391906114f8565b92505081905550610a58565b60018560010160008282546109c491906114f8565b9250508190555060018560020160008282546109e091906114f8565b9250508190555060328560030160008282546109fc91906114f8565b92505081905550600a846001016000828254610a1891906114f8565b92505081905550600a846002016000828254610a3491906114f8565b925050819055506064846003016000828254610a5091906114f8565b925050819055505b50505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae8906116b9565b60405180910390fd5b6003600082815260200190815260200160002060008082016000610b159190610dae565b600182016000905560028201600090556003820160009055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b60610bdb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc69061174b565b60405180910390fd5b610bd881610cba565b50565b610be3610d7e565b73ffffffffffffffffffffffffffffffffffffffff16610c01610820565b73ffffffffffffffffffffffffffffffffffffffff1614610c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4e906117b7565b60405180910390fd5b565b60006050600160506064610c6d91906117d7565b610c7791906114f8565b42604051602001610c88919061182c565b6040516020818303038152906040528051906020012060001c610cab9190611876565b610cb591906114f8565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060800160405280606081526020016000815260200160008152602001600081525090565b508054610dba90611469565b6000825580601f10610dcc5750610deb565b601f016020900490600052602060002090810190610dea9190610dee565b5b50565b5b80821115610e07576000816000905550600101610def565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610e3281610e1f565b8114610e3d57600080fd5b50565b600081359050610e4f81610e29565b92915050565b600060208284031215610e6b57610e6a610e15565b5b6000610e7984828501610e40565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ebc578082015181840152602081019050610ea1565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ee482610e82565b610eee8185610e8d565b9350610efe818560208601610e9e565b610f0781610ec8565b840191505092915050565b610f1b81610e1f565b82525050565b60006080830160008301518482036000860152610f3e8282610ed9565b9150506020830151610f536020860182610f12565b506040830151610f666040860182610f12565b506060830151610f796060860182610f12565b508091505092915050565b60006020820190508181036000830152610f9e8184610f21565b905092915050565b600082825260208201905092915050565b6000610fc282610e82565b610fcc8185610fa6565b9350610fdc818560208601610e9e565b610fe581610ec8565b840191505092915050565b610ff981610e1f565b82525050565b600060808201905081810360008301526110198187610fb7565b90506110286020830186610ff0565b6110356040830185610ff0565b6110426060830184610ff0565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110768261104b565b9050919050565b6110868161106b565b811461109157600080fd5b50565b6000813590506110a38161107d565b92915050565b6000602082840312156110bf576110be610e15565b5b60006110cd84828501611094565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61111382610ec8565b810181811067ffffffffffffffff82111715611132576111316110db565b5b80604052505050565b6000611145610e0b565b9050611151828261110a565b919050565b600067ffffffffffffffff821115611171576111706110db565b5b602082029050602081019050919050565b600080fd5b600061119a61119584611156565b61113b565b905080838252602082019050602084028301858111156111bd576111bc611182565b5b835b818110156111e657806111d28882610e40565b8452602084019350506020810190506111bf565b5050509392505050565b600082601f830112611205576112046110d6565b5b8135611215848260208601611187565b91505092915050565b60008060006060848603121561123757611236610e15565b5b600084013567ffffffffffffffff81111561125557611254610e1a565b5b611261868287016111f0565b935050602061127286828701610e40565b925050604061128386828701610e40565b9150509250925092565b6000819050919050565b60006112b26112ad6112a88461104b565b61128d565b61104b565b9050919050565b60006112c482611297565b9050919050565b60006112d6826112b9565b9050919050565b6112e6816112cb565b82525050565b600060208201905061130160008301846112dd565b92915050565b6113108161106b565b82525050565b600060208201905061132b6000830184611307565b92915050565b6000806040838503121561134857611347610e15565b5b600061135685828601610e40565b925050602061136785828601610e40565b9150509250929050565b60006020820190506113866000830184610ff0565b92915050565b60008151905061139b8161107d565b92915050565b6000602082840312156113b7576113b6610e15565b5b60006113c58482850161138c565b91505092915050565b7f4e465420646f6573206e6f742065786973740000000000000000000000000000600082015250565b6000611404601283610fa6565b915061140f826113ce565b602082019050919050565b60006020820190508181036000830152611433816113f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061148157607f821691505b6020821081036114945761149361143a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061150382610e1f565b915061150e83610e1f565b9250828201905080821115611526576115256114c9565b5b92915050565b600061153782610e1f565b915061154283610e1f565b925082820261155081610e1f565b91508282048414831517611567576115666114c9565b5b5092915050565b6000819050919050565b60006115838261156e565b915061158e8361156e565b9250828201905082811215600083121683821260008412151617156115b6576115b56114c9565b5b92915050565b60006115c782610e1f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115f9576115f86114c9565b5b600182019050919050565b600061160f8261156e565b915061161a8361156e565b9250828203905081811260008412168282136000851215161715611641576116406114c9565b5b92915050565b7f4f6e6c79207468652074727573746564204e46544d616e6167656d656e74206360008201527f6f6e74726163742063616e2063616c6c20746869732066756e6374696f6e0000602082015250565b60006116a3603e83610fa6565b91506116ae82611647565b604082019050919050565b600060208201905081810360008301526116d281611696565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611735602683610fa6565b9150611740826116d9565b604082019050919050565b6000602082019050818103600083015261176481611728565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117a1602083610fa6565b91506117ac8261176b565b602082019050919050565b600060208201905081810360008301526117d081611794565b9050919050565b60006117e282610e1f565b91506117ed83610e1f565b9250828203905081811115611805576118046114c9565b5b92915050565b6000819050919050565b61182661182182610e1f565b61180b565b82525050565b60006118388284611815565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061188182610e1f565b915061188c83610e1f565b92508261189c5761189b611847565b5b82820690509291505056fea26469706673582212209e59051d326f852a68197e4a72d07c590f8e92dd2d55e05c5ee0fbeb51616c3364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1AF4 CODESIZE SUB DUP1 PUSH3 0x1AF4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1D5 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x9F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x207 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19D DUP3 PUSH3 0x170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AF DUP2 PUSH3 0x190 JUMP JUMPDEST DUP2 EQ PUSH3 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1CF DUP2 PUSH3 0x1A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1EE JUMPI PUSH3 0x1ED PUSH3 0x16B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1FE DUP5 DUP3 DUP6 ADD PUSH3 0x1BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18DD DUP1 PUSH3 0x217 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xB67836F8 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xD7B8D485 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xE00974FF EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x220 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xAD4C4F4 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xAEC4ED1 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x25CAB809 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x38A2C0A3 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x5F52789B EQ PUSH2 0x172 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15C PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x80C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20A PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x37C SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x446 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x472 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x494 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0xBDB JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x537 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x543 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x56A JUMPI PUSH2 0x569 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST DUP4 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x5C9 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x549 JUMP JUMPDEST POP DUP2 DUP6 DUP8 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST DUP2 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x61A JUMPI PUSH2 0x619 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 SGT ISZERO PUSH2 0x695 JUMPI PUSH1 0x64 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x650 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x32 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x32 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP DUP1 DUP1 PUSH2 0x6F7 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5F9 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x737 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x765 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x791 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x814 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x81E PUSH1 0x0 PUSH2 0xCBA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x881 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x88D PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x2 ADD SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST DUP4 DUP7 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x2 ADD SLOAD DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x9AF JUMPI PUSH1 0xA DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x32 DUP5 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x32 DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA18 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 DUP5 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE8 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0xB15 SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB60 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD8 DUP2 PUSH2 0xCBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0xD7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC01 PUSH2 0x820 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4E SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x50 PUSH1 0x1 PUSH1 0x50 PUSH1 0x64 PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xDBA SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xDCC JUMPI POP PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xDEF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE32 DUP2 PUSH2 0xE1F JUMP JUMPDEST DUP2 EQ PUSH2 0xE3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4F DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6B JUMPI PUSH2 0xE6A PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE79 DUP5 DUP3 DUP6 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE4 DUP3 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0xEEE DUP2 DUP6 PUSH2 0xE8D JUMP JUMPDEST SWAP4 POP PUSH2 0xEFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xF07 DUP2 PUSH2 0xEC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF1B DUP2 PUSH2 0xE1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xF3E DUP3 DUP3 PUSH2 0xED9 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xF53 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xF12 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xF66 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xF12 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xF79 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xF12 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF9E DUP2 DUP5 PUSH2 0xF21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC2 DUP3 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0xFCC DUP2 DUP6 PUSH2 0xFA6 JUMP JUMPDEST SWAP4 POP PUSH2 0xFDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xFE5 DUP2 PUSH2 0xEC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFF9 DUP2 PUSH2 0xE1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1019 DUP2 DUP8 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1028 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x1035 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x1042 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1076 DUP3 PUSH2 0x104B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1086 DUP2 PUSH2 0x106B JUMP JUMPDEST DUP2 EQ PUSH2 0x1091 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A3 DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP5 DUP3 DUP6 ADD PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1113 DUP3 PUSH2 0xEC8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1145 PUSH2 0xE0B JUMP JUMPDEST SWAP1 POP PUSH2 0x1151 DUP3 DUP3 PUSH2 0x110A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1171 JUMPI PUSH2 0x1170 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x119A PUSH2 0x1195 DUP5 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH2 0x11BC PUSH2 0x1182 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11E6 JUMPI DUP1 PUSH2 0x11D2 DUP9 DUP3 PUSH2 0xE40 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11BF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0x10D6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1215 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1187 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1237 JUMPI PUSH2 0x1236 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0xE1A JUMP JUMPDEST JUMPDEST PUSH2 0x1261 DUP7 DUP3 DUP8 ADD PUSH2 0x11F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1272 DUP7 DUP3 DUP8 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1283 DUP7 DUP3 DUP8 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B2 PUSH2 0x12AD PUSH2 0x12A8 DUP5 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x128D JUMP JUMPDEST PUSH2 0x104B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C4 DUP3 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D6 DUP3 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x12CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1301 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1310 DUP2 PUSH2 0x106B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1347 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1356 DUP6 DUP3 DUP7 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1367 DUP6 DUP3 DUP7 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1386 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x139B DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B7 JUMPI PUSH2 0x13B6 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C5 DUP5 DUP3 DUP6 ADD PUSH2 0x138C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E465420646F6573206E6F742065786973740000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1404 PUSH1 0x12 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x140F DUP3 PUSH2 0x13CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1433 DUP2 PUSH2 0x13F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1481 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1494 JUMPI PUSH2 0x1493 PUSH2 0x143A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1503 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH2 0x150E DUP4 PUSH2 0xE1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1526 JUMPI PUSH2 0x1525 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1537 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH2 0x1542 DUP4 PUSH2 0xE1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1550 DUP2 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1567 JUMPI PUSH2 0x1566 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP PUSH2 0x158E DUP4 PUSH2 0x156E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT AND DUP4 DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x15B6 JUMPI PUSH2 0x15B5 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C7 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x15F9 JUMPI PUSH2 0x15F8 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160F DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP PUSH2 0x161A DUP4 PUSH2 0x156E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x1641 JUMPI PUSH2 0x1640 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652074727573746564204E46544D616E6167656D656E742063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E74726163742063616E2063616C6C20746869732066756E6374696F6E0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 PUSH1 0x3E DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AE DUP3 PUSH2 0x1647 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16D2 DUP2 PUSH2 0x1696 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1735 PUSH1 0x26 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1740 DUP3 PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1764 DUP2 PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A1 PUSH1 0x20 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AC DUP3 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17D0 DUP2 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E2 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH2 0x17ED DUP4 PUSH2 0xE1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1826 PUSH2 0x1821 DUP3 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x180B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1838 DUP3 DUP5 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH2 0x188C DUP4 PUSH2 0xE1F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x189C JUMPI PUSH2 0x189B PUSH2 0x1847 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 MSIZE SDIV SAR ORIGIN PUSH16 0x852A68197E4A72D07C590F8E92DD2D55 0xE0 0x5C 0x5E 0xE0 0xFB 0xEB MLOAD PUSH2 0x6C33 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "138:3305:4:-:0;;;519:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;576:11:4;562:3;;:26;;;;;;;;;;;;;;;;;;519:76;138:3305;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;138:3305:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 3035,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_240": {
									"entryPoint": 3454,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3258,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deletePlayerData_661": {
									"entryPoint": 2657,
									"id": 661,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getNFTData_642": {
									"entryPoint": 572,
									"id": 642,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getplayerData_686": {
									"entryPoint": 1839,
									"id": 686,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nft_271": {
									"entryPoint": 1801,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 2080,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@playerData_293": {
									"entryPoint": 1059,
									"id": 293,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@playerVersusNPC_616": {
									"entryPoint": 1319,
									"id": 616,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@playerVersusPlayer_473": {
									"entryPoint": 2121,
									"id": 473,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@random_331": {
									"entryPoint": 3161,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2060,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTrustedNFTManagement_673": {
									"entryPoint": 1243,
									"id": 673,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2904,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@trustedNFTManagement_273": {
									"entryPoint": 2866,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4487,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_PlayerData_$288_memory_ptr_to_t_struct$_PlayerData_$288_memory_ptr_fromStack": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed": {
									"entryPoint": 4844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_PlayerData_$288_memory_ptr__to_t_struct$_PlayerData_$288_memory_ptr__fromStack_reversed": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 3725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$228_to_t_address": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 6155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19040:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1084:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1095:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1111:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1105:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1067:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1077:6:5",
														"type": ""
													}
												],
												"src": "1025:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1216:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1233:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1238:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1226:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1254:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1273:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1269:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1254:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1188:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1193:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1204:11:5",
														"type": ""
													}
												],
												"src": "1130:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1357:184:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1367:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1376:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1371:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1436:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1461:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1466:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1457:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1457:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1480:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1485:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1476:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1476:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1470:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1470:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1450:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1450:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1450:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1397:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1400:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1394:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1408:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1410:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1419:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1422:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1415:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1415:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1410:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1390:3:5",
																"statements": []
															},
															"src": "1386:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1519:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1515:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1533:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1508:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1508:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1339:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1344:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1349:6:5",
														"type": ""
													}
												],
												"src": "1295:246:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1595:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1605:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1623:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1630:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1619:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1639:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1635:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1635:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1615:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1605:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1578:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1588:6:5",
														"type": ""
													}
												],
												"src": "1547:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:275:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1747:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1761:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1751:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1809:68:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1865:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1816:48:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:61:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1809:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1925:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1939:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1944:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1886:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1886:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1960:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1971:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1998:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1976:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1976:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1967:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1960:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1718:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1725:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1733:3:5",
														"type": ""
													}
												],
												"src": "1655:357:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2090:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2113:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2095:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2095:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2083:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2061:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2068:3:5",
														"type": ""
													}
												],
												"src": "2018:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2328:841:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2338:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2354:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2359:4:5",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2350:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2350:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2342:4:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2374:235:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2409:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2439:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2446:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2435:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2435:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2429:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2429:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2413:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2477:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2482:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2473:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2473:14:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "2493:4:5"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2499:3:5"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2489:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2489:14:5"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2466:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2466:38:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2466:38:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2517:81:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2579:12:5"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2593:4:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2525:53:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:73:5"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "2517:4:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2619:166:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2656:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2686:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2693:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2682:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2682:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2676:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2676:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2660:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2746:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2764:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2769:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2712:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2712:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2795:167:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2833:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2863:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2870:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2859:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2859:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2853:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2837:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2923:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2941:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2946:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2937:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2937:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2889:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2889:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2889:63:5"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2972:170:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3013:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3043:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3050:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3039:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3039:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3033:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3017:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3103:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3121:3:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3126:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3117:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3117:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3069:33:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3069:63:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3069:63:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3152:11:5",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "3159:4:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3152:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_PlayerData_$288_memory_ptr_to_t_struct$_PlayerData_$288_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2307:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2314:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2323:3:5",
														"type": ""
													}
												],
												"src": "2200:969:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:229:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3337:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3349:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3360:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3345:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3337:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3384:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3395:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3380:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3403:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3409:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3399:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3399:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3373:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3373:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3429:120:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3535:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3544:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_PlayerData_$288_memory_ptr_to_t_struct$_PlayerData_$288_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3437:97:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3437:112:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3429:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_PlayerData_$288_memory_ptr__to_t_struct$_PlayerData_$288_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3299:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3311:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3322:4:5",
														"type": ""
													}
												],
												"src": "3175:381:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3658:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3675:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3680:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3668:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3668:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3696:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3715:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3720:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3711:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3696:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3630:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3635:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3646:11:5",
														"type": ""
													}
												],
												"src": "3562:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3829:285:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3839:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3886:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3853:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3853:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3843:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3901:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3967:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3972:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3908:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3901:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4027:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4034:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4023:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4023:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4041:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4046:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3988:34:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3988:65:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4062:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4073:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4100:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4078:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4078:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4069:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4062:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3810:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3817:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3825:3:5",
														"type": ""
													}
												],
												"src": "3737:377:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4202:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4225:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4207:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4207:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4195:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4180:3:5",
														"type": ""
													}
												],
												"src": "4120:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:442:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4456:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4468:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4479:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4456:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4504:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4515:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4500:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4500:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4523:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4529:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4519:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4519:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4493:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4549:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4621:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4630:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4557:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4557:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4549:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4689:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4702:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4713:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4645:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4645:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4645:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4771:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4784:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4795:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4780:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4780:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4727:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4727:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4853:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4866:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4877:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4862:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4809:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4809:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4809:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4394:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4406:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4414:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4422:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4441:4:5",
														"type": ""
													}
												],
												"src": "4244:644:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4939:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4949:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4964:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4971:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4960:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4960:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4949:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4921:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4931:7:5",
														"type": ""
													}
												],
												"src": "4894:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5071:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5081:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5110:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5092:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5081:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5053:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5063:7:5",
														"type": ""
													}
												],
												"src": "5026:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5171:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5228:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5237:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5240:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5230:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5230:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5230:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5194:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5219:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5201:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5201:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5191:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5191:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5184:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:43:5"
															},
															"nodeType": "YulIf",
															"src": "5181:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5164:5:5",
														"type": ""
													}
												],
												"src": "5128:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5308:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5318:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5340:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5327:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5327:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5318:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5383:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5356:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5286:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5294:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5302:5:5",
														"type": ""
													}
												],
												"src": "5256:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5467:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5513:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5515:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5515:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5515:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5488:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5497:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5484:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5484:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5509:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5480:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:32:5"
															},
															"nodeType": "YulIf",
															"src": "5477:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5606:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5621:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5635:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5650:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5685:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5696:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5681:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5681:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5705:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5660:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5650:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5437:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5448:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5460:6:5",
														"type": ""
													}
												],
												"src": "5401:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5825:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5842:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5845:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5835:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5835:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5835:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5736:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5887:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5904:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5907:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5897:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5897:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5897:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6001:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6004:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5994:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6025:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6028:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6018:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6018:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6018:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5859:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6088:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6098:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6120:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6150:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6128:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6128:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6116:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6102:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6267:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6269:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6269:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6269:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6210:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6222:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6207:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6207:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6246:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6258:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6243:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6243:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6204:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:62:5"
															},
															"nodeType": "YulIf",
															"src": "6201:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6305:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6309:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6298:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6298:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6074:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6082:4:5",
														"type": ""
													}
												],
												"src": "6045:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6393:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6393:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6442:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6450:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6422:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6422:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6357:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6366:6:5",
														"type": ""
													}
												],
												"src": "6332:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6549:229:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6654:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6656:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6656:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6656:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6626:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6634:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6623:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:30:5"
															},
															"nodeType": "YulIf",
															"src": "6620:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6686:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6698:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6706:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6694:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6694:17:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6686:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6748:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6760:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6766:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6756:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6533:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6544:4:5",
														"type": ""
													}
												],
												"src": "6467:311:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6873:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6890:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6893:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6883:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6883:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "6784:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:608:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7036:90:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7118:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7061:56:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7061:64:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7045:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:81:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7036:5:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7135:16:5",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "7146:5:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7139:3:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7168:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7175:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7161:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7161:21:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7191:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7202:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7209:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7198:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7198:16:5"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "7191:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7224:44:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7242:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7254:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7262:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7250:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7250:17:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7238:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7238:30:5"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7228:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7296:103:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "7310:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7310:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7283:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7291:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:15:5"
															},
															"nodeType": "YulIf",
															"src": "7277:122:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7484:144:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7499:21:5",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "7517:3:5"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "7503:10:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7541:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "7567:10:5"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "7579:3:5"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "7546:20:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7546:37:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7534:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7534:50:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7534:50:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7597:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7608:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7613:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7604:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7604:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7597:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7437:3:5"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7442:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7434:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7434:15:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7450:25:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7452:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7463:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7468:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7459:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7459:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7452:3:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7412:21:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7414:17:5",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "7425:6:5"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "7418:3:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7408:220:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6996:6:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7004:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7012:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7020:5:5",
														"type": ""
													}
												],
												"src": "6924:710:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7734:293:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7783:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7785:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7785:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7785:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7762:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7770:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7758:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7758:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7777:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7754:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7754:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7747:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:35:5"
															},
															"nodeType": "YulIf",
															"src": "7744:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7875:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7902:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7889:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7879:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:103:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7994:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8002:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7990:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8009:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8017:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7927:62:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7927:94:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7918:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7712:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7720:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7728:5:5",
														"type": ""
													}
												],
												"src": "7657:370:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8158:704:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8204:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8206:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8206:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8206:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8179:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8188:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8175:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8175:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8200:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8171:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8171:32:5"
															},
															"nodeType": "YulIf",
															"src": "8168:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "8297:302:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8312:45:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8343:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8354:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8339:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8339:17:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8326:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8326:31:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8316:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8404:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8406:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8406:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8406:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8376:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8384:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8373:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8373:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "8370:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8501:88:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8561:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8572:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8557:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8557:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8581:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8511:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8511:78:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8501:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8609:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8624:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8638:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8628:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8654:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8689:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8700:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8685:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8685:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8709:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8664:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8664:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8654:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8737:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8752:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8766:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8756:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8782:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8817:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8828:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8813:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8813:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8837:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8792:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8792:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8782:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8112:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8123:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8135:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8143:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8151:6:5",
														"type": ""
													}
												],
												"src": "8033:829:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8900:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8910:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8917:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8910:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8886:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8896:3:5",
														"type": ""
													}
												],
												"src": "8868:60:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8994:82:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9004:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9062:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "9044:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9044:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "9035:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9035:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9017:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9004:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8974:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8984:9:5",
														"type": ""
													}
												],
												"src": "8934:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9142:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9152:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9196:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9165:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9165:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9152:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9122:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9132:9:5",
														"type": ""
													}
												],
												"src": "9082:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9289:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9299:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9343:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9312:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9312:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9299:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$228_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9269:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9279:9:5",
														"type": ""
													}
												],
												"src": "9214:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9441:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9458:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9509:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$228_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9463:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9463:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9451:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9451:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9451:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9429:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9436:3:5",
														"type": ""
													}
												],
												"src": "9361:161:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9641:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9651:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9663:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9674:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9659:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9659:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9651:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9746:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9759:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9770:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9755:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9755:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9687:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9687:86:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9687:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9613:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9625:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9636:4:5",
														"type": ""
													}
												],
												"src": "9528:252:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9851:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9868:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9891:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9873:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9873:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9861:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9861:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9861:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9839:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9846:3:5",
														"type": ""
													}
												],
												"src": "9786:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10008:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10018:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10030:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10041:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10026:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10026:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10018:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10098:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10111:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10122:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10107:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10107:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10054:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10054:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10054:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9980:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9992:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10003:4:5",
														"type": ""
													}
												],
												"src": "9910:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10221:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10267:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10269:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10269:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10269:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10242:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10251:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10238:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10238:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10263:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10234:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:32:5"
															},
															"nodeType": "YulIf",
															"src": "10231:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "10360:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10375:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10389:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10379:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10404:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10439:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10450:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10435:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10435:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10459:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10414:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10414:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10404:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10487:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10502:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10506:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10532:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10567:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10578:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10563:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10563:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10587:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10542:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10542:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10532:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10183:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10194:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10206:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10214:6:5",
														"type": ""
													}
												],
												"src": "10138:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10716:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10726:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10738:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10749:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10734:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10734:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10726:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10806:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10819:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10830:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10815:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10815:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10762:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10762:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10762:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10688:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10700:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10711:4:5",
														"type": ""
													}
												],
												"src": "10618:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10909:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10919:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10934:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10928:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10928:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10919:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10977:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10950:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10950:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10950:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10887:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10895:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10903:5:5",
														"type": ""
													}
												],
												"src": "10846:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11072:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11118:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11120:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11120:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11120:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11093:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11102:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11089:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11089:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11114:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11085:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:32:5"
															},
															"nodeType": "YulIf",
															"src": "11082:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "11211:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11226:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11230:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11255:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11301:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11312:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11297:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11297:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11321:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11265:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11265:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11255:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11042:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11053:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11065:6:5",
														"type": ""
													}
												],
												"src": "10995:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11458:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11480:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11488:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11476:14:5"
																	},
																	{
																		"hexValue": "4e465420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11492:20:5",
																		"type": "",
																		"value": "NFT does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11469:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11469:44:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11469:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11450:6:5",
														"type": ""
													}
												],
												"src": "11352:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11672:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11682:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11748:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11753:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11689:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11689:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11682:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11854:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853",
																	"nodeType": "YulIdentifier",
																	"src": "11765:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11765:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11765:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11867:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11878:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11883:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11874:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11874:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11867:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11660:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11668:3:5",
														"type": ""
													}
												],
												"src": "11526:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12069:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12079:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12091:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12102:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12087:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12087:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12079:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12126:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12137:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12122:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12122:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12145:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12151:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12141:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12141:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12115:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12115:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12115:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12171:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12305:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12179:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12171:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12049:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12064:4:5",
														"type": ""
													}
												],
												"src": "11898:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12351:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12368:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12371:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12361:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12361:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12361:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12465:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12468:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12458:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12458:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12458:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12489:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12492:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12482:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12482:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12482:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12323:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12560:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12570:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12584:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12590:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12580:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12580:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12570:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12601:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12631:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12637:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12627:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12627:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12605:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12678:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12692:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12706:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12714:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12702:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12702:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12692:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12658:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12651:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12651:26:5"
															},
															"nodeType": "YulIf",
															"src": "12648:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12781:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12795:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12795:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12795:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12745:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12768:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12776:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12765:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12765:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12742:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12742:38:5"
															},
															"nodeType": "YulIf",
															"src": "12739:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12544:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12553:6:5",
														"type": ""
													}
												],
												"src": "12509:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12863:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12880:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12883:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12873:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12873:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12873:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12977:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12980:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12970:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12970:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12970:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13001:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13004:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12994:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12994:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12994:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12835:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13049:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13066:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13069:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13059:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13059:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13059:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13163:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13166:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13156:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13156:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13156:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13187:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13190:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13180:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13180:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13180:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13021:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13251:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13261:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13284:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13266:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13266:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13261:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13295:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13318:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13300:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13300:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13295:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13329:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13340:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13343:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13336:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13336:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13329:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13369:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13371:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13371:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13371:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13361:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "13364:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13358:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:10:5"
															},
															"nodeType": "YulIf",
															"src": "13355:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13238:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13241:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13247:3:5",
														"type": ""
													}
												],
												"src": "13207:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13452:362:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13462:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13485:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13467:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13467:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13462:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13496:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13519:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13501:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13501:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13496:1:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13530:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13553:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13556:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13549:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13549:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "13534:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13567:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "13596:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13578:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13578:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13567:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13785:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13787:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13787:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13787:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13718:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13711:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13711:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13741:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "13748:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "13757:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13744:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13744:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13738:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13738:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "13691:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13691:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13671:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13671:113:5"
															},
															"nodeType": "YulIf",
															"src": "13668:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13435:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13438:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13444:7:5",
														"type": ""
													}
												],
												"src": "13404:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13864:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13874:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13885:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13874:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13846:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13856:7:5",
														"type": ""
													}
												],
												"src": "13820:76:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13945:332:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13955:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13977:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "13960:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13960:19:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13955:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13988:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14010:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "13993:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13993:19:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13988:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14021:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14032:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14035:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14028:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14028:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14021:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14248:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14250:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14250:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14250:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "14168:1:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14171:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "14164:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14164:9:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14157:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14157:17:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "sum",
																						"nodeType": "YulIdentifier",
																						"src": "14180:3:5"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14185:1:5"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "14176:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14176:11:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14153:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14153:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14210:1:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14213:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "14206:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14206:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "sum",
																								"nodeType": "YulIdentifier",
																								"src": "14228:3:5"
																							},
																							{
																								"name": "y",
																								"nodeType": "YulIdentifier",
																								"src": "14233:1:5"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "14224:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14224:11:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14217:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14217:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14202:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14202:35:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14137:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14137:110:5"
															},
															"nodeType": "YulIf",
															"src": "14134:136:5"
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13932:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13935:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13941:3:5",
														"type": ""
													}
												],
												"src": "13902:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14326:190:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14336:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14363:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14345:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14345:24:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14336:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14459:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14461:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14461:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14461:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14384:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14391:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14381:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14381:77:5"
															},
															"nodeType": "YulIf",
															"src": "14378:103:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14490:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14501:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14508:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14497:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14497:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14490:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14312:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14322:3:5",
														"type": ""
													}
												],
												"src": "14283:233:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14566:328:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14576:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14598:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "14581:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14581:19:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14576:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14609:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14631:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "14614:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14614:19:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14609:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14642:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14654:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14657:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14650:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14650:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14642:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14865:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14867:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14867:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14867:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nodeType": "YulIdentifier",
																								"src": "14791:1:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14794:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "14787:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14787:9:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14780:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14780:17:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nodeType": "YulIdentifier",
																						"src": "14803:4:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14809:1:5"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "14799:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14799:12:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14776:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14776:36:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14834:1:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14837:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "14830:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14830:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nodeType": "YulIdentifier",
																						"src": "14845:4:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14851:1:5"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "14841:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14841:12:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14826:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14826:28:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14760:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14760:104:5"
															},
															"nodeType": "YulIf",
															"src": "14757:130:5"
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14552:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14555:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14561:4:5",
														"type": ""
													}
												],
												"src": "14522:372:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15006:143:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15028:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15036:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15024:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15024:14:5"
																	},
																	{
																		"hexValue": "4f6e6c79207468652074727573746564204e46544d616e6167656d656e742063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15040:34:5",
																		"type": "",
																		"value": "Only the trusted NFTManagement c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15017:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15017:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15017:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15096:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15104:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15092:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15092:15:5"
																	},
																	{
																		"hexValue": "6f6e74726163742063616e2063616c6c20746869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15109:32:5",
																		"type": "",
																		"value": "ontract can call this function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15085:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15085:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15085:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14998:6:5",
														"type": ""
													}
												],
												"src": "14900:249:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15301:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15311:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15377:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15382:2:5",
																		"type": "",
																		"value": "62"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15318:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15318:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15311:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15483:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0",
																	"nodeType": "YulIdentifier",
																	"src": "15394:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15394:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15394:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15496:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15507:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15503:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15503:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15496:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15289:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15297:3:5",
														"type": ""
													}
												],
												"src": "15155:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15698:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15708:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15720:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15731:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15716:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15716:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15708:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15755:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15766:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15751:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15751:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15774:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15780:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15770:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15770:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15744:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15744:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15744:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15800:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15934:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15808:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15808:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15800:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15678:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15693:4:5",
														"type": ""
													}
												],
												"src": "15527:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16058:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16080:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16088:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16076:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16076:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16092:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16069:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16069:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16069:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16148:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16156:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16144:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16144:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16161:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16137:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16137:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16137:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16050:6:5",
														"type": ""
													}
												],
												"src": "15952:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16329:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16339:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16405:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16410:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16346:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16346:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16339:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16511:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "16422:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16422:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16422:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16524:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16535:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16540:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16531:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16531:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16524:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16317:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16325:3:5",
														"type": ""
													}
												],
												"src": "16183:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16726:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16736:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16748:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16759:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16744:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16744:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16736:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16783:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16794:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16779:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16779:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16802:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16808:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16798:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16798:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16772:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16772:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16772:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16828:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16962:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16836:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16836:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16828:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16706:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16721:4:5",
														"type": ""
													}
												],
												"src": "16555:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17086:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17108:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17116:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17104:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17104:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17120:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17097:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17097:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17097:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17078:6:5",
														"type": ""
													}
												],
												"src": "16980:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17314:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17324:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17390:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17395:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17331:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17331:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17324:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17496:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "17407:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17407:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17407:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17509:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17520:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17525:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17516:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17516:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17509:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17302:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17310:3:5",
														"type": ""
													}
												],
												"src": "17168:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17711:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17721:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17733:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17744:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17729:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17729:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17721:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17768:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17779:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17764:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17764:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17787:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17793:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17783:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17783:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17757:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17757:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17757:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17813:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17947:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17821:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17821:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17813:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17691:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17706:4:5",
														"type": ""
													}
												],
												"src": "17540:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18010:149:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18020:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18043:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18025:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18025:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18020:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18054:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18077:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18059:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18059:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18054:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18088:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18100:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18103:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18096:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18096:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "18088:4:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18130:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18132:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18132:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18132:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "18121:4:5"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18127:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18118:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18118:11:5"
															},
															"nodeType": "YulIf",
															"src": "18115:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17996:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17999:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18005:4:5",
														"type": ""
													}
												],
												"src": "17965:194:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18212:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18222:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18233:5:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "18222:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18194:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "18204:7:5",
														"type": ""
													}
												],
												"src": "18165:79:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18333:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18350:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18393:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18375:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18375:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "18355:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18355:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18343:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18343:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18343:58:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18321:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18328:3:5",
														"type": ""
													}
												],
												"src": "18250:157:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18529:140:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18602:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18611:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18540:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18540:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18540:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18624:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18635:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18640:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18631:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18631:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18624:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18653:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18660:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18653:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18508:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18514:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18525:3:5",
														"type": ""
													}
												],
												"src": "18413:256:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18703:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18720:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18723:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18713:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18713:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18713:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18817:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18820:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18810:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18810:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18810:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18841:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18844:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18834:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18834:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18834:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "18675:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18895:142:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18905:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18928:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18910:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18910:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18905:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18939:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18962:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18944:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18944:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18939:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18986:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18988:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18988:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18988:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18983:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18976:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18976:9:5"
															},
															"nodeType": "YulIf",
															"src": "18973:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19017:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19026:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19029:1:5"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "19022:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19022:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19017:1:5"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18884:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18887:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18893:1:5",
														"type": ""
													}
												],
												"src": "18861:176:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct BattleGame.PlayerData -> struct BattleGame.PlayerData\n    function abi_encode_t_struct$_PlayerData_$288_memory_ptr_to_t_struct$_PlayerData_$288_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // attack\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // defense\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // experience\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_PlayerData_$288_memory_ptr__to_t_struct$_PlayerData_$288_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_PlayerData_$288_memory_ptr_to_t_struct$_PlayerData_$288_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$228_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$228_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$228__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$228_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        sum := add(x, y)\n\n        // overflow, if x >= 0 and sum < y\n        // underflow, if x < 0 and sum >= y\n        if or(\n            and(iszero(slt(x, 0)), slt(sum, y)),\n            and(slt(x, 0), iszero(slt(sum, y)))\n        ) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the trusted NFTManagement c\")\n\n        mstore(add(memPtr, 32), \"ontract can call this function\")\n\n    }\n\n    function abi_encode_t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101a25780638da5cb5b146101ac578063b67836f8146101ca578063d7b8d485146101e6578063e00974ff14610202578063f2fde38b14610220576100b4565b80630ad4c4f4146100b95780630aec4ed1146100e957806325cab8091461011c57806338a2c0a31461013857806347ccca02146101545780635f52789b14610172575b600080fd5b6100d360048036038101906100ce9190610e55565b61023c565b6040516100e09190610f84565b60405180910390f35b61010360048036038101906100fe9190610e55565b610423565b6040516101139493929190610fff565b60405180910390f35b610136600480360381019061013191906110a9565b6104db565b005b610152600480360381019061014d919061121e565b610527565b005b61015c610709565b60405161016991906112ec565b60405180910390f35b61018c60048036038101906101879190610e55565b61072f565b6040516101999190610f84565b60405180910390f35b6101aa61080c565b005b6101b4610820565b6040516101c19190611316565b60405180910390f35b6101e460048036038101906101df9190611331565b610849565b005b61020060048036038101906101fb9190610e55565b610a61565b005b61020a610b32565b6040516102179190611316565b60405180910390f35b61023a600480360381019061023591906110a9565b610b58565b005b610244610d86565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016102b79190611371565b602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f891906113a1565b73ffffffffffffffffffffffffffffffffffffffff160361034e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103459061141a565b60405180910390fd5b6003600083815260200190815260200160002060405180608001604052908160008201805461037c90611469565b80601f01602080910402602001604051908101604052809291908181526020018280546103a890611469565b80156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820154815250509050919050565b600360205280600052604060002060009150905080600001805461044690611469565b80601f016020809104026020016040519081016040528092919081815260200182805461047290611469565b80156104bf5780601f10610494576101008083540402835291602001916104bf565b820191906000526020600020905b8154815290600101906020018083116104a257829003601f168201915b5050505050908060010154908060020154908060030154905084565b6104e3610bdb565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000835190506000610537610c59565b90506000610543610c59565b90506000805b848110156105d1576000600360008a848151811061056a5761056961149a565b5b6020026020010151815260200190815260200160002090508481600301548260020154836001015461059c91906114f8565b6105a691906114f8565b6105b0919061152c565b836105bb9190611578565b92505080806105c9906115bc565b915050610549565b508185876105df91906114f8565b6105e9919061152c565b816105f49190611604565b905060005b848110156106ff576000600360008a848151811061061a5761061961149a565b5b602002602001015181526020019081526020016000209050600083131561069557606481600101600082825461065091906114f8565b92505081905550606481600201600082825461066c91906114f8565b925050819055506103e881600301600082825461068991906114f8565b925050819055506106eb565b60328160010160008282546106aa91906114f8565b9250508190555060328160020160008282546106c691906114f8565b925050819055506101f48160030160008282546106e391906114f8565b925050819055505b5080806106f7906115bc565b9150506105f9565b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610737610d86565b6003600083815260200190815260200160002060405180608001604052908160008201805461076590611469565b80601f016020809104026020016040519081016040528092919081815260200182805461079190611469565b80156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820154815250509050919050565b610814610bdb565b61081e6000610cba565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060036000848152602001908152602001600020905060006003600084815260200190815260200160002090506000610881610c59565b9050600061088d610c59565b90506000818460030154856002015486600101546108ab91906114f8565b6108b591906114f8565b6108bf919061152c565b838660030154876002015488600101546108d991906114f8565b6108e391906114f8565b6108ed919061152c565b6108f79190611604565b905060008113156109af57600a85600101600082825461091791906114f8565b92505081905550600a85600201600082825461093391906114f8565b92505081905550606485600301600082825461094f91906114f8565b92505081905550600184600101600082825461096b91906114f8565b92505081905550600184600201600082825461098791906114f8565b9250508190555060328460030160008282546109a391906114f8565b92505081905550610a58565b60018560010160008282546109c491906114f8565b9250508190555060018560020160008282546109e091906114f8565b9250508190555060328560030160008282546109fc91906114f8565b92505081905550600a846001016000828254610a1891906114f8565b92505081905550600a846002016000828254610a3491906114f8565b925050819055506064846003016000828254610a5091906114f8565b925050819055505b50505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae8906116b9565b60405180910390fd5b6003600082815260200190815260200160002060008082016000610b159190610dae565b600182016000905560028201600090556003820160009055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b60610bdb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc69061174b565b60405180910390fd5b610bd881610cba565b50565b610be3610d7e565b73ffffffffffffffffffffffffffffffffffffffff16610c01610820565b73ffffffffffffffffffffffffffffffffffffffff1614610c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4e906117b7565b60405180910390fd5b565b60006050600160506064610c6d91906117d7565b610c7791906114f8565b42604051602001610c88919061182c565b6040516020818303038152906040528051906020012060001c610cab9190611876565b610cb591906114f8565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060800160405280606081526020016000815260200160008152602001600081525090565b508054610dba90611469565b6000825580601f10610dcc5750610deb565b601f016020900490600052602060002090810190610dea9190610dee565b5b50565b5b80821115610e07576000816000905550600101610def565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610e3281610e1f565b8114610e3d57600080fd5b50565b600081359050610e4f81610e29565b92915050565b600060208284031215610e6b57610e6a610e15565b5b6000610e7984828501610e40565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ebc578082015181840152602081019050610ea1565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ee482610e82565b610eee8185610e8d565b9350610efe818560208601610e9e565b610f0781610ec8565b840191505092915050565b610f1b81610e1f565b82525050565b60006080830160008301518482036000860152610f3e8282610ed9565b9150506020830151610f536020860182610f12565b506040830151610f666040860182610f12565b506060830151610f796060860182610f12565b508091505092915050565b60006020820190508181036000830152610f9e8184610f21565b905092915050565b600082825260208201905092915050565b6000610fc282610e82565b610fcc8185610fa6565b9350610fdc818560208601610e9e565b610fe581610ec8565b840191505092915050565b610ff981610e1f565b82525050565b600060808201905081810360008301526110198187610fb7565b90506110286020830186610ff0565b6110356040830185610ff0565b6110426060830184610ff0565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110768261104b565b9050919050565b6110868161106b565b811461109157600080fd5b50565b6000813590506110a38161107d565b92915050565b6000602082840312156110bf576110be610e15565b5b60006110cd84828501611094565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61111382610ec8565b810181811067ffffffffffffffff82111715611132576111316110db565b5b80604052505050565b6000611145610e0b565b9050611151828261110a565b919050565b600067ffffffffffffffff821115611171576111706110db565b5b602082029050602081019050919050565b600080fd5b600061119a61119584611156565b61113b565b905080838252602082019050602084028301858111156111bd576111bc611182565b5b835b818110156111e657806111d28882610e40565b8452602084019350506020810190506111bf565b5050509392505050565b600082601f830112611205576112046110d6565b5b8135611215848260208601611187565b91505092915050565b60008060006060848603121561123757611236610e15565b5b600084013567ffffffffffffffff81111561125557611254610e1a565b5b611261868287016111f0565b935050602061127286828701610e40565b925050604061128386828701610e40565b9150509250925092565b6000819050919050565b60006112b26112ad6112a88461104b565b61128d565b61104b565b9050919050565b60006112c482611297565b9050919050565b60006112d6826112b9565b9050919050565b6112e6816112cb565b82525050565b600060208201905061130160008301846112dd565b92915050565b6113108161106b565b82525050565b600060208201905061132b6000830184611307565b92915050565b6000806040838503121561134857611347610e15565b5b600061135685828601610e40565b925050602061136785828601610e40565b9150509250929050565b60006020820190506113866000830184610ff0565b92915050565b60008151905061139b8161107d565b92915050565b6000602082840312156113b7576113b6610e15565b5b60006113c58482850161138c565b91505092915050565b7f4e465420646f6573206e6f742065786973740000000000000000000000000000600082015250565b6000611404601283610fa6565b915061140f826113ce565b602082019050919050565b60006020820190508181036000830152611433816113f7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061148157607f821691505b6020821081036114945761149361143a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061150382610e1f565b915061150e83610e1f565b9250828201905080821115611526576115256114c9565b5b92915050565b600061153782610e1f565b915061154283610e1f565b925082820261155081610e1f565b91508282048414831517611567576115666114c9565b5b5092915050565b6000819050919050565b60006115838261156e565b915061158e8361156e565b9250828201905082811215600083121683821260008412151617156115b6576115b56114c9565b5b92915050565b60006115c782610e1f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115f9576115f86114c9565b5b600182019050919050565b600061160f8261156e565b915061161a8361156e565b9250828203905081811260008412168282136000851215161715611641576116406114c9565b5b92915050565b7f4f6e6c79207468652074727573746564204e46544d616e6167656d656e74206360008201527f6f6e74726163742063616e2063616c6c20746869732066756e6374696f6e0000602082015250565b60006116a3603e83610fa6565b91506116ae82611647565b604082019050919050565b600060208201905081810360008301526116d281611696565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611735602683610fa6565b9150611740826116d9565b604082019050919050565b6000602082019050818103600083015261176481611728565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117a1602083610fa6565b91506117ac8261176b565b602082019050919050565b600060208201905081810360008301526117d081611794565b9050919050565b60006117e282610e1f565b91506117ed83610e1f565b9250828203905081811115611805576118046114c9565b5b92915050565b6000819050919050565b61182661182182610e1f565b61180b565b82525050565b60006118388284611815565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061188182610e1f565b915061188c83610e1f565b92508261189c5761189b611847565b5b82820690509291505056fea26469706673582212209e59051d326f852a68197e4a72d07c590f8e92dd2d55e05c5ee0fbeb51616c3364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xB67836F8 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xD7B8D485 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xE00974FF EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x220 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xAD4C4F4 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xAEC4ED1 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x25CAB809 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x38A2C0A3 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x5F52789B EQ PUSH2 0x172 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15C PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x80C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20A PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x37C SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x446 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x472 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x494 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0xBDB JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x537 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x543 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x56A JUMPI PUSH2 0x569 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST DUP4 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x5C9 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x549 JUMP JUMPDEST POP DUP2 DUP6 DUP8 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST DUP2 PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x61A JUMPI PUSH2 0x619 PUSH2 0x149A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 SGT ISZERO PUSH2 0x695 JUMPI PUSH1 0x64 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x650 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x32 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x32 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP DUP1 DUP1 PUSH2 0x6F7 SWAP1 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5F9 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x737 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x765 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x791 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x814 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x81E PUSH1 0x0 PUSH2 0xCBA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x881 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x88D PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x2 ADD SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST DUP4 DUP7 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x2 ADD SLOAD DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x9AF JUMPI PUSH1 0xA DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x32 DUP5 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x32 DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA18 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x64 DUP5 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE8 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0xB15 SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB60 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD8 DUP2 PUSH2 0xCBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0xD7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC01 PUSH2 0x820 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4E SWAP1 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x50 PUSH1 0x1 PUSH1 0x50 PUSH1 0x64 PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xDBA SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xDCC JUMPI POP PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xDEF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE32 DUP2 PUSH2 0xE1F JUMP JUMPDEST DUP2 EQ PUSH2 0xE3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4F DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6B JUMPI PUSH2 0xE6A PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE79 DUP5 DUP3 DUP6 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE4 DUP3 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0xEEE DUP2 DUP6 PUSH2 0xE8D JUMP JUMPDEST SWAP4 POP PUSH2 0xEFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xF07 DUP2 PUSH2 0xEC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF1B DUP2 PUSH2 0xE1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xF3E DUP3 DUP3 PUSH2 0xED9 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xF53 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xF12 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xF66 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xF12 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xF79 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xF12 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF9E DUP2 DUP5 PUSH2 0xF21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC2 DUP3 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0xFCC DUP2 DUP6 PUSH2 0xFA6 JUMP JUMPDEST SWAP4 POP PUSH2 0xFDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xFE5 DUP2 PUSH2 0xEC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFF9 DUP2 PUSH2 0xE1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1019 DUP2 DUP8 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1028 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x1035 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x1042 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1076 DUP3 PUSH2 0x104B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1086 DUP2 PUSH2 0x106B JUMP JUMPDEST DUP2 EQ PUSH2 0x1091 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A3 DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP5 DUP3 DUP6 ADD PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1113 DUP3 PUSH2 0xEC8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1145 PUSH2 0xE0B JUMP JUMPDEST SWAP1 POP PUSH2 0x1151 DUP3 DUP3 PUSH2 0x110A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1171 JUMPI PUSH2 0x1170 PUSH2 0x10DB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x119A PUSH2 0x1195 DUP5 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x113B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH2 0x11BC PUSH2 0x1182 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11E6 JUMPI DUP1 PUSH2 0x11D2 DUP9 DUP3 PUSH2 0xE40 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11BF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0x10D6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1215 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1187 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1237 JUMPI PUSH2 0x1236 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0xE1A JUMP JUMPDEST JUMPDEST PUSH2 0x1261 DUP7 DUP3 DUP8 ADD PUSH2 0x11F0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1272 DUP7 DUP3 DUP8 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1283 DUP7 DUP3 DUP8 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B2 PUSH2 0x12AD PUSH2 0x12A8 DUP5 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x128D JUMP JUMPDEST PUSH2 0x104B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C4 DUP3 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D6 DUP3 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x12CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1301 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1310 DUP2 PUSH2 0x106B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1347 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1356 DUP6 DUP3 DUP7 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1367 DUP6 DUP3 DUP7 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1386 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x139B DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B7 JUMPI PUSH2 0x13B6 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C5 DUP5 DUP3 DUP6 ADD PUSH2 0x138C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E465420646F6573206E6F742065786973740000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1404 PUSH1 0x12 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x140F DUP3 PUSH2 0x13CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1433 DUP2 PUSH2 0x13F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1481 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1494 JUMPI PUSH2 0x1493 PUSH2 0x143A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1503 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH2 0x150E DUP4 PUSH2 0xE1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1526 JUMPI PUSH2 0x1525 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1537 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH2 0x1542 DUP4 PUSH2 0xE1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1550 DUP2 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1567 JUMPI PUSH2 0x1566 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1583 DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP PUSH2 0x158E DUP4 PUSH2 0x156E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT AND DUP4 DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x15B6 JUMPI PUSH2 0x15B5 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C7 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x15F9 JUMPI PUSH2 0x15F8 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160F DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP PUSH2 0x161A DUP4 PUSH2 0x156E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x1641 JUMPI PUSH2 0x1640 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652074727573746564204E46544D616E6167656D656E742063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E74726163742063616E2063616C6C20746869732066756E6374696F6E0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A3 PUSH1 0x3E DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AE DUP3 PUSH2 0x1647 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16D2 DUP2 PUSH2 0x1696 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1735 PUSH1 0x26 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1740 DUP3 PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1764 DUP2 PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A1 PUSH1 0x20 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AC DUP3 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17D0 DUP2 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E2 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH2 0x17ED DUP4 PUSH2 0xE1F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1826 PUSH2 0x1821 DUP3 PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x180B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1838 DUP3 DUP5 PUSH2 0x1815 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP PUSH2 0x188C DUP4 PUSH2 0xE1F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x189C JUMPI PUSH2 0x189B PUSH2 0x1847 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 MSIZE SDIV SAR ORIGIN PUSH16 0x852A68197E4A72D07C590F8E92DD2D55 0xE0 0x5C 0x5E 0xE0 0xFB 0xEB MLOAD PUSH2 0x6C33 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "138:3305:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2710:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3176:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1809:895;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;176:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3325:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;777:1026:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2912:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;200:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2710:197:4;2770:17;;:::i;:::-;2839:1;2807:34;;:3;;;;;;;;;;;:11;;;2819:7;2807:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;2799:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2881:10;:19;2892:7;2881:19;;;;;;;;;;;2874:26;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2710:197;;;:::o;464:48::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3176:144::-;1094:13:0;:11;:13::i;:::-;3292:21:4::1;3269:20;;:44;;;;;;;;;;;;;;;;;;3176:144:::0;:::o;1809:895::-;1917:9;1929:8;:15;1917:27;;1954:10;1967:8;:6;:8::i;:::-;1954:21;;1985:10;1998:8;:6;:8::i;:::-;1985:21;;2017:8;2044:9;2039:192;2063:1;2059;:5;2039:192;;;2085:25;2113:10;:23;2124:8;2133:1;2124:11;;;;;;;;:::i;:::-;;;;;;;;2113:23;;;;;;;;;;;2085:51;;2217:2;2196:6;:17;;;2179:6;:14;;;2163:6;:13;;;:30;;;;:::i;:::-;:50;;;;:::i;:::-;2162:57;;;;:::i;:::-;2150:70;;;;;:::i;:::-;;;2071:160;2066:3;;;;;:::i;:::-;;;;2039:192;;;;2279:2;2265:10;2253:9;:22;;;;:::i;:::-;2252:29;;;;:::i;:::-;2240:42;;;;;:::i;:::-;;;2298:9;2293:405;2317:1;2313;:5;2293:405;;;2339:25;2367:10;:23;2378:8;2387:1;2378:11;;;;;;;;:::i;:::-;;;;;;;;2367:23;;;;;;;;;;;2339:51;;2412:1;2408;:5;2404:284;;;2450:3;2433:6;:13;;;:20;;;;;;;:::i;:::-;;;;;;;;2489:3;2471:6;:14;;;:21;;;;;;;:::i;:::-;;;;;;;;2531:4;2510:6;:17;;;:25;;;;;;;:::i;:::-;;;;;;;;2404:284;;;2591:2;2574:6;:13;;;:19;;;;;;;:::i;:::-;;;;;;;;2629:2;2611:6;:14;;;:20;;;;;;;:::i;:::-;;;;;;;;2670:3;2649:6;:17;;;:24;;;;;;;:::i;:::-;;;;;;;;2404:284;2325:373;2320:3;;;;;:::i;:::-;;;;2293:405;;;;1907:797;;;;1809:895;;;:::o;176:18::-;;;;;;;;;;;;;:::o;3325:115::-;3386:17;;:::i;:::-;3418:10;:19;3429:7;3418:19;;;;;;;;;;;3411:26;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3325:115;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;777:1026:4:-;988:26;1017:10;:20;1028:8;1017:20;;;;;;;;;;;988:49;;1047:26;1076:10;:20;1087:8;1076:20;;;;;;;;;;;1047:49;;1106:10;1119:8;:6;:8::i;:::-;1106:21;;1137:10;1150:8;:6;:8::i;:::-;1137:21;;1169:8;1316:2;1294:7;:18;;;1276:7;:15;;;1259:7;:14;;;:32;;;;:::i;:::-;:53;;;;:::i;:::-;1258:60;;;;:::i;:::-;1245:2;1223:7;:18;;;1205:7;:15;;;1188:7;:14;;;:32;;;;:::i;:::-;:53;;;;:::i;:::-;1187:60;;;;:::i;:::-;1180:139;;;;:::i;:::-;1169:150;;1338:1;1334;:5;1330:467;;;1373:2;1355:7;:14;;;:20;;;;;;;:::i;:::-;;;;;;;;1408:2;1389:7;:15;;;:21;;;;;;;:::i;:::-;;;;;;;;1446:3;1424:7;:18;;;:25;;;;;;;:::i;:::-;;;;;;;;1482:1;1464:7;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;1516:1;1497:7;:15;;;:20;;;;;;;:::i;:::-;;;;;;;;1553:2;1531:7;:18;;;:24;;;;;;;:::i;:::-;;;;;;;;1330:467;;;1604:1;1586:7;:14;;;:19;;;;;;;:::i;:::-;;;;;;;;1638:1;1619:7;:15;;;:20;;;;;;;:::i;:::-;;;;;;;;1675:2;1653:7;:18;;;:24;;;;;;;:::i;:::-;;;;;;;;1710:2;1692:7;:14;;;:20;;;;;;;:::i;:::-;;;;;;;;1745:2;1726:7;:15;;;:21;;;;;;;:::i;:::-;;;;;;;;1783:3;1761:7;:18;;;:25;;;;;;;:::i;:::-;;;;;;;;1330:467;848:955;;;;;777:1026;;:::o;2912:214::-;2996:20;;;;;;;;;;;2982:34;;:10;:34;;;2974:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3100:10;:19;3111:7;3100:19;;;;;;;;;;;;3093:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2912:214;:::o;200:35::-;;;;;;;;;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;600:171:4:-;640:7;279:2;749:1;279:2;325:3;723:23;;;;:::i;:::-;:27;;;;:::i;:::-;701:15;684:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;674:44;;;;;;666:53;;:85;;;;:::i;:::-;:98;;;;:::i;:::-;659:105;;600:171;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:99::-;1077:6;1111:5;1105:12;1095:22;;1025:99;;;:::o;1130:159::-;1204:11;1238:6;1233:3;1226:19;1278:4;1273:3;1269:14;1254:29;;1130:159;;;;:::o;1295:246::-;1376:1;1386:113;1400:6;1397:1;1394:13;1386:113;;;1485:1;1480:3;1476:11;1470:18;1466:1;1461:3;1457:11;1450:39;1422:2;1419:1;1415:10;1410:15;;1386:113;;;1533:1;1524:6;1519:3;1515:16;1508:27;1357:184;1295:246;;;:::o;1547:102::-;1588:6;1639:2;1635:7;1630:2;1623:5;1619:14;1615:28;1605:38;;1547:102;;;:::o;1655:357::-;1733:3;1761:39;1794:5;1761:39;:::i;:::-;1816:61;1870:6;1865:3;1816:61;:::i;:::-;1809:68;;1886:65;1944:6;1939:3;1932:4;1925:5;1921:16;1886:65;:::i;:::-;1976:29;1998:6;1976:29;:::i;:::-;1971:3;1967:39;1960:46;;1737:275;1655:357;;;;:::o;2018:108::-;2095:24;2113:5;2095:24;:::i;:::-;2090:3;2083:37;2018:108;;:::o;2200:969::-;2323:3;2359:4;2354:3;2350:14;2446:4;2439:5;2435:16;2429:23;2499:3;2493:4;2489:14;2482:4;2477:3;2473:14;2466:38;2525:73;2593:4;2579:12;2525:73;:::i;:::-;2517:81;;2374:235;2693:4;2686:5;2682:16;2676:23;2712:63;2769:4;2764:3;2760:14;2746:12;2712:63;:::i;:::-;2619:166;2870:4;2863:5;2859:16;2853:23;2889:63;2946:4;2941:3;2937:14;2923:12;2889:63;:::i;:::-;2795:167;3050:4;3043:5;3039:16;3033:23;3069:63;3126:4;3121:3;3117:14;3103:12;3069:63;:::i;:::-;2972:170;3159:4;3152:11;;2328:841;2200:969;;;;:::o;3175:381::-;3322:4;3360:2;3349:9;3345:18;3337:26;;3409:9;3403:4;3399:20;3395:1;3384:9;3380:17;3373:47;3437:112;3544:4;3535:6;3437:112;:::i;:::-;3429:120;;3175:381;;;;:::o;3562:169::-;3646:11;3680:6;3675:3;3668:19;3720:4;3715:3;3711:14;3696:29;;3562:169;;;;:::o;3737:377::-;3825:3;3853:39;3886:5;3853:39;:::i;:::-;3908:71;3972:6;3967:3;3908:71;:::i;:::-;3901:78;;3988:65;4046:6;4041:3;4034:4;4027:5;4023:16;3988:65;:::i;:::-;4078:29;4100:6;4078:29;:::i;:::-;4073:3;4069:39;4062:46;;3829:285;3737:377;;;;:::o;4120:118::-;4207:24;4225:5;4207:24;:::i;:::-;4202:3;4195:37;4120:118;;:::o;4244:644::-;4441:4;4479:3;4468:9;4464:19;4456:27;;4529:9;4523:4;4519:20;4515:1;4504:9;4500:17;4493:47;4557:78;4630:4;4621:6;4557:78;:::i;:::-;4549:86;;4645:72;4713:2;4702:9;4698:18;4689:6;4645:72;:::i;:::-;4727;4795:2;4784:9;4780:18;4771:6;4727:72;:::i;:::-;4809;4877:2;4866:9;4862:18;4853:6;4809:72;:::i;:::-;4244:644;;;;;;;:::o;4894:126::-;4931:7;4971:42;4964:5;4960:54;4949:65;;4894:126;;;:::o;5026:96::-;5063:7;5092:24;5110:5;5092:24;:::i;:::-;5081:35;;5026:96;;;:::o;5128:122::-;5201:24;5219:5;5201:24;:::i;:::-;5194:5;5191:35;5181:63;;5240:1;5237;5230:12;5181:63;5128:122;:::o;5256:139::-;5302:5;5340:6;5327:20;5318:29;;5356:33;5383:5;5356:33;:::i;:::-;5256:139;;;;:::o;5401:329::-;5460:6;5509:2;5497:9;5488:7;5484:23;5480:32;5477:119;;;5515:79;;:::i;:::-;5477:119;5635:1;5660:53;5705:7;5696:6;5685:9;5681:22;5660:53;:::i;:::-;5650:63;;5606:117;5401:329;;;;:::o;5736:117::-;5845:1;5842;5835:12;5859:180;5907:77;5904:1;5897:88;6004:4;6001:1;5994:15;6028:4;6025:1;6018:15;6045:281;6128:27;6150:4;6128:27;:::i;:::-;6120:6;6116:40;6258:6;6246:10;6243:22;6222:18;6210:10;6207:34;6204:62;6201:88;;;6269:18;;:::i;:::-;6201:88;6309:10;6305:2;6298:22;6088:238;6045:281;;:::o;6332:129::-;6366:6;6393:20;;:::i;:::-;6383:30;;6422:33;6450:4;6442:6;6422:33;:::i;:::-;6332:129;;;:::o;6467:311::-;6544:4;6634:18;6626:6;6623:30;6620:56;;;6656:18;;:::i;:::-;6620:56;6706:4;6698:6;6694:17;6686:25;;6766:4;6760;6756:15;6748:23;;6467:311;;;:::o;6784:117::-;6893:1;6890;6883:12;6924:710;7020:5;7045:81;7061:64;7118:6;7061:64;:::i;:::-;7045:81;:::i;:::-;7036:90;;7146:5;7175:6;7168:5;7161:21;7209:4;7202:5;7198:16;7191:23;;7262:4;7254:6;7250:17;7242:6;7238:30;7291:3;7283:6;7280:15;7277:122;;;7310:79;;:::i;:::-;7277:122;7425:6;7408:220;7442:6;7437:3;7434:15;7408:220;;;7517:3;7546:37;7579:3;7567:10;7546:37;:::i;:::-;7541:3;7534:50;7613:4;7608:3;7604:14;7597:21;;7484:144;7468:4;7463:3;7459:14;7452:21;;7408:220;;;7412:21;7026:608;;6924:710;;;;;:::o;7657:370::-;7728:5;7777:3;7770:4;7762:6;7758:17;7754:27;7744:122;;7785:79;;:::i;:::-;7744:122;7902:6;7889:20;7927:94;8017:3;8009:6;8002:4;7994:6;7990:17;7927:94;:::i;:::-;7918:103;;7734:293;7657:370;;;;:::o;8033:829::-;8135:6;8143;8151;8200:2;8188:9;8179:7;8175:23;8171:32;8168:119;;;8206:79;;:::i;:::-;8168:119;8354:1;8343:9;8339:17;8326:31;8384:18;8376:6;8373:30;8370:117;;;8406:79;;:::i;:::-;8370:117;8511:78;8581:7;8572:6;8561:9;8557:22;8511:78;:::i;:::-;8501:88;;8297:302;8638:2;8664:53;8709:7;8700:6;8689:9;8685:22;8664:53;:::i;:::-;8654:63;;8609:118;8766:2;8792:53;8837:7;8828:6;8817:9;8813:22;8792:53;:::i;:::-;8782:63;;8737:118;8033:829;;;;;:::o;8868:60::-;8896:3;8917:5;8910:12;;8868:60;;;:::o;8934:142::-;8984:9;9017:53;9035:34;9044:24;9062:5;9044:24;:::i;:::-;9035:34;:::i;:::-;9017:53;:::i;:::-;9004:66;;8934:142;;;:::o;9082:126::-;9132:9;9165:37;9196:5;9165:37;:::i;:::-;9152:50;;9082:126;;;:::o;9214:141::-;9279:9;9312:37;9343:5;9312:37;:::i;:::-;9299:50;;9214:141;;;:::o;9361:161::-;9463:52;9509:5;9463:52;:::i;:::-;9458:3;9451:65;9361:161;;:::o;9528:252::-;9636:4;9674:2;9663:9;9659:18;9651:26;;9687:86;9770:1;9759:9;9755:17;9746:6;9687:86;:::i;:::-;9528:252;;;;:::o;9786:118::-;9873:24;9891:5;9873:24;:::i;:::-;9868:3;9861:37;9786:118;;:::o;9910:222::-;10003:4;10041:2;10030:9;10026:18;10018:26;;10054:71;10122:1;10111:9;10107:17;10098:6;10054:71;:::i;:::-;9910:222;;;;:::o;10138:474::-;10206:6;10214;10263:2;10251:9;10242:7;10238:23;10234:32;10231:119;;;10269:79;;:::i;:::-;10231:119;10389:1;10414:53;10459:7;10450:6;10439:9;10435:22;10414:53;:::i;:::-;10404:63;;10360:117;10516:2;10542:53;10587:7;10578:6;10567:9;10563:22;10542:53;:::i;:::-;10532:63;;10487:118;10138:474;;;;;:::o;10618:222::-;10711:4;10749:2;10738:9;10734:18;10726:26;;10762:71;10830:1;10819:9;10815:17;10806:6;10762:71;:::i;:::-;10618:222;;;;:::o;10846:143::-;10903:5;10934:6;10928:13;10919:22;;10950:33;10977:5;10950:33;:::i;:::-;10846:143;;;;:::o;10995:351::-;11065:6;11114:2;11102:9;11093:7;11089:23;11085:32;11082:119;;;11120:79;;:::i;:::-;11082:119;11240:1;11265:64;11321:7;11312:6;11301:9;11297:22;11265:64;:::i;:::-;11255:74;;11211:128;10995:351;;;;:::o;11352:168::-;11492:20;11488:1;11480:6;11476:14;11469:44;11352:168;:::o;11526:366::-;11668:3;11689:67;11753:2;11748:3;11689:67;:::i;:::-;11682:74;;11765:93;11854:3;11765:93;:::i;:::-;11883:2;11878:3;11874:12;11867:19;;11526:366;;;:::o;11898:419::-;12064:4;12102:2;12091:9;12087:18;12079:26;;12151:9;12145:4;12141:20;12137:1;12126:9;12122:17;12115:47;12179:131;12305:4;12179:131;:::i;:::-;12171:139;;11898:419;;;:::o;12323:180::-;12371:77;12368:1;12361:88;12468:4;12465:1;12458:15;12492:4;12489:1;12482:15;12509:320;12553:6;12590:1;12584:4;12580:12;12570:22;;12637:1;12631:4;12627:12;12658:18;12648:81;;12714:4;12706:6;12702:17;12692:27;;12648:81;12776:2;12768:6;12765:14;12745:18;12742:38;12739:84;;12795:18;;:::i;:::-;12739:84;12560:269;12509:320;;;:::o;12835:180::-;12883:77;12880:1;12873:88;12980:4;12977:1;12970:15;13004:4;13001:1;12994:15;13021:180;13069:77;13066:1;13059:88;13166:4;13163:1;13156:15;13190:4;13187:1;13180:15;13207:191;13247:3;13266:20;13284:1;13266:20;:::i;:::-;13261:25;;13300:20;13318:1;13300:20;:::i;:::-;13295:25;;13343:1;13340;13336:9;13329:16;;13364:3;13361:1;13358:10;13355:36;;;13371:18;;:::i;:::-;13355:36;13207:191;;;;:::o;13404:410::-;13444:7;13467:20;13485:1;13467:20;:::i;:::-;13462:25;;13501:20;13519:1;13501:20;:::i;:::-;13496:25;;13556:1;13553;13549:9;13578:30;13596:11;13578:30;:::i;:::-;13567:41;;13757:1;13748:7;13744:15;13741:1;13738:22;13718:1;13711:9;13691:83;13668:139;;13787:18;;:::i;:::-;13668:139;13452:362;13404:410;;;;:::o;13820:76::-;13856:7;13885:5;13874:16;;13820:76;;;:::o;13902:375::-;13941:3;13960:19;13977:1;13960:19;:::i;:::-;13955:24;;13993:19;14010:1;13993:19;:::i;:::-;13988:24;;14035:1;14032;14028:9;14021:16;;14233:1;14228:3;14224:11;14217:19;14213:1;14210;14206:9;14202:35;14185:1;14180:3;14176:11;14171:1;14168;14164:9;14157:17;14153:35;14137:110;14134:136;;;14250:18;;:::i;:::-;14134:136;13902:375;;;;:::o;14283:233::-;14322:3;14345:24;14363:5;14345:24;:::i;:::-;14336:33;;14391:66;14384:5;14381:77;14378:103;;14461:18;;:::i;:::-;14378:103;14508:1;14501:5;14497:13;14490:20;;14283:233;;;:::o;14522:372::-;14561:4;14581:19;14598:1;14581:19;:::i;:::-;14576:24;;14614:19;14631:1;14614:19;:::i;:::-;14609:24;;14657:1;14654;14650:9;14642:17;;14851:1;14845:4;14841:12;14837:1;14834;14830:9;14826:28;14809:1;14803:4;14799:12;14794:1;14791;14787:9;14780:17;14776:36;14760:104;14757:130;;;14867:18;;:::i;:::-;14757:130;14522:372;;;;:::o;14900:249::-;15040:34;15036:1;15028:6;15024:14;15017:58;15109:32;15104:2;15096:6;15092:15;15085:57;14900:249;:::o;15155:366::-;15297:3;15318:67;15382:2;15377:3;15318:67;:::i;:::-;15311:74;;15394:93;15483:3;15394:93;:::i;:::-;15512:2;15507:3;15503:12;15496:19;;15155:366;;;:::o;15527:419::-;15693:4;15731:2;15720:9;15716:18;15708:26;;15780:9;15774:4;15770:20;15766:1;15755:9;15751:17;15744:47;15808:131;15934:4;15808:131;:::i;:::-;15800:139;;15527:419;;;:::o;15952:225::-;16092:34;16088:1;16080:6;16076:14;16069:58;16161:8;16156:2;16148:6;16144:15;16137:33;15952:225;:::o;16183:366::-;16325:3;16346:67;16410:2;16405:3;16346:67;:::i;:::-;16339:74;;16422:93;16511:3;16422:93;:::i;:::-;16540:2;16535:3;16531:12;16524:19;;16183:366;;;:::o;16555:419::-;16721:4;16759:2;16748:9;16744:18;16736:26;;16808:9;16802:4;16798:20;16794:1;16783:9;16779:17;16772:47;16836:131;16962:4;16836:131;:::i;:::-;16828:139;;16555:419;;;:::o;16980:182::-;17120:34;17116:1;17108:6;17104:14;17097:58;16980:182;:::o;17168:366::-;17310:3;17331:67;17395:2;17390:3;17331:67;:::i;:::-;17324:74;;17407:93;17496:3;17407:93;:::i;:::-;17525:2;17520:3;17516:12;17509:19;;17168:366;;;:::o;17540:419::-;17706:4;17744:2;17733:9;17729:18;17721:26;;17793:9;17787:4;17783:20;17779:1;17768:9;17764:17;17757:47;17821:131;17947:4;17821:131;:::i;:::-;17813:139;;17540:419;;;:::o;17965:194::-;18005:4;18025:20;18043:1;18025:20;:::i;:::-;18020:25;;18059:20;18077:1;18059:20;:::i;:::-;18054:25;;18103:1;18100;18096:9;18088:17;;18127:1;18121:4;18118:11;18115:37;;;18132:18;;:::i;:::-;18115:37;17965:194;;;;:::o;18165:79::-;18204:7;18233:5;18222:16;;18165:79;;;:::o;18250:157::-;18355:45;18375:24;18393:5;18375:24;:::i;:::-;18355:45;:::i;:::-;18350:3;18343:58;18250:157;;:::o;18413:256::-;18525:3;18540:75;18611:3;18602:6;18540:75;:::i;:::-;18640:2;18635:3;18631:12;18624:19;;18660:3;18653:10;;18413:256;;;;:::o;18675:180::-;18723:77;18720:1;18713:88;18820:4;18817:1;18810:15;18844:4;18841:1;18834:15;18861:176;18893:1;18910:20;18928:1;18910:20;:::i;:::-;18905:25;;18944:20;18962:1;18944:20;:::i;:::-;18939:25;;18983:1;18973:35;;18988:18;;:::i;:::-;18973:35;19029:1;19026;19022:9;19017:14;;18861:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1273000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deletePlayerData(uint256)": "infinite",
								"getNFTData(uint256)": "infinite",
								"getplayerData(uint256)": "infinite",
								"nft()": "infinite",
								"owner()": "2544",
								"playerData(uint256)": "infinite",
								"playerVersusNPC(uint256[],uint256,uint256)": "infinite",
								"playerVersusPlayer(uint256,uint256)": "infinite",
								"renounceOwnership()": "30398",
								"setTrustedNFTManagement(address)": "27031",
								"transferOwnership(address)": "30854",
								"trustedNFTManagement()": "2602"
							},
							"internal": {
								"random()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 138,
									"end": 3443,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 595,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 595,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 595,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 595,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 519,
									"end": 595,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 519,
									"end": 595,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 519,
									"end": 595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 519,
									"end": 595,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 576,
									"end": 587,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 562,
									"end": 565,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 562,
									"end": 565,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 562,
									"end": 588,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 562,
									"end": 588,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 562,
									"end": 588,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 562,
									"end": 588,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 562,
									"end": 588,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 519,
									"end": 595,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 3443,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e59051d326f852a68197e4a72d07c590f8e92dd2d55e05c5ee0fbeb51616c3364736f6c63430008130033",
									".code": [
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "B67836F8"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "D7B8D485"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "E00974FF"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "AD4C4F4"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "AEC4ED1"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "25CAB809"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "38A2C0A3"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "47CCCA02"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "5F52789B"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 138,
											"end": 3443,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2710,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2710,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2710,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3176,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3176,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1809,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1809,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 176,
											"end": 194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 176,
											"end": 194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3325,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3325,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 777,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 777,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2912,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2912,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 200,
											"end": 235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 200,
											"end": 235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2770,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2770,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2787,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2770,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2841,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2841,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2818,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2818,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2807,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2807,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2807,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2841,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2841,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2841,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2799,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2799,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2891,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2874,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2874,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 464,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 464,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3269,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3269,
											"end": 3313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1929,
											"end": 1944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1967,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1967,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1967,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1985,
											"end": 1995,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1998,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2064,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2123,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2132,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2124,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2136,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2213,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2193,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2179,
											"end": 2193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2193,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2176,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2163,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2163,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2163,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2163,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2162,
											"end": 2219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2162,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2219,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2162,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2150,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2066,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2253,
											"end": 2275,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2253,
											"end": 2275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2275,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2253,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2252,
											"end": 2281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2252,
											"end": 2281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2281,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2252,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2240,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2240,
											"end": 2282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2386,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2388,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2378,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2390,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2408,
											"end": 2413,
											"name": "SGT",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2453,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2433,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2492,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2485,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2471,
											"end": 2485,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2485,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2471,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2471,
											"end": 2492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2535,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2527,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2510,
											"end": 2527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2527,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2510,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2574,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2611,
											"end": 2625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2611,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "PUSH",
											"source": 4,
											"value": "1F4"
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2649,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2404,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2320,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 176,
											"end": 194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 176,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3386,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3386,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3403,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3386,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3428,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3411,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3411,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1027,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1036,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1037,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1086,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1095,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1119,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1119,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1150,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1158,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1150,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1301,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1283,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1276,
											"end": 1291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1291,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1259,
											"end": 1312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1312,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1259,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1258,
											"end": 1318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1258,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1318,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1258,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1230,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1195,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1188,
											"end": 1202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1202,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1188,
											"end": 1220,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1188,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1220,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1188,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1188,
											"end": 1241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1188,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1241,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1188,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1187,
											"end": 1247,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1187,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1247,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1187,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1180,
											"end": 1319,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1180,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1319,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1180,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1339,
											"name": "SGT",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1355,
											"end": 1362,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1369,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1355,
											"end": 1369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1355,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1389,
											"end": 1396,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1404,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1389,
											"end": 1404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1389,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1424,
											"end": 1431,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1424,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1464,
											"end": 1471,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1478,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1464,
											"end": 1478,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1464,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1497,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1600,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1600,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1586,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1634,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1619,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1653,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1692,
											"end": 1699,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1692,
											"end": 1706,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1692,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1726,
											"end": 1733,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1741,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1726,
											"end": 1741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1726,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1783,
											"end": 1786,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1761,
											"end": 1786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1330,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 848,
											"end": 1803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 848,
											"end": 1803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 848,
											"end": 1803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 848,
											"end": 1803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 848,
											"end": 1803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2996,
											"end": 3016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 2992,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2974,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3110,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3093,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 200,
											"end": 235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 200,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 771,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 600,
											"end": 771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 640,
											"end": 647,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 325,
											"end": 328,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 723,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 723,
											"end": 746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 723,
											"end": 746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 723,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 723,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 723,
											"end": 746,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 723,
											"end": 746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 723,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 723,
											"end": 750,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 723,
											"end": 750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 723,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 723,
											"end": 750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 723,
											"end": 750,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 723,
											"end": 750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 701,
											"end": 716,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 717,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 717,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 684,
											"end": 717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 684,
											"end": 717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 684,
											"end": 717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 717,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 684,
											"end": 717,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 674,
											"end": 718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 718,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 674,
											"end": 718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 674,
											"end": 718,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 666,
											"end": 719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 719,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 666,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 666,
											"end": 751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 666,
											"end": 751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 666,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 666,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 666,
											"end": 751,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 666,
											"end": 751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 666,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 666,
											"end": 764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 666,
											"end": 764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 666,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 666,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 666,
											"end": 764,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 666,
											"end": 764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 659,
											"end": 764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 659,
											"end": 764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "75"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "196"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "196"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "197"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "198"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "197"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "198"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "199"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "199"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1116,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1130,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1276,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1295,
											"end": 1541,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1295,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1398,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1407,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1483,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1487,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1464,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 1386,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1522,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1535,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1295,
											"end": 1541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1295,
											"end": 1541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1295,
											"end": 1541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1295,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1547,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1623,
											"end": 1628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1643,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1547,
											"end": 1649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 2012,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1655,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1761,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1868,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1816,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1816,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1877,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1942,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1936,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1886,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1951,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1886,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1976,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1976,
											"end": 2005,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1976,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 2012,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 2012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 2012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 2012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1655,
											"end": 2012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2126,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2018,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 2113,
											"end": 2118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2095,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2119,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 2095,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 3169,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2200,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2363,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2354,
											"end": 2357,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2446,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2502,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2503,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2487,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2504,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 2593,
											"end": 2597,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2579,
											"end": 2591,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2525,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2598,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 2525,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2686,
											"end": 2691,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2712,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2775,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 2712,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 2944,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2935,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2889,
											"end": 2952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3054,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3043,
											"end": 3048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3056,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3126,
											"end": 3130,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3121,
											"end": 3124,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3069,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3132,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3069,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2972,
											"end": 3142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 3169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 3169,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 3169,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 3169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 3169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3556,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3175,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3362,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3407,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3373,
											"end": 3420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 3544,
											"end": 3548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3437,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3549,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 3437,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3731,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3562,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3731,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 4114,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 3737,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3853,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3853,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3853,
											"end": 3892,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3853,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3970,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3908,
											"end": 3979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3979,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3908,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3979,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3988,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4044,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4034,
											"end": 4038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4032,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4023,
											"end": 4039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3988,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3988,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3988,
											"end": 4053,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 3988,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4078,
											"end": 4107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4107,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 4078,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4076,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4062,
											"end": 4108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4062,
											"end": 4108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 4114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 4114,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 4114,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 4114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 4114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 4114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 4225,
											"end": 4230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4207,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4231,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 4207,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4202,
											"end": 4205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4195,
											"end": 4232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4441,
											"end": 4445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4482,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4468,
											"end": 4477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4513,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4493,
											"end": 4540,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4621,
											"end": 4627,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4557,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4635,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 4557,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 4713,
											"end": 4715,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4645,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4717,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 4645,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 4795,
											"end": 4797,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4793,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4780,
											"end": 4798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4777,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4727,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4799,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 4727,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 4877,
											"end": 4879,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4866,
											"end": 4875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4859,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4809,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4881,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 4809,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4894,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5014,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4949,
											"end": 5014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4949,
											"end": 5014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5122,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 5026,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 5110,
											"end": 5115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5092,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5122,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5250,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5128,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 5219,
											"end": 5224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 5201,
											"end": 5225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 5201,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5191,
											"end": 5226,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 5181,
											"end": 5244,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5238,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5230,
											"end": 5242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5244,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 5181,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5395,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5256,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5347,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 5383,
											"end": 5388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5356,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5389,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 5356,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5395,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5730,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 5401,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5497,
											"end": 5506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5488,
											"end": 5495,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5480,
											"end": 5512,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5596,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 5477,
											"end": 5596,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5515,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 5515,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5515,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5515,
											"end": 5594,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 5515,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5596,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 5477,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 5705,
											"end": 5712,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5696,
											"end": 5702,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5685,
											"end": 5694,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5660,
											"end": 5713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5713,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 5660,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5713,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5713,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5730,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5730,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5736,
											"end": 5853,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5736,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5843,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5835,
											"end": 5847,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 6039,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5859,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 5984,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6008,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 6001,
											"end": 6002,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6009,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6033,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6326,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6045,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6150,
											"end": 6154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6128,
											"end": 6155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6258,
											"end": 6264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6243,
											"end": 6265,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6240,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6210,
											"end": 6220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6207,
											"end": 6241,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6204,
											"end": 6266,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6201,
											"end": 6289,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6201,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6201,
											"end": 6289,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6269,
											"end": 6287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6201,
											"end": 6289,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6201,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6309,
											"end": 6319,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6305,
											"end": 6307,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6298,
											"end": 6320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6332,
											"end": 6461,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 6332,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6366,
											"end": 6372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 6393,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 6393,
											"end": 6413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6413,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 6393,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 6450,
											"end": 6454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6422,
											"end": 6455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6455,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 6422,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6332,
											"end": 6461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6332,
											"end": 6461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6332,
											"end": 6461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6332,
											"end": 6461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6778,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6467,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6626,
											"end": 6632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6623,
											"end": 6653,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6676,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6620,
											"end": 6676,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6656,
											"end": 6674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6676,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6620,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6698,
											"end": 6704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6694,
											"end": 6711,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6760,
											"end": 6764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6748,
											"end": 6771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6748,
											"end": 6771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6778,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6901,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 6784,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6893,
											"end": 6894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6895,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 7634,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 6924,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7020,
											"end": 7025,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7061,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7118,
											"end": 7124,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7061,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 7061,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7061,
											"end": 7125,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7061,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7045,
											"end": 7126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7126,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7045,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7036,
											"end": 7126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7036,
											"end": 7126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7151,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7175,
											"end": 7181,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7161,
											"end": 7182,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7209,
											"end": 7213,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7202,
											"end": 7207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7198,
											"end": 7214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7262,
											"end": 7266,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7254,
											"end": 7260,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7267,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7242,
											"end": 7248,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7238,
											"end": 7268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7291,
											"end": 7294,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7283,
											"end": 7289,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7295,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7399,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 7277,
											"end": 7399,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7310,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 7310,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7310,
											"end": 7389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7310,
											"end": 7389,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 7310,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7399,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 7277,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7437,
											"end": 7440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7434,
											"end": 7449,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7517,
											"end": 7520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7546,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 7579,
											"end": 7582,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7546,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7546,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7546,
											"end": 7583,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 7546,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7541,
											"end": 7544,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7534,
											"end": 7584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7617,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7608,
											"end": 7611,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7604,
											"end": 7618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7597,
											"end": 7618,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7597,
											"end": 7618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7463,
											"end": 7466,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7459,
											"end": 7473,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7452,
											"end": 7473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7452,
											"end": 7473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 7408,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7026,
											"end": 7634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7026,
											"end": 7634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 7634,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 7634,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 7634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 7634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 7634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 7634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 8027,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 7657,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7728,
											"end": 7733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7777,
											"end": 7780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7770,
											"end": 7774,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7762,
											"end": 7768,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7754,
											"end": 7781,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7744,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 7744,
											"end": 7866,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7785,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 7785,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7785,
											"end": 7864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7785,
											"end": 7864,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 7785,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7744,
											"end": 7866,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 7744,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7902,
											"end": 7908,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 7909,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 8017,
											"end": 8020,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8009,
											"end": 8015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7994,
											"end": 8000,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7990,
											"end": 8007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 7927,
											"end": 8021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 8021,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 7927,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 8021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 8021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7734,
											"end": 8027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 8027,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 8027,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 8027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 8027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 8027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8862,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 8033,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8149,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8151,
											"end": 8157,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8202,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8188,
											"end": 8197,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8186,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8198,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8203,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 8168,
											"end": 8287,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8168,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 8168,
											"end": 8287,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 8206,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 8206,
											"end": 8285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8285,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 8206,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8168,
											"end": 8287,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 8168,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8354,
											"end": 8355,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8343,
											"end": 8352,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8339,
											"end": 8356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8326,
											"end": 8357,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8384,
											"end": 8402,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8403,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 8487,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 8370,
											"end": 8487,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 8406,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8406,
											"end": 8485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8406,
											"end": 8485,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 8406,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 8487,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 8370,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8511,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 8581,
											"end": 8588,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8570,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8511,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8511,
											"end": 8589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8511,
											"end": 8589,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 8511,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8501,
											"end": 8589,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8501,
											"end": 8589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8297,
											"end": 8599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8638,
											"end": 8640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 8709,
											"end": 8716,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8689,
											"end": 8698,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8685,
											"end": 8707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8664,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8664,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8664,
											"end": 8717,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 8664,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 8717,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 8717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8609,
											"end": 8727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8766,
											"end": 8768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8792,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 8837,
											"end": 8844,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8828,
											"end": 8834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8826,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8813,
											"end": 8835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8792,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8792,
											"end": 8845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8792,
											"end": 8845,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 8792,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8782,
											"end": 8845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8782,
											"end": 8845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8737,
											"end": 8855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8928,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 8868,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8896,
											"end": 8899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 8922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 9076,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 8934,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8984,
											"end": 8993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9017,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 9035,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 9062,
											"end": 9067,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9044,
											"end": 9068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 9044,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9035,
											"end": 9069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9069,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 9035,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9017,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9017,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9017,
											"end": 9070,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 9017,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9004,
											"end": 9070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9004,
											"end": 9070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 9076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 9076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 9076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8934,
											"end": 9076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9208,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9082,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9132,
											"end": 9141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9165,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 9196,
											"end": 9201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9165,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9165,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9165,
											"end": 9202,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 9165,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9152,
											"end": 9202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9152,
											"end": 9202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9355,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9214,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 9343,
											"end": 9348,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9312,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9312,
											"end": 9349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9312,
											"end": 9349,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 9312,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9299,
											"end": 9349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9299,
											"end": 9349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9522,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 9361,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9463,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 9509,
											"end": 9514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9463,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9463,
											"end": 9515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9463,
											"end": 9515,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 9463,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9780,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 9528,
											"end": 9780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9636,
											"end": 9640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9674,
											"end": 9676,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9663,
											"end": 9672,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9651,
											"end": 9677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 9770,
											"end": 9771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9768,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9755,
											"end": 9772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9746,
											"end": 9752,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 9687,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9773,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 9687,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9780,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9780,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9528,
											"end": 9780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9786,
											"end": 9904,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 9786,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9873,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 9891,
											"end": 9896,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9873,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 9873,
											"end": 9897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9873,
											"end": 9897,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 9873,
											"end": 9897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9786,
											"end": 9904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9786,
											"end": 9904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9786,
											"end": 9904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 10132,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 9910,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10003,
											"end": 10007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10043,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10030,
											"end": 10039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10054,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 10122,
											"end": 10123,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10107,
											"end": 10124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10098,
											"end": 10104,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10054,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10054,
											"end": 10125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10054,
											"end": 10125,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 10054,
											"end": 10125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 10132,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 10132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 10132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 10132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 10132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10612,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 10138,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10206,
											"end": 10212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10214,
											"end": 10220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10263,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10251,
											"end": 10260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10242,
											"end": 10249,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10238,
											"end": 10261,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10266,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 10231,
											"end": 10350,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10231,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 10231,
											"end": 10350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10269,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 10269,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 10269,
											"end": 10348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10269,
											"end": 10348,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 10269,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10231,
											"end": 10350,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 10231,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10389,
											"end": 10390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10414,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 10459,
											"end": 10466,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10450,
											"end": 10456,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10439,
											"end": 10448,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10435,
											"end": 10457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 10414,
											"end": 10467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10414,
											"end": 10467,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 10414,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10467,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10516,
											"end": 10518,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10542,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 10587,
											"end": 10594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10578,
											"end": 10584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10567,
											"end": 10576,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10563,
											"end": 10585,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 10542,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10595,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 10542,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10532,
											"end": 10595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10612,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10612,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10618,
											"end": 10840,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 10618,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10711,
											"end": 10715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10749,
											"end": 10751,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10738,
											"end": 10747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10734,
											"end": 10752,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10726,
											"end": 10752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10726,
											"end": 10752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10762,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 10830,
											"end": 10831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10819,
											"end": 10828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10815,
											"end": 10832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10762,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 10762,
											"end": 10833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10762,
											"end": 10833,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 10762,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10618,
											"end": 10840,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10618,
											"end": 10840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10618,
											"end": 10840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10618,
											"end": 10840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10618,
											"end": 10840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10989,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10846,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10903,
											"end": 10908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10934,
											"end": 10940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10928,
											"end": 10941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10919,
											"end": 10941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10919,
											"end": 10941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10950,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 10977,
											"end": 10982,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10950,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 10950,
											"end": 10983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10950,
											"end": 10983,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 10950,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10989,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10989,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11346,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 10995,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11116,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11102,
											"end": 11111,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11100,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11089,
											"end": 11112,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11085,
											"end": 11117,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 11082,
											"end": 11201,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11082,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 11082,
											"end": 11201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11120,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 11120,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 11120,
											"end": 11199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11120,
											"end": 11199,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 11120,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11082,
											"end": 11201,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 11082,
											"end": 11201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11240,
											"end": 11241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11265,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 11321,
											"end": 11328,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11312,
											"end": 11318,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11301,
											"end": 11310,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11297,
											"end": 11319,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11265,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 11265,
											"end": 11329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11265,
											"end": 11329,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 11265,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11255,
											"end": 11329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11255,
											"end": 11329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11211,
											"end": 11339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11346,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11346,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11352,
											"end": 11520,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 11352,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11492,
											"end": 11512,
											"name": "PUSH",
											"source": 5,
											"value": "4E465420646F6573206E6F742065786973740000000000000000000000000000"
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11476,
											"end": 11490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11469,
											"end": 11513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11352,
											"end": 11520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11352,
											"end": 11520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11668,
											"end": 11671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 11753,
											"end": 11755,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 11748,
											"end": 11751,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11689,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 11689,
											"end": 11756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11689,
											"end": 11756,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 11689,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11682,
											"end": 11756,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11682,
											"end": 11756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11765,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 11854,
											"end": 11857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11765,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 11765,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11765,
											"end": 11858,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 11765,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11883,
											"end": 11885,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11878,
											"end": 11881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 11886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11867,
											"end": 11886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11867,
											"end": 11886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11526,
											"end": 11892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12102,
											"end": 12104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12091,
											"end": 12100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12079,
											"end": 12105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12151,
											"end": 12160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12145,
											"end": 12149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12141,
											"end": 12161,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12137,
											"end": 12138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12126,
											"end": 12135,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12122,
											"end": 12139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12115,
											"end": 12162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12179,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12305,
											"end": 12309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12179,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 12179,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12179,
											"end": 12310,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12179,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12171,
											"end": 12310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12171,
											"end": 12310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11898,
											"end": 12317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12323,
											"end": 12503,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 12323,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12371,
											"end": 12448,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12361,
											"end": 12449,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12468,
											"end": 12472,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 12465,
											"end": 12466,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12458,
											"end": 12473,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12492,
											"end": 12496,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12489,
											"end": 12490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12482,
											"end": 12497,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12509,
											"end": 12829,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 12509,
											"end": 12829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12590,
											"end": 12591,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 12584,
											"end": 12588,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12580,
											"end": 12592,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12637,
											"end": 12638,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 12631,
											"end": 12635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12658,
											"end": 12676,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12648,
											"end": 12729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 12648,
											"end": 12729,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12714,
											"end": 12718,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 12706,
											"end": 12712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12702,
											"end": 12719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12692,
											"end": 12719,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12692,
											"end": 12719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12648,
											"end": 12729,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 12648,
											"end": 12729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12776,
											"end": 12778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 12779,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12745,
											"end": 12763,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12742,
											"end": 12780,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12739,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12739,
											"end": 12823,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 12795,
											"end": 12813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 12795,
											"end": 12813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12739,
											"end": 12823,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 12739,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12560,
											"end": 12829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12509,
											"end": 12829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12509,
											"end": 12829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12509,
											"end": 12829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12509,
											"end": 12829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12835,
											"end": 13015,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 12835,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12883,
											"end": 12960,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12880,
											"end": 12881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12873,
											"end": 12961,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12980,
											"end": 12984,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 12977,
											"end": 12978,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13004,
											"end": 13008,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13001,
											"end": 13002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12994,
											"end": 13009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13021,
											"end": 13201,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 13021,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13069,
											"end": 13146,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13066,
											"end": 13067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13059,
											"end": 13147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13166,
											"end": 13170,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 13163,
											"end": 13164,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13156,
											"end": 13171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13190,
											"end": 13194,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13187,
											"end": 13188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 13195,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13207,
											"end": 13398,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 13207,
											"end": 13398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13247,
											"end": 13250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13266,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 13284,
											"end": 13285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13266,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 13266,
											"end": 13286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13266,
											"end": 13286,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 13266,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13261,
											"end": 13286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13261,
											"end": 13286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13300,
											"end": 13320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 13318,
											"end": 13319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13300,
											"end": 13320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 13300,
											"end": 13320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13300,
											"end": 13320,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 13300,
											"end": 13320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13295,
											"end": 13320,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13295,
											"end": 13320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13343,
											"end": 13344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13340,
											"end": 13341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13336,
											"end": 13345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13329,
											"end": 13345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13329,
											"end": 13345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13364,
											"end": 13367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13361,
											"end": 13362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13358,
											"end": 13368,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13391,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 13355,
											"end": 13391,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 13371,
											"end": 13389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13355,
											"end": 13391,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 13355,
											"end": 13391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13207,
											"end": 13398,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13207,
											"end": 13398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13207,
											"end": 13398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13207,
											"end": 13398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13207,
											"end": 13398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13404,
											"end": 13814,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 13404,
											"end": 13814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13444,
											"end": 13451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13467,
											"end": 13487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 13485,
											"end": 13486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13467,
											"end": 13487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 13467,
											"end": 13487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13467,
											"end": 13487,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 13467,
											"end": 13487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13462,
											"end": 13487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13462,
											"end": 13487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13501,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 13519,
											"end": 13520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13501,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 13501,
											"end": 13521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13501,
											"end": 13521,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 13501,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13521,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13496,
											"end": 13521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13556,
											"end": 13557,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13553,
											"end": 13554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13549,
											"end": 13558,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 13578,
											"end": 13608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 13596,
											"end": 13607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13578,
											"end": 13608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 13578,
											"end": 13608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13578,
											"end": 13608,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 13578,
											"end": 13608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13567,
											"end": 13608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13567,
											"end": 13608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13757,
											"end": 13758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13748,
											"end": 13755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13744,
											"end": 13759,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 13741,
											"end": 13742,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13738,
											"end": 13760,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13718,
											"end": 13719,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13691,
											"end": 13774,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 13668,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 13668,
											"end": 13807,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 13787,
											"end": 13805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13668,
											"end": 13807,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 13668,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13452,
											"end": 13814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13404,
											"end": 13814,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13404,
											"end": 13814,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13404,
											"end": 13814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13404,
											"end": 13814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13404,
											"end": 13814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13820,
											"end": 13896,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 13820,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13856,
											"end": 13863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13874,
											"end": 13890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13874,
											"end": 13890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13820,
											"end": 13896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13820,
											"end": 13896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13820,
											"end": 13896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13820,
											"end": 13896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13902,
											"end": 14277,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 13902,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13941,
											"end": 13944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13960,
											"end": 13979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 13977,
											"end": 13978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13960,
											"end": 13979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 13960,
											"end": 13979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13960,
											"end": 13979,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 13960,
											"end": 13979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13955,
											"end": 13979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13955,
											"end": 13979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13993,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 14010,
											"end": 14011,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13993,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 13993,
											"end": 14012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13993,
											"end": 14012,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 13993,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13988,
											"end": 14012,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13988,
											"end": 14012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14035,
											"end": 14036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14032,
											"end": 14033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14028,
											"end": 14037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14021,
											"end": 14037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14021,
											"end": 14037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14233,
											"end": 14234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14228,
											"end": 14231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14224,
											"end": 14235,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 14217,
											"end": 14236,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14213,
											"end": 14214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14210,
											"end": 14211,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14206,
											"end": 14215,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 14202,
											"end": 14237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14185,
											"end": 14186,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14180,
											"end": 14183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14176,
											"end": 14187,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 14171,
											"end": 14172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14168,
											"end": 14169,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14164,
											"end": 14173,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 14157,
											"end": 14174,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14153,
											"end": 14188,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14137,
											"end": 14247,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 14134,
											"end": 14270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14134,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 14134,
											"end": 14270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14250,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 14250,
											"end": 14268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 14250,
											"end": 14268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14250,
											"end": 14268,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 14250,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14134,
											"end": 14270,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 14134,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13902,
											"end": 14277,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13902,
											"end": 14277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13902,
											"end": 14277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13902,
											"end": 14277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13902,
											"end": 14277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14283,
											"end": 14516,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 14283,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14322,
											"end": 14325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14345,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 14363,
											"end": 14368,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14345,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 14345,
											"end": 14369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14345,
											"end": 14369,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 14345,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14336,
											"end": 14369,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14336,
											"end": 14369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14391,
											"end": 14457,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14384,
											"end": 14389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14381,
											"end": 14458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14378,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 14378,
											"end": 14481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 14461,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 14461,
											"end": 14479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14479,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 14461,
											"end": 14479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14378,
											"end": 14481,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 14378,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14508,
											"end": 14509,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14501,
											"end": 14506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14497,
											"end": 14510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14490,
											"end": 14510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14490,
											"end": 14510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14283,
											"end": 14516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14283,
											"end": 14516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14283,
											"end": 14516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14283,
											"end": 14516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14522,
											"end": 14894,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 14522,
											"end": 14894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14561,
											"end": 14565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14581,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 14598,
											"end": 14599,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 14581,
											"end": 14600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14600,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 14581,
											"end": 14600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14576,
											"end": 14600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14576,
											"end": 14600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 14631,
											"end": 14632,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 14614,
											"end": 14633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14609,
											"end": 14633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14609,
											"end": 14633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14657,
											"end": 14658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14654,
											"end": 14655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14650,
											"end": 14659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14642,
											"end": 14659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14642,
											"end": 14659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14851,
											"end": 14852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14845,
											"end": 14849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14841,
											"end": 14853,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 14837,
											"end": 14838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14834,
											"end": 14835,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14830,
											"end": 14839,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 14826,
											"end": 14854,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14809,
											"end": 14810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14803,
											"end": 14807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14799,
											"end": 14811,
											"name": "SGT",
											"source": 5
										},
										{
											"begin": 14794,
											"end": 14795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14791,
											"end": 14792,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14787,
											"end": 14796,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 14780,
											"end": 14797,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14776,
											"end": 14812,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14760,
											"end": 14864,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 14757,
											"end": 14887,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14757,
											"end": 14887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 14757,
											"end": 14887,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14867,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 14867,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 14867,
											"end": 14885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14867,
											"end": 14885,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 14867,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14757,
											"end": 14887,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 14757,
											"end": 14887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14522,
											"end": 14894,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14522,
											"end": 14894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14522,
											"end": 14894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14522,
											"end": 14894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14522,
											"end": 14894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14900,
											"end": 15149,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 14900,
											"end": 15149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15040,
											"end": 15074,
											"name": "PUSH",
											"source": 5,
											"value": "4F6E6C79207468652074727573746564204E46544D616E6167656D656E742063"
										},
										{
											"begin": 15036,
											"end": 15037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15017,
											"end": 15075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15109,
											"end": 15141,
											"name": "PUSH",
											"source": 5,
											"value": "6F6E74726163742063616E2063616C6C20746869732066756E6374696F6E0000"
										},
										{
											"begin": 15104,
											"end": 15106,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15085,
											"end": 15142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14900,
											"end": 15149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14900,
											"end": 15149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15155,
											"end": 15521,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 15155,
											"end": 15521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15297,
											"end": 15300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15318,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 15382,
											"end": 15384,
											"name": "PUSH",
											"source": 5,
											"value": "3E"
										},
										{
											"begin": 15377,
											"end": 15380,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15318,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 15318,
											"end": 15385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15318,
											"end": 15385,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 15318,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15311,
											"end": 15385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15311,
											"end": 15385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15394,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 15483,
											"end": 15486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15394,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 15394,
											"end": 15487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15394,
											"end": 15487,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 15394,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15512,
											"end": 15514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15507,
											"end": 15510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15503,
											"end": 15515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15496,
											"end": 15515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15496,
											"end": 15515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15155,
											"end": 15521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15155,
											"end": 15521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15155,
											"end": 15521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15155,
											"end": 15521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15527,
											"end": 15946,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 15527,
											"end": 15946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15693,
											"end": 15697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15731,
											"end": 15733,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15720,
											"end": 15729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15716,
											"end": 15734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15708,
											"end": 15734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15708,
											"end": 15734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15780,
											"end": 15789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15774,
											"end": 15778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15770,
											"end": 15790,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15766,
											"end": 15767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15755,
											"end": 15764,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15751,
											"end": 15768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15744,
											"end": 15791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 15934,
											"end": 15938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 15808,
											"end": 15939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 15808,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15800,
											"end": 15939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15800,
											"end": 15939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15527,
											"end": 15946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15527,
											"end": 15946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15527,
											"end": 15946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15527,
											"end": 15946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15952,
											"end": 16177,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 15952,
											"end": 16177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16092,
											"end": 16126,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16088,
											"end": 16089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16080,
											"end": 16086,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16076,
											"end": 16090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16069,
											"end": 16127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16161,
											"end": 16169,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16156,
											"end": 16158,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16148,
											"end": 16154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16144,
											"end": 16159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16137,
											"end": 16170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15952,
											"end": 16177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15952,
											"end": 16177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16183,
											"end": 16549,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 16183,
											"end": 16549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16325,
											"end": 16328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16346,
											"end": 16413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 16410,
											"end": 16412,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 16405,
											"end": 16408,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16346,
											"end": 16413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 16346,
											"end": 16413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16346,
											"end": 16413,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 16346,
											"end": 16413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16339,
											"end": 16413,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16339,
											"end": 16413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16422,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 16511,
											"end": 16514,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16422,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 16422,
											"end": 16515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16422,
											"end": 16515,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 16422,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16540,
											"end": 16542,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16531,
											"end": 16543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16524,
											"end": 16543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16524,
											"end": 16543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16183,
											"end": 16549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16183,
											"end": 16549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16183,
											"end": 16549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16183,
											"end": 16549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16555,
											"end": 16974,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 16555,
											"end": 16974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16721,
											"end": 16725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16748,
											"end": 16757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16744,
											"end": 16762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16736,
											"end": 16762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16736,
											"end": 16762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16808,
											"end": 16817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16802,
											"end": 16806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16798,
											"end": 16818,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16794,
											"end": 16795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16783,
											"end": 16792,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16779,
											"end": 16796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16772,
											"end": 16819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16836,
											"end": 16967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 16962,
											"end": 16966,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16836,
											"end": 16967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 16836,
											"end": 16967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16836,
											"end": 16967,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 16836,
											"end": 16967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16828,
											"end": 16967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16828,
											"end": 16967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16555,
											"end": 16974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16555,
											"end": 16974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16555,
											"end": 16974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16555,
											"end": 16974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16980,
											"end": 17162,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 16980,
											"end": 17162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17120,
											"end": 17154,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17116,
											"end": 17117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17108,
											"end": 17114,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17104,
											"end": 17118,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17097,
											"end": 17155,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16980,
											"end": 17162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16980,
											"end": 17162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17168,
											"end": 17534,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17168,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17310,
											"end": 17313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17331,
											"end": 17398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 17395,
											"end": 17397,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17390,
											"end": 17393,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17331,
											"end": 17398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 17331,
											"end": 17398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17331,
											"end": 17398,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 17331,
											"end": 17398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17324,
											"end": 17398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17324,
											"end": 17398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17407,
											"end": 17500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 17496,
											"end": 17499,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17407,
											"end": 17500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 17407,
											"end": 17500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17407,
											"end": 17500,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 17407,
											"end": 17500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17525,
											"end": 17527,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17520,
											"end": 17523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17516,
											"end": 17528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17509,
											"end": 17528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17509,
											"end": 17528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17168,
											"end": 17534,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17168,
											"end": 17534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17168,
											"end": 17534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17168,
											"end": 17534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17540,
											"end": 17959,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 17540,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17706,
											"end": 17710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17744,
											"end": 17746,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17733,
											"end": 17742,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17729,
											"end": 17747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17721,
											"end": 17747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17721,
											"end": 17747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17793,
											"end": 17802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17787,
											"end": 17791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17783,
											"end": 17803,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17779,
											"end": 17780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17768,
											"end": 17777,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17764,
											"end": 17781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17757,
											"end": 17804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17821,
											"end": 17952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 17947,
											"end": 17951,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17821,
											"end": 17952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17821,
											"end": 17952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17821,
											"end": 17952,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 17821,
											"end": 17952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17813,
											"end": 17952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17813,
											"end": 17952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17540,
											"end": 17959,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17540,
											"end": 17959,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17540,
											"end": 17959,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17540,
											"end": 17959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17965,
											"end": 18159,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 17965,
											"end": 18159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18005,
											"end": 18009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18025,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 18043,
											"end": 18044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18025,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 18025,
											"end": 18045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18025,
											"end": 18045,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 18025,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18020,
											"end": 18045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18020,
											"end": 18045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18059,
											"end": 18079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 18077,
											"end": 18078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 18059,
											"end": 18079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 18059,
											"end": 18079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18059,
											"end": 18079,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 18059,
											"end": 18079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18054,
											"end": 18079,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 18054,
											"end": 18079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18103,
											"end": 18104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18100,
											"end": 18101,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18096,
											"end": 18105,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 18088,
											"end": 18105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18088,
											"end": 18105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18127,
											"end": 18128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18121,
											"end": 18125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18118,
											"end": 18129,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 18115,
											"end": 18152,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18115,
											"end": 18152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 18115,
											"end": 18152,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18132,
											"end": 18150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 18132,
											"end": 18150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 18132,
											"end": 18150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18132,
											"end": 18150,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 18132,
											"end": 18150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18115,
											"end": 18152,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 18115,
											"end": 18152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17965,
											"end": 18159,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17965,
											"end": 18159,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17965,
											"end": 18159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17965,
											"end": 18159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17965,
											"end": 18159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18165,
											"end": 18244,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 18165,
											"end": 18244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18204,
											"end": 18211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18233,
											"end": 18238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18222,
											"end": 18238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18222,
											"end": 18238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18165,
											"end": 18244,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18165,
											"end": 18244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18165,
											"end": 18244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18165,
											"end": 18244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18250,
											"end": 18407,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 18250,
											"end": 18407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18355,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 18375,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 18393,
											"end": 18398,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18375,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 18375,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18375,
											"end": 18399,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 18375,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18355,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 18355,
											"end": 18400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18355,
											"end": 18400,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 18355,
											"end": 18400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18350,
											"end": 18353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18343,
											"end": 18401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18250,
											"end": 18407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18250,
											"end": 18407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18250,
											"end": 18407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18413,
											"end": 18669,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 18413,
											"end": 18669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18525,
											"end": 18528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18540,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 18611,
											"end": 18614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18602,
											"end": 18608,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 18540,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 18540,
											"end": 18615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18540,
											"end": 18615,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 18540,
											"end": 18615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18640,
											"end": 18642,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18635,
											"end": 18638,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18631,
											"end": 18643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18624,
											"end": 18643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18624,
											"end": 18643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18660,
											"end": 18663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18653,
											"end": 18663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18653,
											"end": 18663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18413,
											"end": 18669,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 18413,
											"end": 18669,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18413,
											"end": 18669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18413,
											"end": 18669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18413,
											"end": 18669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18675,
											"end": 18855,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 18675,
											"end": 18855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18723,
											"end": 18800,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18720,
											"end": 18721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18713,
											"end": 18801,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18820,
											"end": 18824,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 18817,
											"end": 18818,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 18810,
											"end": 18825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18844,
											"end": 18848,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 18841,
											"end": 18842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18834,
											"end": 18849,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 18861,
											"end": 19037,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 18861,
											"end": 19037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18893,
											"end": 18894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18910,
											"end": 18930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 18928,
											"end": 18929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18910,
											"end": 18930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 18910,
											"end": 18930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18910,
											"end": 18930,
											"name": "tag",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 18910,
											"end": 18930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18905,
											"end": 18930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18905,
											"end": 18930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18944,
											"end": 18964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "445"
										},
										{
											"begin": 18962,
											"end": 18963,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 18944,
											"end": 18964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 18944,
											"end": 18964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18944,
											"end": 18964,
											"name": "tag",
											"source": 5,
											"value": "445"
										},
										{
											"begin": 18944,
											"end": 18964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18939,
											"end": 18964,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 18939,
											"end": 18964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18983,
											"end": 18984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18973,
											"end": 19008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 18973,
											"end": 19008,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18988,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 18988,
											"end": 19006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 18988,
											"end": 19006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18988,
											"end": 19006,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 18988,
											"end": 19006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18973,
											"end": 19008,
											"name": "tag",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 18973,
											"end": 19008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19029,
											"end": 19030,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19026,
											"end": 19027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19022,
											"end": 19031,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 19017,
											"end": 19031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19017,
											"end": 19031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18861,
											"end": 19037,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 18861,
											"end": 19037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18861,
											"end": 19037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18861,
											"end": 19037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18861,
											"end": 19037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"trustless cross-chain/trading pair formation/Battlegame.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deletePlayerData(uint256)": "d7b8d485",
							"getNFTData(uint256)": "0ad4c4f4",
							"getplayerData(uint256)": "5f52789b",
							"nft()": "47ccca02",
							"owner()": "8da5cb5b",
							"playerData(uint256)": "0aec4ed1",
							"playerVersusNPC(uint256[],uint256,uint256)": "38a2c0a3",
							"playerVersusPlayer(uint256,uint256)": "b67836f8",
							"renounceOwnership()": "715018a6",
							"setTrustedNFTManagement(address)": "25cab809",
							"transferOwnership(address)": "f2fde38b",
							"trustedNFTManagement()": "e00974ff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deletePlayerData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFTData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attack\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defense\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"}],\"internalType\":\"struct BattleGame.PlayerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getplayerData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attack\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defense\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"}],\"internalType\":\"struct BattleGame.PlayerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attack\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defense\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"npcAttack\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"npcDefense\",\"type\":\"uint256\"}],\"name\":\"playerVersusNPC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId2\",\"type\":\"uint256\"}],\"name\":\"playerVersusPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedNFTManagement\",\"type\":\"address\"}],\"name\":\"setTrustedNFTManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedNFTManagement\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"trustless cross-chain/trading pair formation/Battlegame.sol\":\"BattleGame\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"trustless cross-chain/trading pair formation/Battlegame.sol\":{\"keccak256\":\"0x300c2ea2e710763427ed68e3fa034a0b35997af15fb4f9a5c41f9378d2209d71\",\"urls\":[\"bzz-raw://9f7495d4128dd9416bb2030d2878276b9b6df384e326a123eb468b38a3d94d2d\",\"dweb:/ipfs/QmZb8qHK5iPkTZJNuPmiW86LmRPsTvvGHuRgDzpD9Kcupx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "trustless cross-chain/trading pair formation/Battlegame.sol:BattleGame",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 271,
								"contract": "trustless cross-chain/trading pair formation/Battlegame.sol:BattleGame",
								"label": "nft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)228"
							},
							{
								"astId": 273,
								"contract": "trustless cross-chain/trading pair formation/Battlegame.sol:BattleGame",
								"label": "trustedNFTManagement",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 293,
								"contract": "trustless cross-chain/trading pair formation/Battlegame.sol:BattleGame",
								"label": "playerData",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(PlayerData)288_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)228": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(PlayerData)288_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct BattleGame.PlayerData)",
								"numberOfBytes": "32",
								"value": "t_struct(PlayerData)288_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(PlayerData)288_storage": {
								"encoding": "inplace",
								"label": "struct BattleGame.PlayerData",
								"members": [
									{
										"astId": 281,
										"contract": "trustless cross-chain/trading pair formation/Battlegame.sol:BattleGame",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 283,
										"contract": "trustless cross-chain/trading pair formation/Battlegame.sol:BattleGame",
										"label": "attack",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 285,
										"contract": "trustless cross-chain/trading pair formation/Battlegame.sol:BattleGame",
										"label": "defense",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 287,
										"contract": "trustless cross-chain/trading pair formation/Battlegame.sol:BattleGame",
										"label": "experience",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> trustless cross-chain/trading pair formation/Battlegame.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "trustless cross-chain/trading pair formation/Battlegame.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							250
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 251,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 250,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								250
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							262
						],
						"IERC721": [
							228
						]
					},
					"id": 229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 263,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 262,
										"src": "271:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228,
								262
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 127,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 136,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 145,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 228,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 228,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1844:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1866:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1911:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:1"
									},
									"scope": 228,
									"src": "1809:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2679:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2701:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2721:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:1"
									},
									"scope": 228,
									"src": "2644:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3526:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3568:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:1"
									},
									"scope": 228,
									"src": "3495:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4079:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4091:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:1"
									},
									"scope": 228,
									"src": "4062:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4464:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4482:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:1"
									},
									"scope": 228,
									"src": "4437:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4678:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4718:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:1"
									},
									"scope": 228,
									"src": "4657:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4911:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4926:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4967:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:1"
									},
									"scope": 228,
									"src": "4885:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "250:4725:1",
							"usedErrors": []
						}
					],
					"src": "108:4868:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 231,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 236,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 235,
												"id": 238,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 250,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 245,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 244,
												"id": 247,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 250,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 251,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							262
						]
					},
					"id": 263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 262,
							"linearizedBaseContracts": [
								262
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 255,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 262,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 263,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"trustless cross-chain/trading pair formation/Battlegame.sol": {
				"ast": {
					"absolutePath": "trustless cross-chain/trading pair formation/Battlegame.sol",
					"exportedSymbols": {
						"BattleGame": [
							687
						],
						"Context": [
							250
						],
						"IERC165": [
							262
						],
						"IERC721": [
							228
						],
						"Ownable": [
							112
						]
					},
					"id": 688,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 229,
							"src": "25:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 113,
							"src": "84:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 267,
										"name": "Ownable",
										"nameLocations": [
											"161:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "161:7:4"
									},
									"id": 268,
									"nodeType": "InheritanceSpecifier",
									"src": "161:7:4"
								}
							],
							"canonicalName": "BattleGame",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 687,
							"linearizedBaseContracts": [
								687,
								112,
								250
							],
							"name": "BattleGame",
							"nameLocation": "147:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 271,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "191:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "176:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$228",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 270,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 269,
											"name": "IERC721",
											"nameLocations": [
												"176:7:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 228,
											"src": "176:7:4"
										},
										"referencedDeclaration": 228,
										"src": "176:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$228",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e00974ff",
									"id": 273,
									"mutability": "mutable",
									"name": "trustedNFTManagement",
									"nameLocation": "215:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "200:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "200:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 276,
									"mutability": "constant",
									"name": "RANDOM_MIN",
									"nameLocation": "266:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "241:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "241:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3830",
										"id": 275,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80_by_1",
											"typeString": "int_const 80"
										},
										"value": "80"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 279,
									"mutability": "constant",
									"name": "RANDOM_MAX",
									"nameLocation": "312:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "287:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 277,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 278,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "325:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "BattleGame.PlayerData",
									"id": 288,
									"members": [
										{
											"constant": false,
											"id": 281,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "370:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "363:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 280,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "363:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 283,
											"mutability": "mutable",
											"name": "attack",
											"nameLocation": "392:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "384:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "384:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 285,
											"mutability": "mutable",
											"name": "defense",
											"nameLocation": "416:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "408:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 284,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "408:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 287,
											"mutability": "mutable",
											"name": "experience",
											"nameLocation": "441:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "433:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 286,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "433:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PlayerData",
									"nameLocation": "342:10:4",
									"nodeType": "StructDefinition",
									"scope": 687,
									"src": "335:123:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0aec4ed1",
									"id": 293,
									"mutability": "mutable",
									"name": "playerData",
									"nameLocation": "502:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "464:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
										"typeString": "mapping(uint256 => struct BattleGame.PlayerData)"
									},
									"typeName": {
										"id": 292,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 289,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "472:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "464:30:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
											"typeString": "mapping(uint256 => struct BattleGame.PlayerData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 291,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 290,
												"name": "PlayerData",
												"nameLocations": [
													"483:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "483:10:4"
											},
											"referencedDeclaration": 288,
											"src": "483:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
												"typeString": "struct BattleGame.PlayerData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "552:43:4",
										"statements": [
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "562:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$228",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 300,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "576:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 299,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "568:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$228_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "568:20:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$228",
															"typeString": "contract IERC721"
														}
													},
													"src": "562:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$228",
														"typeString": "contract IERC721"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "562:26:4"
											}
										]
									},
									"id": 305,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "539:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "531:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:21:4"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:0:4"
									},
									"scope": 687,
									"src": "519:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "649:122:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 315,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "701:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "707:9:4",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "701:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 313,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "684:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "688:12:4",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "684:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "684:33:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 312,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "674:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "674:44:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "666:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 310,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "666:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "666:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 320,
																			"name": "RANDOM_MAX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 279,
																			"src": "723:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 321,
																			"name": "RANDOM_MIN",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 276,
																			"src": "736:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "723:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "749:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "723:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "722:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "666:85:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 327,
														"name": "RANDOM_MIN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "754:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "666:98:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 309,
												"id": 329,
												"nodeType": "Return",
												"src": "659:105:4"
											}
										]
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "random",
									"nameLocation": "609:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:4"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:4"
									},
									"scope": 687,
									"src": "600:171:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "848:955:4",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "player1",
														"nameLocation": "1007:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "988:26:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
															"typeString": "struct BattleGame.PlayerData"
														},
														"typeName": {
															"id": 339,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 338,
																"name": "PlayerData",
																"nameLocations": [
																	"988:10:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 288,
																"src": "988:10:4"
															},
															"referencedDeclaration": 288,
															"src": "988:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																"typeString": "struct BattleGame.PlayerData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"baseExpression": {
														"id": 341,
														"name": "playerData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "1017:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
															"typeString": "mapping(uint256 => struct BattleGame.PlayerData storage ref)"
														}
													},
													"id": 343,
													"indexExpression": {
														"id": 342,
														"name": "tokenId1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "1028:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1017:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PlayerData_$288_storage",
														"typeString": "struct BattleGame.PlayerData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "988:49:4"
											},
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "player2",
														"nameLocation": "1066:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "1047:26:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
															"typeString": "struct BattleGame.PlayerData"
														},
														"typeName": {
															"id": 346,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 345,
																"name": "PlayerData",
																"nameLocations": [
																	"1047:10:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 288,
																"src": "1047:10:4"
															},
															"referencedDeclaration": 288,
															"src": "1047:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																"typeString": "struct BattleGame.PlayerData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"baseExpression": {
														"id": 348,
														"name": "playerData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "1076:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
															"typeString": "mapping(uint256 => struct BattleGame.PlayerData storage ref)"
														}
													},
													"id": 350,
													"indexExpression": {
														"id": 349,
														"name": "tokenId2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1087:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1076:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PlayerData_$288_storage",
														"typeString": "struct BattleGame.PlayerData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1047:49:4"
											},
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "r1",
														"nameLocation": "1114:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "1106:10:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1106:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 354,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1119:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1106:21:4"
											},
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "r2",
														"nameLocation": "1145:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "1137:10:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 359,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1150:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:21:4"
											},
											{
												"assignments": [
													363
												],
												"declarations": [
													{
														"constant": false,
														"id": 363,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "1176:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "1169:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 362,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1169:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 366,
																						"name": "player1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 340,
																						"src": "1188:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																							"typeString": "struct BattleGame.PlayerData storage pointer"
																						}
																					},
																					"id": 367,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1196:6:4",
																					"memberName": "attack",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 283,
																					"src": "1188:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"expression": {
																						"id": 368,
																						"name": "player1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 340,
																						"src": "1205:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																							"typeString": "struct BattleGame.PlayerData storage pointer"
																						}
																					},
																					"id": 369,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1213:7:4",
																					"memberName": "defense",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 285,
																					"src": "1205:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1188:32:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"expression": {
																					"id": 371,
																					"name": "player1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 340,
																					"src": "1223:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																						"typeString": "struct BattleGame.PlayerData storage pointer"
																					}
																				},
																				"id": 372,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1231:10:4",
																				"memberName": "experience",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 287,
																				"src": "1223:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1188:53:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 374,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1187:55:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 375,
																	"name": "r1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "1245:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1187:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1180:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 364,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1180:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1180:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 380,
																						"name": "player2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 347,
																						"src": "1259:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																							"typeString": "struct BattleGame.PlayerData storage pointer"
																						}
																					},
																					"id": 381,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1267:6:4",
																					"memberName": "attack",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 283,
																					"src": "1259:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"expression": {
																						"id": 382,
																						"name": "player2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 347,
																						"src": "1276:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																							"typeString": "struct BattleGame.PlayerData storage pointer"
																						}
																					},
																					"id": 383,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1284:7:4",
																					"memberName": "defense",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 285,
																					"src": "1276:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1259:32:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"expression": {
																					"id": 385,
																					"name": "player2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 347,
																					"src": "1294:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																						"typeString": "struct BattleGame.PlayerData storage pointer"
																					}
																				},
																				"id": 386,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1302:10:4",
																				"memberName": "experience",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 287,
																				"src": "1294:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1259:53:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 388,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1258:55:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 389,
																	"name": "r2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "1316:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1258:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1251:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 378,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1251:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1251:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1180:139:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1169:150:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 394,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "1334:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1338:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1334:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 470,
													"nodeType": "Block",
													"src": "1572:225:4",
													"statements": [
														{
															"expression": {
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 434,
																		"name": "player1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1586:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1594:6:4",
																	"memberName": "attack",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 283,
																	"src": "1586:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1604:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1586:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 439,
															"nodeType": "ExpressionStatement",
															"src": "1586:19:4"
														},
														{
															"expression": {
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 440,
																		"name": "player1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1619:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1627:7:4",
																	"memberName": "defense",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 285,
																	"src": "1619:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1638:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1619:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 445,
															"nodeType": "ExpressionStatement",
															"src": "1619:20:4"
														},
														{
															"expression": {
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 446,
																		"name": "player1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1653:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1661:10:4",
																	"memberName": "experience",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 287,
																	"src": "1653:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3530",
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "1653:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 451,
															"nodeType": "ExpressionStatement",
															"src": "1653:24:4"
														},
														{
															"expression": {
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 452,
																		"name": "player2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "1692:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1700:6:4",
																	"memberName": "attack",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 283,
																	"src": "1692:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1710:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1692:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 457,
															"nodeType": "ExpressionStatement",
															"src": "1692:20:4"
														},
														{
															"expression": {
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 458,
																		"name": "player2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "1726:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1734:7:4",
																	"memberName": "defense",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 285,
																	"src": "1726:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1745:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1726:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 463,
															"nodeType": "ExpressionStatement",
															"src": "1726:21:4"
														},
														{
															"expression": {
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 464,
																		"name": "player2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "1761:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1769:10:4",
																	"memberName": "experience",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 287,
																	"src": "1761:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313030",
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1783:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1761:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 469,
															"nodeType": "ExpressionStatement",
															"src": "1761:25:4"
														}
													]
												},
												"id": 471,
												"nodeType": "IfStatement",
												"src": "1330:467:4",
												"trueBody": {
													"id": 433,
													"nodeType": "Block",
													"src": "1341:225:4",
													"statements": [
														{
															"expression": {
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 397,
																		"name": "player1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1355:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1363:6:4",
																	"memberName": "attack",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 283,
																	"src": "1355:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1373:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1355:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 402,
															"nodeType": "ExpressionStatement",
															"src": "1355:20:4"
														},
														{
															"expression": {
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 403,
																		"name": "player1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1389:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1397:7:4",
																	"memberName": "defense",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 285,
																	"src": "1389:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1408:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1389:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 408,
															"nodeType": "ExpressionStatement",
															"src": "1389:21:4"
														},
														{
															"expression": {
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 409,
																		"name": "player1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1424:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1432:10:4",
																	"memberName": "experience",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 287,
																	"src": "1424:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313030",
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1446:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1424:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "1424:25:4"
														},
														{
															"expression": {
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 415,
																		"name": "player2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "1464:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1472:6:4",
																	"memberName": "attack",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 283,
																	"src": "1464:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1482:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1464:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"nodeType": "ExpressionStatement",
															"src": "1464:19:4"
														},
														{
															"expression": {
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 421,
																		"name": "player2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "1497:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1505:7:4",
																	"memberName": "defense",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 285,
																	"src": "1497:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1516:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1497:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "1497:20:4"
														},
														{
															"expression": {
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 427,
																		"name": "player2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "1531:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData storage pointer"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1539:10:4",
																	"memberName": "experience",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 287,
																	"src": "1531:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3530",
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1553:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "1531:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 432,
															"nodeType": "ExpressionStatement",
															"src": "1531:24:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b67836f8",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playerVersusPlayer",
									"nameLocation": "786:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "tokenId1",
												"nameLocation": "813:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "805:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "tokenId2",
												"nameLocation": "831:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "823:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:36:4"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:0:4"
									},
									"scope": 687,
									"src": "777:1026:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "1907:797:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "1925:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1917:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1917:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"expression": {
														"id": 485,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "1929:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1938:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1929:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1917:27:4"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "r1",
														"nameLocation": "1962:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1954:10:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1967:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1954:21:4"
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "r2",
														"nameLocation": "1993:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1985:10:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1985:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 495,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1998:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:21:4"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "2024:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "2017:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 498,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2017:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 501,
												"initialValue": {
													"hexValue": "30",
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2028:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2017:12:4"
											},
											{
												"body": {
													"id": 538,
													"nodeType": "Block",
													"src": "2071:160:4",
													"statements": [
														{
															"assignments": [
																514
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 514,
																	"mutability": "mutable",
																	"name": "player",
																	"nameLocation": "2104:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 538,
																	"src": "2085:25:4",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																		"typeString": "struct BattleGame.PlayerData"
																	},
																	"typeName": {
																		"id": 513,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 512,
																			"name": "PlayerData",
																			"nameLocations": [
																				"2085:10:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 288,
																			"src": "2085:10:4"
																		},
																		"referencedDeclaration": 288,
																		"src": "2085:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 520,
															"initialValue": {
																"baseExpression": {
																	"id": 515,
																	"name": "playerData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2113:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
																		"typeString": "mapping(uint256 => struct BattleGame.PlayerData storage ref)"
																	}
																},
																"id": 519,
																"indexExpression": {
																	"baseExpression": {
																		"id": 516,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "2124:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"id": 517,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "2133:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2124:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2113:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PlayerData_$288_storage",
																	"typeString": "struct BattleGame.PlayerData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2085:51:4"
														},
														{
															"expression": {
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 521,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "2150:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 528,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 524,
																									"name": "player",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 514,
																									"src": "2163:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																										"typeString": "struct BattleGame.PlayerData storage pointer"
																									}
																								},
																								"id": 525,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2170:6:4",
																								"memberName": "attack",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 283,
																								"src": "2163:13:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"expression": {
																									"id": 526,
																									"name": "player",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 514,
																									"src": "2179:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																										"typeString": "struct BattleGame.PlayerData storage pointer"
																									}
																								},
																								"id": 527,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2186:7:4",
																								"memberName": "defense",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 285,
																								"src": "2179:14:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2163:30:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"expression": {
																								"id": 529,
																								"name": "player",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "2196:6:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																									"typeString": "struct BattleGame.PlayerData storage pointer"
																								}
																							},
																							"id": 530,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2203:10:4",
																							"memberName": "experience",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 287,
																							"src": "2196:17:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2163:50:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 532,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2162:52:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 533,
																				"name": "r1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "2217:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2162:57:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2155:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 522,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2155:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2155:65:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2150:70:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 537,
															"nodeType": "ExpressionStatement",
															"src": "2150:70:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "2059:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 507,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2063:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2059:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 539,
												"initializationExpression": {
													"assignments": [
														503
													],
													"declarations": [
														{
															"constant": false,
															"id": 503,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2052:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 539,
															"src": "2044:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 502,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2044:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 505,
													"initialValue": {
														"hexValue": "30",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2056:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2044:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2066:3:4",
														"subExpression": {
															"id": 509,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2066:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 511,
													"nodeType": "ExpressionStatement",
													"src": "2066:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2039:192:4"
											},
											{
												"expression": {
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 540,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "2240:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 543,
																				"name": "npcAttack",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "2253:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 544,
																				"name": "npcDefense",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "2265:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2253:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 546,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2252:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 547,
																	"name": "r2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "2279:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2252:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2245:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 541,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "2245:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2245:37:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2240:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "2240:42:4"
											},
											{
												"body": {
													"id": 613,
													"nodeType": "Block",
													"src": "2325:373:4",
													"statements": [
														{
															"assignments": [
																564
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 564,
																	"mutability": "mutable",
																	"name": "player",
																	"nameLocation": "2358:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 613,
																	"src": "2339:25:4",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																		"typeString": "struct BattleGame.PlayerData"
																	},
																	"typeName": {
																		"id": 563,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 562,
																			"name": "PlayerData",
																			"nameLocations": [
																				"2339:10:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 288,
																			"src": "2339:10:4"
																		},
																		"referencedDeclaration": 288,
																		"src": "2339:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																			"typeString": "struct BattleGame.PlayerData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 570,
															"initialValue": {
																"baseExpression": {
																	"id": 565,
																	"name": "playerData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2367:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
																		"typeString": "mapping(uint256 => struct BattleGame.PlayerData storage ref)"
																	}
																},
																"id": 569,
																"indexExpression": {
																	"baseExpression": {
																		"id": 566,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "2378:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 568,
																	"indexExpression": {
																		"id": 567,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "2387:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2378:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2367:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PlayerData_$288_storage",
																	"typeString": "struct BattleGame.PlayerData storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2339:51:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 571,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "2408:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2412:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2408:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 611,
																"nodeType": "Block",
																"src": "2556:132:4",
																"statements": [
																	{
																		"expression": {
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 593,
																					"name": "player",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "2574:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																						"typeString": "struct BattleGame.PlayerData storage pointer"
																					}
																				},
																				"id": 595,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2581:6:4",
																				"memberName": "attack",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 283,
																				"src": "2574:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "3530",
																				"id": 596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2591:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_50_by_1",
																					"typeString": "int_const 50"
																				},
																				"value": "50"
																			},
																			"src": "2574:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 598,
																		"nodeType": "ExpressionStatement",
																		"src": "2574:19:4"
																	},
																	{
																		"expression": {
																			"id": 603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 599,
																					"name": "player",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "2611:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																						"typeString": "struct BattleGame.PlayerData storage pointer"
																					}
																				},
																				"id": 601,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2618:7:4",
																				"memberName": "defense",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 285,
																				"src": "2611:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "3530",
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2629:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_50_by_1",
																					"typeString": "int_const 50"
																				},
																				"value": "50"
																			},
																			"src": "2611:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 604,
																		"nodeType": "ExpressionStatement",
																		"src": "2611:20:4"
																	},
																	{
																		"expression": {
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 605,
																					"name": "player",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "2649:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																						"typeString": "struct BattleGame.PlayerData storage pointer"
																					}
																				},
																				"id": 607,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2656:10:4",
																				"memberName": "experience",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 287,
																				"src": "2649:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "353030",
																				"id": 608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2670:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_500_by_1",
																					"typeString": "int_const 500"
																				},
																				"value": "500"
																			},
																			"src": "2649:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 610,
																		"nodeType": "ExpressionStatement",
																		"src": "2649:24:4"
																	}
																]
															},
															"id": 612,
															"nodeType": "IfStatement",
															"src": "2404:284:4",
															"trueBody": {
																"id": 592,
																"nodeType": "Block",
																"src": "2415:135:4",
																"statements": [
																	{
																		"expression": {
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 574,
																					"name": "player",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "2433:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																						"typeString": "struct BattleGame.PlayerData storage pointer"
																					}
																				},
																				"id": 576,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2440:6:4",
																				"memberName": "attack",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 283,
																				"src": "2433:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "313030",
																				"id": 577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2450:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "2433:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 579,
																		"nodeType": "ExpressionStatement",
																		"src": "2433:20:4"
																	},
																	{
																		"expression": {
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 580,
																					"name": "player",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "2471:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																						"typeString": "struct BattleGame.PlayerData storage pointer"
																					}
																				},
																				"id": 582,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2478:7:4",
																				"memberName": "defense",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 285,
																				"src": "2471:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "313030",
																				"id": 583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2489:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "2471:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 585,
																		"nodeType": "ExpressionStatement",
																		"src": "2471:21:4"
																	},
																	{
																		"expression": {
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 586,
																					"name": "player",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "2510:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
																						"typeString": "struct BattleGame.PlayerData storage pointer"
																					}
																				},
																				"id": 588,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2517:10:4",
																				"memberName": "experience",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 287,
																				"src": "2510:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31303030",
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2531:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			},
																			"src": "2510:25:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 591,
																		"nodeType": "ExpressionStatement",
																		"src": "2510:25:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 556,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "2313:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 557,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2317:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"initializationExpression": {
													"assignments": [
														553
													],
													"declarations": [
														{
															"constant": false,
															"id": 553,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2306:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 614,
															"src": "2298:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 552,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2298:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 555,
													"initialValue": {
														"hexValue": "30",
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2310:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2298:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2320:3:4",
														"subExpression": {
															"id": 559,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "2320:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ExpressionStatement",
													"src": "2320:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2293:405:4"
											}
										]
									},
									"functionSelector": "38a2c0a3",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "playerVersusNPC",
									"nameLocation": "1818:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1851:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1834:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 474,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1834:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 475,
													"nodeType": "ArrayTypeName",
													"src": "1834:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "npcAttack",
												"nameLocation": "1869:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1861:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "npcDefense",
												"nameLocation": "1888:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1880:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:66:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:4"
									},
									"scope": 687,
									"src": "1809:895:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "2789:118:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "2819:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 625,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "2807:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$228",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2811:7:4",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 161,
																	"src": "2807:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2807:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2839:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2831:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2831:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2831:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2807:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e465420646f6573206e6f74206578697374",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2843:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853",
																"typeString": "literal_string \"NFT does not exist\""
															},
															"value": "NFT does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e403a9d7ffdeca555e754beaddbd9e6f34f997c24c017ab0a30199bbea954853",
																"typeString": "literal_string \"NFT does not exist\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2799:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "2799:65:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 637,
														"name": "playerData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2881:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
															"typeString": "mapping(uint256 => struct BattleGame.PlayerData storage ref)"
														}
													},
													"id": 639,
													"indexExpression": {
														"id": 638,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "2892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2881:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PlayerData_$288_storage",
														"typeString": "struct BattleGame.PlayerData storage ref"
													}
												},
												"functionReturnParameters": 623,
												"id": 640,
												"nodeType": "Return",
												"src": "2874:26:4"
											}
										]
									},
									"functionSelector": "0ad4c4f4",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNFTData",
									"nameLocation": "2719:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2738:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2730:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:17:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2770:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PlayerData_$288_memory_ptr",
													"typeString": "struct BattleGame.PlayerData"
												},
												"typeName": {
													"id": 621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 620,
														"name": "PlayerData",
														"nameLocations": [
															"2770:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "2770:10:4"
													},
													"referencedDeclaration": 288,
													"src": "2770:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
														"typeString": "struct BattleGame.PlayerData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:19:4"
									},
									"scope": 687,
									"src": "2710:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "2964:162:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 648,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2982:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2986:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2982:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 650,
																"name": "trustedNFTManagement",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "2996:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2982:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207468652074727573746564204e46544d616e6167656d656e7420636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3018:64:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0",
																"typeString": "literal_string \"Only the trusted NFTManagement contract can call this function\""
															},
															"value": "Only the trusted NFTManagement contract can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b37bfab6be092a1582d4721da48adc127a828c9be0ef5381cf4f8c17e7ea30c0",
																"typeString": "literal_string \"Only the trusted NFTManagement contract can call this function\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2974:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2974:109:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "2974:109:4"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3093:26:4",
													"subExpression": {
														"baseExpression": {
															"id": 655,
															"name": "playerData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "3100:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
																"typeString": "mapping(uint256 => struct BattleGame.PlayerData storage ref)"
															}
														},
														"id": 657,
														"indexExpression": {
															"id": 656,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "3111:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3100:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PlayerData_$288_storage",
															"typeString": "struct BattleGame.PlayerData storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "3093:26:4"
											}
										]
									},
									"functionSelector": "d7b8d485",
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deletePlayerData",
									"nameLocation": "2921:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2946:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2938:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2937:17:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2964:0:4"
									},
									"scope": 687,
									"src": "2912:214:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "3259:61:4",
										"statements": [
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 668,
														"name": "trustedNFTManagement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3269:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 669,
														"name": "_trustedNFTManagement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "3292:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3269:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "3269:44:4"
											}
										]
									},
									"functionSelector": "25cab809",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 666,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 665,
												"name": "onlyOwner",
												"nameLocations": [
													"3249:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3249:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3249:9:4"
										}
									],
									"name": "setTrustedNFTManagement",
									"nameLocation": "3185:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "_trustedNFTManagement",
												"nameLocation": "3217:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "3209:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:31:4"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:4"
									},
									"scope": 687,
									"src": "3176:144:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "3405:35:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 681,
														"name": "playerData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3418:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PlayerData_$288_storage_$",
															"typeString": "mapping(uint256 => struct BattleGame.PlayerData storage ref)"
														}
													},
													"id": 683,
													"indexExpression": {
														"id": 682,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3429:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3418:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PlayerData_$288_storage",
														"typeString": "struct BattleGame.PlayerData storage ref"
													}
												},
												"functionReturnParameters": 680,
												"id": 684,
												"nodeType": "Return",
												"src": "3411:26:4"
											}
										]
									},
									"functionSelector": "5f52789b",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getplayerData",
									"nameLocation": "3334:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3356:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "3348:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:17:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "3386:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PlayerData_$288_memory_ptr",
													"typeString": "struct BattleGame.PlayerData"
												},
												"typeName": {
													"id": 678,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 677,
														"name": "PlayerData",
														"nameLocations": [
															"3386:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "3386:10:4"
													},
													"referencedDeclaration": 288,
													"src": "3386:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PlayerData_$288_storage_ptr",
														"typeString": "struct BattleGame.PlayerData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:19:4"
									},
									"scope": 687,
									"src": "3325:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 688,
							"src": "138:3305:4",
							"usedErrors": []
						}
					],
					"src": "0:3444:4"
				},
				"id": 4
			}
		}
	}
}